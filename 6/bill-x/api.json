{
  "openapi": "3.0.0",
  "info": {
    "description": "API биллинговой системы",
    "version": "1.0.0",
    "title": "Биллинговая система",
    "contact": {
      "email": "api@exosoft.com",
      "name": "developer team"
    }
  },
  "components": {
    "schemas": {
      "RecordID": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID сущности в биллинге",
            "example": 42
          },
          "uuid": {
            "type": "string",
            "description": "UUID сущности в биллинге",
            "example": "96deb923-eea5-4616-9fd1-7c89b3170035"
          },
          "modify_index": {
            "type": "integer",
            "description": "Индекс, который инкрементируется при изменении сущностей в сервисе",
            "example": 142
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "msg": {
                "type": "string",
                "description": "Сообщение об ошибке",
                "example": "Unauthorized"
              }
            }
          }
        }
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "UUID удаленной сущности",
            "example": "1143271e-2346-4547-a9de-dd3a1eb83182"
          }
        }
      },
      "GroupDeleteResponse": {
        "type": "object",
        "properties": {
          "uuids": {
            "type": "array",
            "description": "UUID удаленных сущностей",
            "example": [
              "1143271e-2346-4547-a9de-dd3a1eb83182",
              "1743271e-2346-4547-a9de-dd3a1eb831df"
            ],
            "items": {
              "type": "string",
              "description": "UUID объекта",
              "example": "d08adbe7-5503-435b-9555-2f68d5a8dda7"
            }
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "UUID измененной сущности",
            "example": "1143271e-2346-4547-a9de-dd3a1eb83182"
          },
          "modify_index": {
            "type": "integer",
            "description": "Индекс, который инкрементируется при изменении сущностей в сервисе",
            "example": 142
          }
        }
      },
      "CreateResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "UUID созданной сущности",
            "example": "1143271e-2346-4547-a9de-dd3a1eb83182"
          },
          "modify_index": {
            "type": "integer",
            "description": "Индекс, который инкрементируется при изменении сущностей в сервисе",
            "example": 142
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "enum": [
              "ok"
            ]
          }
        }
      },
      "PeriodType": {
        "type": "string",
        "enum": [
          "day",
          "week",
          "month",
          "year",
          "lifetime",
          "setup"
        ]
      },
      "PaymentListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Payment"
                }
              ]
            }
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "client_uuid": {
            "type": "string",
            "description": "UUID клиента",
            "example": "352731da-f720-46de-8591-f743f3035dc6"
          },
          "amount": {
            "type": "string",
            "description": "Сумма платежа",
            "example": "9999.00"
          },
          "currency": {
            "type": "string",
            "description": "Идентификатор валюты платежа. Не используется на данный момент",
            "example": null
          },
          "create_date": {
            "type": "string",
            "description": "Дата создания",
            "example": "2020-01-02 15:04:05"
          },
          "complete_date": {
            "type": "string",
            "description": "Дата оплаты",
            "example": "2020-01-02 16:14:15"
          },
          "cancel_date": {
            "type": "string",
            "description": "Дата отмены",
            "example": "2020-01-03 01:23:12"
          },
          "cancel_details": {
            "type": "string",
            "description": "Информация содержащая причины отмены платежа",
            "example": "Bank card has expired"
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "payment_method_id": {
            "type": "integer",
            "description": "ID метода оплаты",
            "example": 2
          },
          "cart_uuid": {
            "type": "string",
            "description": "UUID корзины оплаченной данным платежом",
            "example": "d7021ae4-c97c-43fb-86d2-ab8c0229da49"
          },
          "saved_payment_method_id": {
            "type": "integer",
            "description": "ID сохраненного метода оплаты",
            "example": "1061c510-a7c2-4aa3-8bd4-65835aeca062"
          },
          "payment_url": {
            "type": "string",
            "description": "Ссылка на форму оплаты",
            "example": "http://example.com/payment_form"
          },
          "external_id": {
            "type": "string",
            "description": "Идентификатор платежа во внешней системе платежей",
            "example": "279cac10-000f-5000-a000-151c856c7be1"
          },
          "expire_promise_date": {
            "type": "string",
            "description": "Дата действия обещанного платежа",
            "example": null
          }
        }
      },
      "RefundListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Refund"
                }
              ]
            }
          }
        }
      },
      "Refund": {
        "type": "object",
        "properties": {
          "client_uuid": {
            "type": "string",
            "description": "UUID клиента",
            "example": "352731da-f720-46de-8591-f743f3035dc6"
          },
          "amount": {
            "type": "string",
            "description": "Сумма возврата",
            "example": "23.10"
          },
          "currency": {
            "type": "string",
            "description": "Идентификатор валюты возврата. Не используется на данный момент",
            "example": null
          },
          "create_date": {
            "type": "string",
            "description": "Дата создания",
            "example": "2020-01-02 15:04:05"
          },
          "complete_date": {
            "type": "string",
            "description": "Дата завершения возврата",
            "example": "2020-01-05 17:01:15"
          },
          "cancel_date": {
            "type": "string",
            "description": "Дата отмены",
            "example": "2020-01-05 19:21:22"
          },
          "status": {
            "$ref": "#/components/schemas/RefundStatus"
          },
          "payment_method_id": {
            "type": "integer",
            "description": "Идентификатор метода оплаты, при помощи которого создан возврат. В будущем может отсутствовать",
            "example": 3
          }
        }
      },
      "SavedMethodListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/SavedMethod"
                }
              ]
            }
          }
        }
      },
      "SavedMethod": {
        "type": "object",
        "properties": {
          "client_uuid": {
            "type": "string",
            "description": "UUID клиента",
            "example": "352731da-f720-46de-8591-f743f3035dc6"
          },
          "name": {
            "type": "string",
            "description": "Наименование сохраненного метода оплаты",
            "example": "Моя банковская карта"
          },
          "token": {
            "type": "string",
            "description": "Секретный ключ, при помощи которого осуществляется списание средств без подтверждения клиента",
            "example": "xxxxxx"
          },
          "payment_method_id": {
            "type": "integer",
            "description": "ID метода оплаты",
            "example": "2"
          },
          "url": {
            "type": "string",
            "description": "URL ведущий на страницу настройки сохраненного способа оплаты",
            "example": "http://example.com"
          },
          "status": {
            "$ref": "#/components/schemas/SavedMethodStatus"
          }
        }
      },
      "MethodListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Method"
                }
              ]
            }
          }
        }
      },
      "Method": {
        "type": "object",
        "properties": {
          "company_uuid": {
            "type": "string",
            "description": "UUID компании для которой настроен метод оплаты",
            "example": "46c75b58-b799-46be-9126-b7762d0d2e01"
          },
          "name": {
            "type": "string",
            "description": "Наименование",
            "example": "Банковские карты"
          },
          "payment_system": {
            "type": "string",
            "description": "Платежная система",
            "example": "cloudpayments",
            "enum": [
              "yookassa",
              "cloudpayments",
              "bankwire"
            ]
          },
          "success_url": {
            "type": "string",
            "description": "Страница возврата при успешной оплате",
            "example": "http://example.com/success"
          },
          "fail_url": {
            "type": "string",
            "description": "Страница возврата при неуспешной оплате",
            "example": "http://example.com/fail"
          },
          "pending_url": {
            "type": "string",
            "description": "Страница возврата, если платеж находится в процессе проверки",
            "example": "http://example.com/url"
          },
          "params": {
            "type": "object",
            "description": "Параметры необходимые для определенного типа метода оплаты",
            "example": {
              "url": "https://api.cloudpayments.ru",
              "public_id": "XXXXX",
              "api_secret": "XXXXX"
            }
          }
        }
      },
      "RefundStatus": {
        "type": "string",
        "description": "Статус возврата платежа. Может принимать значения: new - новый, process - обрабатывается, refunded - возвращен, canceled - отменен",
        "enum": [
          "new",
          "process",
          "refunded",
          "canceled"
        ]
      },
      "PaymentStatus": {
        "type": "string",
        "description": "Статус платежа. Может принимать значения: new - новый, in_pay - оплачивается, paid - оплачен, canceled - отменен, refunded - возвращен, promised - обещанный платеж",
        "enum": [
          "new",
          "in_pay",
          "paid",
          "canceled",
          "refunded"
        ]
      },
      "SavedMethodStatus": {
        "type": "string",
        "description": "Статус сохраненного метода оплаты. Может принимать значения: enabled - включен, error - ошибка при настройке",
        "enum": [
          "enabled",
          "error"
        ]
      },
      "ReceiptListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Receipt"
                }
              ]
            }
          }
        }
      },
      "Receipt": {
        "type": "object",
        "properties": {
          "client_uuid": {
            "type": "string",
            "description": "UUID клиента",
            "example": "19cfacf1-d7b2-471f-9626-9eb000975262"
          },
          "cash_register_id": {
            "type": "integer",
            "description": "ID онлайн-кассы",
            "example": 42
          },
          "create_date": {
            "type": "string",
            "description": "Дата создания",
            "example": "2020-12-01 10:10:12"
          },
          "send_date": {
            "type": "string",
            "description": "Дата отправки",
            "example": "2020-12-01 13:14:17"
          },
          "complete_date": {
            "type": "string",
            "description": "Дата регистрации",
            "example": "2020-12-01 13:17:11"
          },
          "type": {
            "type": "string",
            "description": "Тип чека",
            "enum": [
              "sell",
              "sell_refund",
              "sell_correction",
              "buy",
              "buy_refund",
              "buy_correction"
            ]
          },
          "payment_type": {
            "type": "string",
            "description": "Тип оплаты чека. Может принимать значения: ecash - Оплата электронными деньгами (безналичный), advance - Авансовый платеж, credit - Кредит",
            "enum": [
              "ecash",
              "advance",
              "credit"
            ]
          },
          "status": {
            "type": "string",
            "description": "Статус чека",
            "enum": [
              "new",
              "processing",
              "registered",
              "failed"
            ]
          },
          "amount": {
            "type": "string",
            "description": "Сумма",
            "example": "100.10"
          },
          "external_id": {
            "type": "string",
            "description": "Идентификатор чека во внешней системе",
            "example": "bc4a5d50-2c8a-47a6-9d02-1c074d6d45a7"
          },
          "fn_number": {
            "type": "string",
            "description": "Номер фиксального накопителя",
            "example": "9999078900005854"
          },
          "fiscal_document_number": {
            "type": "string",
            "description": "Фискальный номер документа",
            "example": "81130"
          },
          "fiscal_document_attribute": {
            "type": "string",
            "description": "Фискальный признак документа",
            "example": "2934987938"
          },
          "error_message": {
            "type": "string",
            "description": "Сообщение об ошибке при обработке чека во внешней системе",
            "example": null
          }
        }
      },
      "ReceiptItemListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/ReceiptItem"
                }
              ]
            }
          }
        }
      },
      "ReceiptItem": {
        "type": "object",
        "properties": {
          "receipt_id": {
            "type": "integer",
            "description": "ID чека",
            "example": 42
          },
          "name": {
            "type": "string",
            "description": "Наименование позиции",
            "example": "Телематические услуги - Месяц"
          },
          "price": {
            "type": "string",
            "description": "Стоимость",
            "example": "100.10"
          },
          "quantity": {
            "type": "integer",
            "description": "Количество",
            "example": 2
          },
          "amount": {
            "type": "string",
            "description": "200.20"
          },
          "tax_rate": {
            "type": "string",
            "description": "Налоговая ставка (НДС)",
            "example": "20.0"
          },
          "tax_amount": {
            "type": "string",
            "description": "Сумма налога",
            "example": "4.00"
          },
          "payment_method": {
            "type": "string",
            "description": "Признак способа расчета",
            "enum": [
              "full_payment",
              "credit",
              "credit_payment"
            ]
          },
          "payment_object": {
            "type": "string",
            "description": "Признак предмета расчета",
            "enum": [
              "intellectual_activity"
            ]
          }
        }
      },
      "CashRegister": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование онлайн кассы",
            "example": "Касса #1"
          },
          "module": {
            "type": "string",
            "description": "Система онлайн кассы",
            "enum": [
              "atol",
              "cloudkassir"
            ]
          },
          "params": {
            "description": "Параметры необходимые для интегарции с системой онлайн кассы",
            "type": "object"
          }
        }
      },
      "EditCashRegister": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование онлайн кассы",
            "example": "Касса #1"
          },
          "params": {
            "description": "Параметры необходимые для интегарции с системой онлайн кассы",
            "type": "object"
          }
        }
      },
      "ServiceListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Service"
                }
              ]
            }
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tariff_uuid": {
            "type": "string",
            "description": "UUID тарифа",
            "example": "d93b7672-8fa2-4daa-a16d-24572c805ab9"
          },
          "price_uuid": {
            "type": "string",
            "description": "UUID цены",
            "example": "9124a6f4-ea34-4a59-88de-6fd890e5d41f"
          },
          "period_type": {
            "$ref": "#/components/schemas/PeriodType"
          },
          "period_count": {
            "type": "integer",
            "description": "Количество периодов на которые заказана услуга",
            "example": 12
          },
          "saved_payment_method_uuid": {
            "type": "string",
            "description": "UUID сохраненного метода оплаты с которого производится оплата при продлении",
            "example": "0ae1484e-6fa5-45a3-8b2c-9c201d42078a"
          },
          "create_date": {
            "type": "string",
            "description": "Дата создания",
            "example": "2020-12-10 10:01:21"
          },
          "open_date": {
            "type": "string",
            "description": "Дата открытия",
            "example": "2020-12-10 15:02:12"
          },
          "expire_date": {
            "type": "string",
            "description": "Дата истечения действия услуги",
            "example": "2020-12-22 00:00:00"
          },
          "change_status_date": {
            "type": "string",
            "description": "Дата изменения статуса",
            "example": "2020-12-20 16:23:54"
          },
          "auto_prolong": {
            "type": "boolean",
            "description": "Флаг автопродления услуги"
          },
          "status": {
            "$ref": "#/components/schemas/ServiceStatus"
          },
          "params": {
            "type": "object"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий",
            "example": "Это просто комментарий"
          },
          "client_uuid": {
            "type": "string",
            "description": "UUID клиента",
            "example": "ffcca32c-8857-47df-bad9-d8f8ef6e48a1"
          },
          "next_tariff_uuid": {
            "type": "string",
            "description": "UUID тарифа, который будет применен при следующем продлении",
            "example": "d93b7672-8fa2-4daa-a16d-24572c805ab9"
          },
          "next_price_uuid": {
            "type": "string",
            "description": "UUID цены, которая будет применена при следующем продлении",
            "example": "9124a6f4-ea34-4a59-88de-6fd890e5d41f"
          },
          "operation_uuid": {
            "type": "string",
            "description": "UUID операции на основании которой действует услуга",
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead"
          }
        }
      },
      "ModuleListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Module"
                }
              ]
            }
          }
        }
      },
      "Module": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование модуля обработки",
            "example": "Manual processing"
          },
          "params": {
            "type": "object"
          }
        }
      },
      "TaskListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string"
          },
          "modify_index": {
            "type": "integer"
          },
          "service_id": {
            "type": "integer"
          },
          "processed": {
            "type": "boolean"
          },
          "old_expire_date": {
            "type": "string"
          }
        }
      },
      "ServiceStatus": {
        "type": "string",
        "description": "- \"ordered\" - Услуга заказана\n- \"processing\" - Услуга находится в процессе обработки (открывается, продляется, закрывается)\n- \"active\" - Услуга активна\n- \"stopped\" - Услуга остановлена\n- \"closed\" - Услуга удалена\n",
        "enum": [
          "ordered",
          "processing",
          "active",
          "stopped",
          "closed"
        ]
      },
      "AutoProlong": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "auto_prolong_days": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": -7,
              "maximum": 30,
              "description": "Номер дня относительно даты остановки, в который произойдет автоматическое списание средств для продления услуги"
            }
          },
          "change_tariff_days": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 30,
              "description": "Номер дня относительно даты остановки, в который произойдет автоматическое списание средств для отложенной смены тарифа"
            }
          }
        }
      },
      "ClientListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientWithUUID"
            }
          }
        }
      },
      "ClientWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/Client"
          }
        ]
      },
      "Client": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "email",
            "example": "example@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Телефон",
            "example": "7 (999) 999-99-99"
          },
          "company_uuid": {
            "type": "string",
            "description": "UUID компании, которая обслуживает клиента",
            "example": "309e0c3b-1eed-40aa-b20f-967284154b6c"
          },
          "first_name": {
            "type": "string",
            "description": "Имя",
            "example": "Иван"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество",
            "example": "Иванович"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия",
            "example": "Иван"
          },
          "type": {
            "type": "string",
            "description": "Тип клиента. Может принимать значения: individual (физическое лицо), legal (Юридическое лицо), sole_proprietor (Индивидуальный предприниматель) Значение по-умолчанию: individual",
            "enum": [
              "individual",
              "legal",
              "sole_proprietor"
            ]
          },
          "create_date": {
            "type": "string",
            "description": "Дата создания",
            "example": "2020-01-01 13:23:10"
          },
          "referer_group_id": {
            "type": "integer",
            "description": "Идентификатор реферальной группы. Не используется.",
            "example": null
          },
          "person": {
            "type": "string",
            "description": "Контактное лицо",
            "example": null
          },
          "company_name": {
            "type": "string",
            "description": "Наименование компании клиента",
            "example": "ИП Петров"
          },
          "country_legal_uuid": {
            "type": "string",
            "description": "Юридический адрес (страна - UUID в биллинге)",
            "example": "09213c71-ba45-4362-acd1-bfbd6f4db972"
          },
          "city_legal": {
            "type": "string",
            "description": "Юридический адрес (город)",
            "example": "г. Балашиха"
          },
          "address_legal": {
            "type": "string",
            "description": "Юридический адрес (улица, дом, офис)",
            "example": "Пушкина ул., д. 20"
          },
          "post_code_legal": {
            "type": "string",
            "description": "Юридический адрес (почтовый индекс)",
            "example": "143930"
          },
          "country_physical_uuid": {
            "type": "string",
            "description": "Физический адрес (страна - UUID в биллинге)",
            "example": "09213c71-ba45-4362-acd1-bfbd6f4db972"
          },
          "city_physical": {
            "type": "string",
            "description": "Физический адрес (город)",
            "example": "г. Балашиха"
          },
          "address_physical": {
            "type": "string",
            "description": "Физический адрес (улица, дом, офис)",
            "example": "Пушкина ул., д. 20"
          },
          "post_code_physical": {
            "type": "string",
            "description": "Физический адрес (почтовый индекс)",
            "example": "143930"
          },
          "inn": {
            "type": "string",
            "description": "ИНН",
            "example": "7308052357"
          },
          "kpp": {
            "type": "string",
            "description": "КПП",
            "example": "693901930"
          },
          "ogrn": {
            "type": "string",
            "description": "ОГРН",
            "example": null
          },
          "bank_name": {
            "type": "string",
            "description": "Наименование банка, в котором находится расчетный счет",
            "example": "Байкальский Банк ПАО Корона"
          },
          "bik": {
            "type": "string",
            "description": "БИК",
            "example": "496451317"
          },
          "settlement_account": {
            "type": "string",
            "description": "Расчетный счет",
            "example": "40584749900000009046"
          },
          "correspondent_account": {
            "type": "string",
            "description": "Корреспондентский счет",
            "example": "50388261300000002828"
          }
        }
      },
      "CompanyListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyWithUUID"
            }
          }
        }
      },
      "CompanyWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/Company"
          }
        ]
      },
      "Company": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование компании",
            "example": "АО Компания"
          },
          "email": {
            "type": "string",
            "description": "Контактный email",
            "example": "example@mail.ru"
          },
          "phone": {
            "type": "string",
            "description": "Контактный телефон",
            "example": "7 (999) 999-99-99"
          },
          "fax": {
            "type": "string",
            "description": "Факс",
            "example": "7 (999) 999-99-99"
          },
          "site_url": {
            "type": "string",
            "description": "Сайт компании",
            "example": "example.com"
          },
          "type": {
            "type": "string",
            "description": "Тип компании. Может принимать значения: legal (юридическое лицо), sole_proprietor (индивидуальный предприниматель). Значение по-умолчанию: legal",
            "enum": [
              "legal",
              "sole_proprietor"
            ]
          },
          "personal_account": {
            "type": "boolean",
            "description": "Возможность использования клиентами лицевого счета"
          },
          "time_zone_name": {
            "type": "string",
            "description": "Часовой пояс",
            "example": "Asia/Irkutsk"
          },
          "payment_description": {
            "type": "string",
            "description": "Назначение авансового платежа",
            "example": null
          },
          "country_legal_uuid": {
            "type": "string",
            "description": "Юридический адрес (страна - uuid в биллинге)",
            "example": "09213c71-ba45-4362-acd1-bfbd6f4db972"
          },
          "city_legal": {
            "type": "string",
            "description": "Юридический адрес (город)",
            "example": "г. Балашиха"
          },
          "address_legal": {
            "type": "string",
            "description": "Юридический адрес (улица, дом, офис)",
            "example": "Пушкина ул., д. 20"
          },
          "post_code_legal": {
            "type": "string",
            "description": "Юридический адрес (почтовый индекс)",
            "example": "143930"
          },
          "country_physical_uuid": {
            "type": "string",
            "description": "Физический адрес (страна - uuid в биллинге)",
            "example": "09213c71-ba45-4362-acd1-bfbd6f4db972"
          },
          "city_physical": {
            "type": "string",
            "description": "Физический адрес (город)",
            "example": "г. Балашиха"
          },
          "address_physical": {
            "type": "string",
            "description": "Физический адрес (улица, дом, офис)",
            "example": "Пушкина ул., д. 20"
          },
          "post_code_physical": {
            "type": "string",
            "description": "Физический адрес (почтовый индекс)",
            "example": "143930"
          },
          "inn": {
            "type": "string",
            "description": "ИНН",
            "example": "7308052357"
          },
          "kpp": {
            "type": "string",
            "description": "КПП",
            "example": "693901930"
          },
          "ogrn": {
            "type": "string",
            "description": "ОГРН",
            "example": null
          },
          "bank_name": {
            "type": "string",
            "description": "Наименование банка, в котором находится расчетный счет",
            "example": "Байкальский Банк ПАО Корона"
          },
          "bik": {
            "type": "string",
            "description": "БИК",
            "example": "496451317"
          },
          "settlement_account": {
            "type": "string",
            "description": "Расчетный счет",
            "example": "40584749900000009046"
          },
          "correspondent_account": {
            "type": "string",
            "description": "Корреспондентский счет",
            "example": "50388261300000002828"
          },
          "registration_date": {
            "type": "string",
            "description": "Дата основания",
            "example": "1997-10-01"
          },
          "base_action": {
            "type": "string",
            "description": "Основание действия",
            "example": null
          },
          "head_job_title": {
            "type": "string",
            "description": "Должность руководителя",
            "example": "Генеральный директор"
          },
          "head_job_title_genetive": {
            "type": "string",
            "description": "Должность руководителя (род.падеж). На данный момент не используется",
            "example": null
          },
          "head_job_title_dative": {
            "type": "string",
            "description": "Должность руководителя (дат.падеж). На данный момент не используется",
            "example": null
          },
          "head_name": {
            "type": "string",
            "description": "ФИО руководителя",
            "example": "Вятт П.В."
          },
          "head_name_genetive": {
            "type": "string",
            "description": "ФИО руководителя (род.падеж). На данный момент не используется",
            "example": null
          },
          "head_name_dative": {
            "type": "string",
            "description": "ФИО руководителя (дат.падеж). На данный момент не используется",
            "example": null
          },
          "accountant_name": {
            "type": "string",
            "description": "ФИО главного бухгалтера",
            "example": "Карлюк С.Д."
          },
          "accountant_name_genetive": {
            "type": "string",
            "description": "ФИО главного бухгалтера (род.падеж). На данный момент не используется",
            "example": null
          },
          "accountant_name_dative": {
            "type": "string",
            "description": "ФИО главного бухгалтера (дат.падеж). На данный момент не используется",
            "example": null
          }
        }
      },
      "GroupListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "Group": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Клиенты с лицевым счетом",
                "description": "Наименование группы"
              }
            }
          }
        ]
      },
      "CountryListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Country"
            }
          }
        }
      },
      "Country": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название страны"
              },
              "iso2": {
                "type": "string",
                "description": "Двухбуквенный ISO код страны",
                "example": "RU"
              },
              "iso3": {
                "type": "string",
                "description": "Трехбуквенный ISO код страны",
                "example": "RUS"
              },
              "phone_code": {
                "type": "integer",
                "description": "Код номера телефона",
                "example": 7
              },
              "phone_format": {
                "type": "string",
                "description": "Формат номера телефона",
                "example": "(999) 999-99-99"
              }
            }
          }
        ]
      },
      "DiscountListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountWithUUID"
            }
          }
        }
      },
      "DiscountWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/Discount"
          }
        ]
      },
      "Discount": {
        "type": "object",
        "required": [
          "name",
          "object_type",
          "object_uuid",
          "from_date",
          "validity"
        ],
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование",
            "example": "Новая скидка"
          },
          "object_type": {
            "type": "string",
            "description": "Тип объекта на который распространяется скидка",
            "example": "tariff",
            "enum": [
              "product",
              "tariff"
            ]
          },
          "object_uuid": {
            "type": "string",
            "description": "UUID объекта",
            "example": "504f4a3f-4cb8-49dc-a6f1-3b9e8d7e7a92"
          },
          "from_date": {
            "type": "string",
            "description": "Дата с которой действует скидка",
            "example": "2020-02-04 00:00:00"
          },
          "to_date": {
            "type": "string",
            "description": "Дата по которую действует скидка",
            "example": "2022-02-04 00:00:00"
          },
          "validity": {
            "type": "string",
            "description": "Тип срока действия скидки для услуги Может принимать значения: discount_period - в течение действия скидки, service_period - на весь период услуги, special_period - определенный срок",
            "enum": [
              "discount_period",
              "service_period",
              "special_period"
            ]
          },
          "special_period_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PeriodType"
              }
            ],
            "description": "Тип периода определенного срока. Не использовать! Данная функциональность не реализована, при наличии этого поля в запросе вернется ошибка",
            "example": null
          },
          "special_period_count": {
            "type": "integer",
            "description": "Количество периодов определенного срока. Не использовать! Данная функциональность не реализована, при наличии этого поля в запросе вернется ошибка",
            "example": null
          },
          "canceled": {
            "type": "boolean",
            "description": "Признак отключеной скидки. Такая скидка не учитывается в расчетах",
            "example": false
          }
        }
      },
      "DiscountConditionListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountConditionWithUUID"
            }
          }
        }
      },
      "DiscountConditionWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/DiscountCondition"
          }
        ]
      },
      "DiscountCondition": {
        "type": "object",
        "required": [
          "condition_type"
        ],
        "additionalProperties": false,
        "properties": {
          "condition_type": {
            "type": "string",
            "description": "Тип условия. Всего есть 3 варианта: group - клиент состоит в определенной группе, company - клиент относится к определенной компании, register_date - дата регистрации клиента больше, меньше или равна определенной даты",
            "enum": [
              "group",
              "company",
              "register_date"
            ],
            "example": "register_date"
          },
          "group_uuid": {
            "type": "string",
            "description": "UUID группы, в которую должен входить клиент для получения скидки (если тип условия - group)",
            "example": null
          },
          "company_uuid": {
            "type": "string",
            "description": "UUID компании, к которой должен относиться клиент для получения скидки (если тип условия - company)",
            "example": null
          },
          "compare_date": {
            "type": "string",
            "description": "Дата, с которой происходит сравнение даты регистрации клиента для получения скидки (если тип условия - register_date)",
            "example": "2020-02-04"
          },
          "comparator": {
            "type": "string",
            "description": "Оператор сравнения даты compare_date и даты регистрации клиента (если тип условия - register_date). Есть несколько вариантов: EQ - равно, LE - меньше или равно, LT - строго меньше, GE - больше или равно, GT - строго больше",
            "enum": [
              "EQ",
              "LE",
              "LT",
              "GE",
              "GT"
            ],
            "example": "GE"
          }
        }
      },
      "DiscountPaymentTypeListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountPaymentTypeWithUUID"
            }
          }
        }
      },
      "DiscountPaymentTypeWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/DiscountPaymentType"
          }
        ]
      },
      "DiscountPaymentType": {
        "type": "object",
        "required": [
          "type",
          "period_type",
          "period_count"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип расчета (percent - процент, special_price - специальная цена)",
            "enum": [
              "special_price",
              "percent"
            ]
          },
          "period_type": {
            "$ref": "#/components/schemas/PeriodType"
          },
          "period_count": {
            "type": "integer",
            "description": "Количество периодов, на которые должна заказываться услуга, чтобы применилась скидка",
            "example": 10
          },
          "price": {
            "type": "string",
            "description": "Специальная цена",
            "example": "9999.99"
          },
          "percent": {
            "type": "string",
            "description": "Процент",
            "example": "99.9"
          }
        }
      },
      "Promocode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Набор символов, который должен указать клиент для активации скидки",
            "example": "BLACKFRIDAY2020"
          },
          "discount_id": {
            "type": "integer",
            "description": "ID скидки, к которой относится промокод",
            "example": 99
          },
          "activation_limit": {
            "type": "integer",
            "description": "Разрешенное количество активаций промокода",
            "example": 500
          },
          "personal_activation_limit": {
            "type": "integer",
            "description": "Количество активаций промокода, разрешенное клиенту",
            "example": 500
          },
          "activation_count": {
            "type": "integer",
            "description": "Количество совершенных активаций промокода",
            "example": 99
          },
          "issue_date": {
            "type": "string",
            "description": "Дата выдачи промокода",
            "format": "date"
          }
        }
      },
      "PromocodeWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/Promocode"
          }
        ]
      },
      "PromocodeListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromocodeWithUUID"
            }
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "Тип события, по-которому будет отправлено уведомление\n  - payment.paid - платеж был оплачен\n  - payment.promised - платеж был зачислен как обещанный\n  - payment.canceled - платеж был отменен\n  - refund.created - возврат был создан, но средства еще могут быть не возвращены\n  - saved_payment_method.enabled - сохраненный способ оплаты был успешно настроен\n  - saved_payment_method.errored - настройка сохраненный способа оплаты была не успешна\n  - saved_payment_method.deleted - сохраненный способ оплаты был удален\n  - service.stopped - услуга остановлена (сотрудником или по истечению срока действия)\n  - service.activated - услуга возобновлена (сотрудником после ручной остановки)\n  - service.canceled - услуга была удалена\n  - service.opened - услуга была активирована после оплаты покупки\n  - service.prolonged - услуга была продлена, после оплаты продления\n  - service.tariff_changed - тариф услуги был изменен\n",
            "enum": [
              "payment.paid",
              "payment.promised",
              "payment.canceled",
              "refund.created",
              "saved_payment_method.enabled",
              "saved_payment_method.errored",
              "saved_payment_method.deleted",
              "service.stopped",
              "service.activated",
              "service.canceled",
              "service.opened",
              "service.prolonged",
              "service.tariff_changed"
            ],
            "example": "service.opened"
          },
          "url": {
            "type": "string",
            "description": "URL, на который будет отправлено уведомление по выбранному событию",
            "minLength": 7,
            "format": "uri",
            "example": "https://example.com/webhook/event"
          },
          "company_uuid": {
            "type": "string",
            "description": "Идентификатор компании, на основе событий которой будет сформировано уведомление",
            "minLength": 36,
            "example": "352731da-f720-46de-8591-f743f3035dc6"
          },
          "ignore_ssl": {
            "type": "boolean",
            "description": "Флаг, при указании которого не будет проверятся наличие SSL сертификата",
            "example": false
          },
          "headers": {
            "type": "array",
            "description": "Заголовоки запроса",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Заголовок запроса",
                  "minLength": 1,
                  "example": "Authorization"
                },
                "value": {
                  "type": "string",
                  "description": "Значение заголовка",
                  "example": "Bearer MYSECRETKEY"
                }
              }
            }
          }
        }
      },
      "WebhookWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/Webhook"
          }
        ]
      },
      "WebhookListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookWithUUID"
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "Тип события, по-которому будет отправлено уведомление\n  - payment.paid - платеж был оплачен\n  - payment.promised - платеж был зачислен как обещанный\n  - payment.canceled - платеж был отменен\n  - refund.created - возврат был создан, но средства еще могут быть не возвращены\n  - saved_payment_method.enabled - сохраненный способ оплаты был успешно настроен\n  - saved_payment_method.errored - настройка сохраненный способа оплаты была не успешна\n  - saved_payment_method.deleted - сохраненный способ оплаты был удален\n  - service.stopped - услуга остановлена (сотрудником или по истечению срока действия)\n  - service.canceled - услуга была удалена\n  - service.opened - услуга была активирована после оплаты покупки\n  - service.prolonged - услуга была продлена, после оплаты продления\n  - service.tariff_changed - тариф услуги был изменен\n",
            "enum": [
              "payment.paid",
              "payment.promised",
              "payment.canceled",
              "refund.created",
              "saved_payment_method.enabled",
              "saved_payment_method.errored",
              "saved_payment_method.deleted",
              "service.stopped",
              "service.canceled",
              "service.opened",
              "service.prolonged",
              "service.tariff_changed"
            ],
            "example": "service.opened"
          },
          "send_time": {
            "type": "string",
            "description": "Время отправки уведомления",
            "example": "2021-01-01 00:00:00"
          },
          "try_count": {
            "type": "integer",
            "description": "Количество попыток отправки уведомления",
            "example": 2
          },
          "status": {
            "type": "string",
            "description": "Статус отправки уведомления\n  - success - уведомление было успешно отправлено\n  - error - во время отправки уведолмения возникли проблемы\n",
            "enum": [
              "success",
              "error"
            ]
          },
          "body": {
            "type": "object",
            "description": "Тело уведомления"
          },
          "request": {
            "type": "string",
            "description": "Тип запроса и URL, на который было отправлено уведомление",
            "minLength": 7,
            "format": "uri",
            "example": "POST https://example.com/webhook/event"
          },
          "headers": {
            "type": "array",
            "description": "Заголовоки запроса",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Заголовок запроса",
                  "minLength": 1,
                  "example": "Authorization"
                },
                "value": {
                  "type": "string",
                  "description": "Значение заголовка",
                  "example": "Bearer MYSECRETKEY"
                }
              }
            }
          },
          "response": {
            "type": "string",
            "maxLength": 255,
            "description": "Ответ полученный при отправке уведомления"
          }
        }
      },
      "MessageWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/Message"
          }
        ]
      },
      "MessageListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageWithUUID"
            }
          }
        }
      },
      "TotalCartPrice": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "UUID корзины",
            "example": "ad82c6e5-d9bc-44d1-b509-552f9f507e16"
          },
          "price": {
            "$ref": "#/components/schemas/CartpayPrice"
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationPrice"
            }
          }
        }
      },
      "OperationPrice": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "UUID операции",
            "example": "d08adbe7-5503-435b-9555-2f68d5a8dda7"
          },
          "operation_type": {
            "type": "string",
            "description": "Тип операции",
            "example": "prolong"
          },
          "service_uuid": {
            "type": "string",
            "description": "UUID услуги, к которой относится операция",
            "example": "06bd4ec4-551b-43d4-94a6-2d49fd2c6f96"
          },
          "price": {
            "$ref": "#/components/schemas/CartpayPrice"
          }
        }
      },
      "CartpayPrice": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Сумма",
            "example": "999.99"
          },
          "discount_uuid": {
            "type": "string",
            "description": "UUID скидки",
            "example": "884cf416-7289-4488-a456-98e258b169f0"
          },
          "discount_amount": {
            "type": "string",
            "description": "Сумма скидки, заполняется только если скидка с типом - специальная цена",
            "example": "9999.99"
          },
          "discount_percent": {
            "type": "string",
            "description": "Процент скидки, заполняется только если скидка с типом - процент",
            "example": "99.9"
          },
          "promocode_uuid": {
            "type": "string",
            "description": "Идентификатор промокода, который был учтен при расечете стоимости",
            "example": "884cf416-7289-4488-a456-98e258b169f0"
          }
        }
      },
      "CartpayPay": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateResponse"
          },
          {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "payment": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Идентификатор платежа",
                        "example": "884cf416-7289-4488-a456-98e258b169f0"
                      },
                      "amount": {
                        "type": "string",
                        "description": "Сумма платежа",
                        "example": "999.99"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "saved_payment_method": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Идентификатор способа оплаты",
                        "example": "884cf416-7289-4488-a456-98e258b169f0"
                      }
                    }
                  }
                }
              }
            ]
          }
        ]
      },
      "TariffListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tariff"
            }
          }
        }
      },
      "CreateTariff": {
        "type": "object",
        "required": [
          "product_uuid",
          "name",
          "params",
          "processing_module_uuid",
          "is_subscription"
        ],
        "additionalProperties": false,
        "properties": {
          "product_uuid": {
            "type": "string",
            "description": "UUID продукта",
            "example": "2aabdf06-8e12-404e-9e4c-a400f759d452"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Наименование тарифа"
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "description": "Описание тарифа"
          },
          "params": {
            "type": "object",
            "additionalProperties": true
          },
          "processing_module_uuid": {
            "type": "string",
            "description": "UUID модуля обработки",
            "example": "be07045b-54b6-463e-935a-af622501b108"
          },
          "trial_enabled": {
            "type": "boolean",
            "description": "Флаг включения триального периода для тарифа. true - триальный период включен, false - триальный период отключен",
            "example": true
          },
          "trial_period_type": {
            "$ref": "#/components/schemas/TrialPeriodType"
          },
          "trial_period_count": {
            "type": "integer",
            "description": "Количество периодов (дней, месяцев), в течение которых действует триальный период",
            "example": 14
          },
          "is_subscription": {
            "type": "boolean",
            "description": "true - тариф для предоставления услуг по подписке; false - тариф для услуг с единоразовой оплатой",
            "example": true
          }
        }
      },
      "CreateAdditionTariff": {
        "type": "object",
        "required": [
          "tariff_uuid",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "tariff_uuid": {
            "type": "string",
            "description": "UUID тарифа по продукту дополнения"
          },
          "type": {
            "$ref": "#/components/schemas/AdditionTariffType"
          }
        }
      },
      "Tariff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string"
          },
          "modify_index": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Наименование тарифа"
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "description": "Описание тарифа"
          },
          "product_id": {
            "type": "integer",
            "description": "ID продукта",
            "example": 2
          },
          "processing_module_uuid": {
            "type": "integer",
            "description": "UUID модуля обработки",
            "example": "be07045b-54b6-463e-935a-af622501b108"
          },
          "params": {
            "type": "object"
          },
          "create_date": {
            "type": "string",
            "description": "Дата создания",
            "example": "2020-01-02 15:04:05"
          },
          "trial_enabled": {
            "type": "boolean",
            "description": "Флаг включения триального периода для тарифа. true - триальный период включен, false - триальный период отключен",
            "example": true
          },
          "trial_period_type": {
            "$ref": "#/components/schemas/TrialPeriodType"
          },
          "trial_period_count": {
            "type": "integer",
            "description": "Количество периодов (дней, месяцев), в течение которых действует триальный период",
            "example": 14
          },
          "is_subscription": {
            "type": "boolean",
            "description": "true - тариф для предоставления услуг по подписке; false - тариф для услуг с единоразовой оплатой",
            "example": true
          }
        }
      },
      "PriceType": {
        "type": "string",
        "description": "Тип периода для которого задается цена",
        "enum": [
          "month",
          "year"
        ]
      },
      "TrialPeriodType": {
        "type": "string",
        "description": "В чем измеряется триальный период. day - в днях, month - в месяцах. Значение по-умолчанию: day",
        "enum": [
          "day",
          "month"
        ]
      },
      "PriceListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          }
        }
      },
      "Price": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string"
          },
          "modify_index": {
            "type": "integer"
          },
          "tariff_id": {
            "type": "integer",
            "description": "id тарифного плана"
          },
          "price": {
            "type": "string",
            "description": "Цена за данный период тарифа; указывается с точностью до 2 знаков после запятой, может быть нулевой",
            "example": "12.21"
          },
          "currency_uuid": {
            "type": "string",
            "description": "UUID валюты в биллинге. В настоящее время не используется, не валидируется",
            "example": null
          },
          "type": {
            "$ref": "#/components/schemas/PriceType"
          },
          "count": {
            "type": "integer",
            "description": "Количество периодов",
            "example": 1
          },
          "enabled": {
            "type": "boolean",
            "description": "Включена ли цена. Если цена отключена, то её невозможно использовать при заказе новых услуг"
          }
        }
      },
      "ProductWithUUID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordID"
          },
          {
            "$ref": "#/components/schemas/Product"
          }
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название продукта, используется для идентификации человеком (может использоваться в интерфейсе)",
            "minLength": 1,
            "maxLength": 255,
            "example": "Расширенная поддержка",
            "pattern": "^[^\\t\\n]*$"
          },
          "description": {
            "type": "string",
            "description": "Описание продукта",
            "maxLength": 255,
            "example": "Предоставление расширенной поддержки клиентам"
          },
          "internal_name": {
            "type": "string",
            "description": "Внутреннее имя продукта, используется как уникальный идентификатор продукта, может использоваться в различных обработчиках, скриптах и плагинах",
            "example": "support",
            "pattern": "^[a-z0-9_-]*$",
            "minLength": 1,
            "maxLength": 255
          },
          "operation_name_template": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[^\\t\\n]*$",
            "description": "Шаблон наименования операций создаваемых на основе продукта.\nШаблон поддерживает следующие placeholders\n- \"__tariff.name__\" - наименование тарифа\n- \"__service.id__\" - числовой идентификатор услуги\nПо умлочанию используется шаблон вида \"__tariff.name__ #__service.id__\".\n",
            "example": "__tariff.name__ #__service.id__"
          },
          "payment_object": {
            "type": "string",
            "description": "Признак предмета расчета (для онлайн касс; в настоящее время не используется)\n- «commodity» – товар\n- «excise» – подакцизный товар\n- «job» – работа\n- «service» – услуга\n- «gambling_bet» – ставка азартной игры\n- «gambling_prize» – выигрыш азартной игры\n- «lottery»\n- «lottery_prize» – выигрыш лотереи\n- «intellectual_activity» – предоставление результатов интеллектуальной деятельности\n- «payment» – платеж\n- «agent_commission» – агентское вознаграждение\n- «composite» – составной предмет расчета\n- «another» – иной предмет расчета\n- «property_right» – имущественное право\n- «non-operating_gain» – внереализационный доход\n- «insurance_premium» – страховые взносы\n- «sales_tax» – торговый сбор\n- «resort_fee» – курортный сбор\n",
            "enum": [
              "commodity",
              "excise",
              "job",
              "service",
              "gambling_bet",
              "gambling_prize",
              "lottery",
              "lottery_prize",
              "intellectual_activity",
              "payment",
              "agent_commission",
              "composite",
              "another",
              "property_right",
              "non-operating_gain",
              "insurance_premium",
              "sales_tax",
              "resort_fee"
            ]
          }
        }
      },
      "ProductListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductWithUUID"
            }
          }
        }
      },
      "AdditionTariffType": {
        "type": "string",
        "enum": [
          "required",
          "recommended",
          "optional",
          "hidden"
        ]
      },
      "AdditionalTariff": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Tariff"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/AdditionTariffType"
              }
            }
          }
        ]
      },
      "AdditionalTariffListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalTariff"
            }
          }
        }
      },
      "TargetTariffUUID": {
        "type": "string",
        "description": "Идентификатор целевого тарифа",
        "example": "be07045b-54b6-463e-935a-af622501b108"
      },
      "Policy": {
        "type": "string",
        "description": "Политика смены тарифа, может принимать следующие значения:\n- extra_charge - только доплата, без возврата за более дешевый тариф\n",
        "enum": [
          "extra_charge"
        ],
        "example": "extra_charge"
      },
      "CertificateListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Certificate"
                }
              ]
            }
          }
        }
      },
      "Certificate": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер акта",
            "example": "123"
          },
          "create_date": {
            "type": "string",
            "description": "Дата создания",
            "example": "2020-12-01 15:21:11"
          },
          "send_date": {
            "type": "string",
            "description": "Дата отправки",
            "example": "2020-12-21 02:22:17"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий",
            "example": "Это просто комментарий"
          },
          "status": {
            "$ref": "#/components/schemas/CertificateStatus"
          }
        }
      },
      "CertificateStatus": {
        "type": "string",
        "description": "Статус акта",
        "enum": [
          "prepared",
          "created",
          "signed",
          "requested",
          "sent"
        ]
      },
      "CertificateOperationResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/CertificateOperation"
                }
              ]
            }
          }
        }
      },
      "CertificateOperation": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Сумма",
            "example": "100.10"
          },
          "certificate_id": {
            "type": "integer",
            "description": "ID акта",
            "example": "123"
          },
          "operation_uuid": {
            "type": "string",
            "description": "UUID операции",
            "example": "73a2e290-d7f6-4758-8322-f5ed90fcebbe"
          },
          "rendered_from_date": {
            "type": "string",
            "description": "Дата начала периода действия операции",
            "example": "2020-12-21 12:10:11"
          },
          "rendered_to_date": {
            "type": "string",
            "description": "Дата завершения периода действия операции",
            "example": "2020-12-31 14:17:15"
          }
        }
      },
      "CartListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Cart"
                }
              ]
            }
          }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "client_uuid": {
            "description": "UUID клиента, создавшего корзину",
            "type": "string",
            "example": "8a6c3606-020b-4258-9148-44822d9e5fe9"
          },
          "payment_uuid": {
            "description": "UUID платежа, которым оплачена/оплачивается корзина",
            "type": "string"
          },
          "payment_url": {
            "description": "URL на оплату платежа по корзине",
            "type": "string"
          },
          "payment_status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "status": {
            "$ref": "#/components/schemas/CartStatus"
          }
        }
      },
      "OperationListResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecordID"
                },
                {
                  "$ref": "#/components/schemas/Operation"
                }
              ]
            }
          }
        }
      },
      "Operation": {
        "type": "object",
        "properties": {
          "tariff_uuid": {
            "type": "string",
            "description": "UUID тарифа",
            "example": "ad82c6e5-d9bc-44d1-b509-552f9f507e16"
          },
          "price_uuid": {
            "type": "string",
            "description": "Идентификатор цены",
            "example": "06bd4ec4-551b-43d4-94a6-2d49fd2c6f96"
          },
          "name": {
            "type": "string",
            "description": "Наименование",
            "example": "Лицензия на ПО #1"
          },
          "cart_id": {
            "type": "integer",
            "description": "ID корзины",
            "example": 1
          },
          "service_uuid": {
            "type": "string",
            "description": "UUID услуги",
            "example": "d5416b05-4686-4c6b-a4ee-5846871dbf42"
          },
          "period_type": {
            "type": "string",
            "description": "Тип периода на который заказана операция",
            "example": "month"
          },
          "period_count": {
            "type": "integer",
            "description": "Количество периодов на которые заказана операция",
            "example": 1
          },
          "price": {
            "type": "string",
            "description": "Цена",
            "example": "123.01"
          },
          "params": {
            "type": "object"
          },
          "operation_type": {
            "$ref": "#/components/schemas/OperationType"
          },
          "status": {
            "$ref": "#/components/schemas/OperationStatus"
          }
        }
      },
      "CartStatus": {
        "type": "string",
        "description": "Статус корзины",
        "enum": [
          "active",
          "inactive"
        ]
      },
      "OperationType": {
        "type": "string",
        "description": "Тип операции. Может принимать значения: buy (покупка), prolong (продление)",
        "enum": [
          "buy",
          "prolong"
        ]
      },
      "OperationStatus": {
        "type": "string",
        "description": "Статус операции. Может принимать значение: paid (оплачено), not_paid (неолачено)",
        "enum": [
          "paid",
          "not_paid"
        ]
      }
    },
    "parameters": {
      "ProductUUID": {
        "in": "path",
        "name": "product_uuid",
        "description": "Идентификатор продукта (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      },
      "DiscountUUID": {
        "in": "path",
        "name": "discount_uuid",
        "description": "Идентификатор скидки (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      },
      "PromocodeUUID": {
        "in": "path",
        "name": "promocode_uuid",
        "description": "Идентификатор промокода (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      },
      "WebhookUUID": {
        "in": "path",
        "name": "webhook_uuid",
        "description": "Идентификатор подписки на уведомление (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      },
      "Promocode": {
        "in": "query",
        "name": "promocode",
        "description": "При указании промокода будет произведен расчет стоимости с учетом возможной скидки",
        "example": "BLACKFRIDAY2021",
        "schema": {
          "type": "string"
        }
      },
      "CartUUID": {
        "in": "path",
        "name": "cart_uuid",
        "description": "Идентификатор корзины (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      },
      "OperationUUID": {
        "in": "path",
        "name": "operation_uuid",
        "description": "Идентификатор операции (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      },
      "ServiceUUID": {
        "in": "path",
        "name": "service_uuid",
        "description": "Идентификатор услуги (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      },
      "TariffUUID": {
        "in": "path",
        "name": "tariff_uuid",
        "description": "Идентификатор тарифа (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      },
      "ChangeRuleUUID": {
        "in": "path",
        "name": "changerule_uuid",
        "description": "Идентификатор правила смены тарифа (id или uuid)",
        "required": true,
        "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "format": "uint64"
            }
          ]
        }
      }
    }
  },
  "tags": [
    {
      "name": "cart",
      "description": "Работа с корзиной"
    },
    {
      "name": "rendered_services",
      "description": "Работа с актами выполненных работ"
    },
    {
      "name": "tariff",
      "description": "Работа с тарифами"
    },
    {
      "name": "product",
      "description": "Работа с продуктами"
    },
    {
      "name": "addition",
      "description": "Работа с дополнениями"
    },
    {
      "name": "price",
      "description": "Расчет стоимости"
    },
    {
      "name": "pay",
      "description": "Оплата корзины"
    },
    {
      "name": "webhook",
      "description": "Работа с уведолмениями (webhook/callback)"
    },
    {
      "name": "discount",
      "description": "Работа со скидками"
    },
    {
      "name": "client",
      "description": "Работа с клиентами"
    },
    {
      "name": "company",
      "description": "Работа с компанией"
    },
    {
      "name": "group",
      "description": "Работа с группами клиентов"
    },
    {
      "name": "country",
      "description": "Работа со странами"
    },
    {
      "name": "service",
      "description": "Работа с услугами"
    },
    {
      "name": "module",
      "description": "Работа с модулями обработки"
    },
    {
      "name": "task",
      "description": "Работа с задачами услуги"
    },
    {
      "name": "autoprolong",
      "description": "Конфигурирование автопродления"
    },
    {
      "name": "receipt",
      "description": "Работа с чеками"
    },
    {
      "name": "cash_register",
      "description": "Работа с кассой"
    },
    {
      "name": "payment",
      "description": "Работа с платежами"
    },
    {
      "name": "refund",
      "description": "Работа с возвратами средств"
    },
    {
      "name": "saved_payment_method",
      "description": "Работа с сохраненными способами оплаты"
    },
    {
      "name": "payment_method",
      "description": "Работа с методами оплаты"
    },
    {
      "name": "payment_proxy",
      "description": "Редирект клиента на указанный url в соответствии со статусом платежа"
    }
  ],
  "paths": {
    "/payment_proxy/public/payment/{payment_uuid}": {
      "post": {
        "summary": "Редирект",
        "description": "Производит редирект на нужный URL для указанного платежа. Во время редиректа инициируется проверка статуса платежа:\n- если платеж в процессе оплаты, происходит редирект на 'pending_url'\n- если платеж успешный, происходит редирект на 'success_url\n- если платеж неудачный, происходит редирект на 'fail_url'\n",
        "tags": [
          "payment_proxy"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payment_uuid",
            "description": "Идентификатор платежа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "303": {
            "description": "Успешный редирект"
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Редирект",
        "description": "Производит редирект на нужный URL для указанного платежа. Во время редиректа инициируется проверка статуса платежа:\n- если платеж в процессе оплаты, происходит редирект на 'pending_url'\n- если платеж успешный, происходит редирект на 'success_url\n- если платеж неудачный, происходит редирект на 'fail_url'\n",
        "tags": [
          "payment_proxy"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payment_uuid",
            "description": "Идентификатор платежа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "303": {
            "description": "Успешный редирект"
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/payment": {
      "get": {
        "summary": "Список платежей",
        "description": "Возвращает список платежей",
        "tags": [
          "payment"
        ],
        "responses": {
          "200": {
            "description": "Список платежей",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/payment/{payment_uuid}": {
      "get": {
        "summary": "Подробная информация о платеже",
        "description": "Возвращает информацию о платеже по его идентификатору",
        "tags": [
          "payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payment_uuid",
            "description": "Идентификатор платежа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о платеже",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/Payment"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение параметров платежа",
        "description": "Изменяет параметры платежа",
        "tags": [
          "payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payment_uuid",
            "description": "Идентификатор платежа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "in_pay",
                      "paid",
                      "canceled",
                      "promised",
                      "refunded"
                    ]
                  },
                  "expire_promise_date": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение параметров платежа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/refund": {
      "get": {
        "summary": "Список возвратов средств",
        "description": "Возвращает список возвратов средств",
        "tags": [
          "refund"
        ],
        "responses": {
          "200": {
            "description": "Список возвратов средств",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/refund/{refund_uuid}": {
      "get": {
        "summary": "Подробная информация о возврате средств",
        "description": "Возвращает информацию о возврате средств по его идентификатору",
        "tags": [
          "refund"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "refund_uuid",
            "description": "Идентификатор возврата (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о возврате средств",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/Refund"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение параметров возврата средств",
        "description": "Изменяет параметры возврата средств",
        "tags": [
          "refund"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "refund_uuid",
            "description": "Идентификатор возврата (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение параметров возврата средств",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/saved_payment_method": {
      "get": {
        "summary": "Список сохраненных способов оплаты",
        "description": "Возвращает список сохраненных способов оплаты",
        "tags": [
          "saved_payment_method"
        ],
        "responses": {
          "200": {
            "description": "Список сохраненных способов оплаты",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedMethodListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание сохраненного способа оплаты",
        "description": "Создает сохраненный способ оплаты",
        "tags": [
          "saved_payment_method"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "client_uuid",
                  "payment_method_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "client_uuid": {
                    "type": "string"
                  },
                  "payment_method_uuid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание сохраненного способа оплаты",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/saved_payment_method/{saved_payment_method_uuid}": {
      "get": {
        "summary": "Подробная информация о сохраненном способе оплаты",
        "description": "Возвращает информацию о сохраненном способе оплаты по его идентификатору",
        "tags": [
          "saved_payment_method"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_payment_method_uuid",
            "description": "Идентификатор сохраненного способа оплаты (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о сохраненном способе оплаты",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/SavedMethod"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление сохраненного способа оплаты",
        "description": "Удаляет сохраненный способ оплаты. Для всех услуг использующих этот способ, будет отключено автопродление",
        "tags": [
          "saved_payment_method"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_payment_method_uuid",
            "description": "Идентификатор сохраненного способа оплаты (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/saved_payment_method/{saved_payment_method_uuid}/recreate": {
      "post": {
        "summary": "Изменить сохраненный метод оплаты",
        "description": "Изменяет платежные данные сохраненного метода оплаты",
        "tags": [
          "saved_payment_method"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_payment_method_uuid",
            "description": "Идентификатор сохраненного метода оплаты (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Изменение данных запущенно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/saved_payment_method/{saved_payment_method_uuid}/check": {
      "post": {
        "summary": "Проверка состояния сохраненного метода оплаты во внешней платежной системе",
        "description": "Запускает проверку состояния сохраненного метода оплаты во внешней платежной системе",
        "tags": [
          "saved_payment_method"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_payment_method_uuid",
            "description": "Идентификатор сохраненного метода оплаты (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный запуск",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/payment_method": {
      "post": {
        "summary": "Создание метода оплаты",
        "description": "Создает метод оплаты",
        "tags": [
          "payment_method"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Method"
                  },
                  {
                    "type": "object",
                    "required": [
                      "company_uuid",
                      "name",
                      "payment_system",
                      "params"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание метода оплаты",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Список методов оплаты",
        "description": "Возвращает список методов оплаты",
        "tags": [
          "payment_method"
        ],
        "responses": {
          "200": {
            "description": "Список методов оплаты",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment/payment_method/{payment_method_uuid}": {
      "get": {
        "summary": "Подробная информация о методе оплаты",
        "description": "Возвращает информацию о методе оплаты по его идентификатору",
        "tags": [
          "payment_method"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payment_method_uuid",
            "description": "Идентификатор метода оплаты (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о методе оплаты",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Method"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/receipt/receipt": {
      "get": {
        "summary": "Список всех чеков",
        "description": "Возвращает список всех чеков",
        "tags": [
          "receipt"
        ],
        "responses": {
          "200": {
            "description": "Список всех чеков",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/receipt/receipt/{receipt_uuid}": {
      "get": {
        "summary": "Подробная информация по чеку",
        "description": "Возвращает информацию о чеке по его идентификатору",
        "tags": [
          "receipt"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "receipt_uuid",
            "description": "Идентификатор чека (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация по чеку",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/Receipt"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/receipt/receipt/{receipt_uuid}/item": {
      "get": {
        "summary": "Позиции чека",
        "description": "Возвращает список позиций чека",
        "tags": [
          "receipt"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "receipt_uuid",
            "description": "Идентификатор чека (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список позиций чека",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptItemListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/receipt/operation/{operation_uuid}/receipt": {
      "get": {
        "summary": "Список чеков по определенной операции",
        "description": "Возвращает список чеков по идентификатору операции (покупка/продление), включенной в них",
        "tags": [
          "receipt"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operation_uuid",
            "description": "Идентификатор операции (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список чеков по определенной операции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/receipt/receipt/{receipt_uuid}/send": {
      "post": {
        "summary": "Отправка чека на регистрацию",
        "description": "Повторная попытка регистрации чека находящегося в статусе 'Ошибка'",
        "tags": [
          "receipt"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "receipt_uuid",
            "description": "Идентификатор чека (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный запуск регистрации чека",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/receipt/cash_register": {
      "post": {
        "summary": "Создание онлайн кассы",
        "description": "Создает онлайн кассу",
        "tags": [
          "cash_register"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CashRegister"
                  },
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "module",
                      "params"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание кассы",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/receipt/cash_register/{cash_register_uuid}": {
      "get": {
        "summary": "Подробная информация об онлайн кассе",
        "description": "Возвращает подробную информацию об онлайн кассе",
        "tags": [
          "cash_register"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cash_register_uuid",
            "description": "Идентификатор онлайн кассы (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Настройки онлайн кассы",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/CashRegister"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение онлайн кассы",
        "description": "Изменяет онлайн кассу",
        "tags": [
          "cash_register"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cash_register_uuid",
            "description": "Идентификатор онлайн кассы (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCashRegister"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение онлайн кассы",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление онлайн кассы",
        "description": "Удаляет онлайн кассу",
        "tags": [
          "cash_register"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cash_register_uuid",
            "description": "Идентификатор онлайн кассы (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление кассы",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/processing/service": {
      "get": {
        "summary": "Список услуг",
        "description": "Возвращает список услуг",
        "tags": [
          "service"
        ],
        "responses": {
          "200": {
            "description": "Список услуг",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/processing/service/{service_uuid}": {
      "get": {
        "summary": "Подробная информация об услуге",
        "description": "Возвращает информацию об услуге по ее идентификатору",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "service_uuid",
            "description": "Идентификатор услуги (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация об услуге",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/Service"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение параметров услуги",
        "description": "Изменяет параметры услуги",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "service_uuid",
            "description": "Идентификатор услуги (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "expire_date": {
                    "type": "string",
                    "description": "Дата истечения действия услуги",
                    "example": "2020-12-22 00:00:00"
                  },
                  "open_date": {
                    "type": "string",
                    "description": "Дата открытия",
                    "example": "2020-12-10 15:02:12"
                  },
                  "auto_prolong": {
                    "type": "boolean",
                    "description": "Флаг автопродления услуги"
                  },
                  "saved_payment_method_uuid": {
                    "type": "string",
                    "description": "UUID сохраненного метода оплаты с которого производится оплата при продлении",
                    "example": "0ae1484e-6fa5-45a3-8b2c-9c201d42078a"
                  },
                  "tariff_uuid": {
                    "type": "string",
                    "description": "UUID тарифа",
                    "example": "d93b7672-8fa2-4daa-a16d-24572c805ab9"
                  },
                  "price_uuid": {
                    "type": "string",
                    "description": "UUID цены",
                    "example": "9124a6f4-ea34-4a59-88de-6fd890e5d41f"
                  },
                  "period_type": {
                    "type": "string",
                    "$ref": "#/components/schemas/PeriodType"
                  },
                  "period_count": {
                    "type": "integer",
                    "description": "Количество периодов на которые заказана услуга",
                    "example": 12
                  },
                  "comment": {
                    "type": "string",
                    "description": "Комментарий",
                    "example": "Это просто комментарий"
                  },
                  "next_tariff_uuid": {
                    "type": "string",
                    "nullable": true,
                    "description": "UUID тарифа, который будет применен при следующем продлении",
                    "example": "d93b7672-8fa2-4daa-a16d-24572c805ab9"
                  },
                  "next_price_uuid": {
                    "type": "string",
                    "nullable": true,
                    "description": "UUID цены, которая будет применена при следующем продлении",
                    "example": "9124a6f4-ea34-4a59-88de-6fd890e5d41f"
                  },
                  "promocode": {
                    "type": "string",
                    "nullable": true,
                    "description": "Промокод, который будет применен при автоматическом продлении.",
                    "example": "PROLONG75"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение параметров услуги",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление услуги",
        "description": "Удаляет услугу",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "service_uuid",
            "description": "Идентификатор услуги (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление услуги",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/processing/service/{service_uuid}/addition": {
      "get": {
        "summary": "Список дополнений услуги",
        "description": "Возвращает список дополнений услуги",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "service_uuid",
            "description": "Идентификатор услуги (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список дополнений услуги",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/processing/service/{service_uuid}/{action}": {
      "post": {
        "summary": "Действия с услугой",
        "description": "Действия с услугой. Возможные действия: открыть, приостановить, возобновить, отменить.",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "service_uuid",
            "description": "Идентификатор услуги (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "action",
            "description": "Действие",
            "required": true,
            "example": "open",
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "suspend",
                "resume",
                "cancel"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное изменение состояния услуги",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/processing/module": {
      "get": {
        "summary": "Список модулей обработки",
        "description": "Возвращает список модулей обработки",
        "tags": [
          "module"
        ],
        "responses": {
          "200": {
            "description": "Список модулей обработки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/processing/module/{module_uuid}": {
      "get": {
        "summary": "Подробная информация о модуле обработки",
        "description": "Возвращает информацию о модуле обработки по его идентификатору",
        "tags": [
          "module"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "module_uuid",
            "description": "Идентификатор модуля обработки (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о модуле обработки",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/Module"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение параметров модуля обработки",
        "description": "Изменяет параметры модуля обработки",
        "tags": [
          "module"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "module_uuid",
            "description": "Идентификатор модуля обработки (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "params": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение параметров модуля обработки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/processing/product/{product_uuid}/autoprolong": {
      "get": {
        "summary": "Подробная информация о настройке автоматических списаний",
        "description": "Возвращает информацию о настройке автоматических списаний по подписке в рамках продукта",
        "tags": [
          "autoprolong"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProductUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о настройке автоматических списаний",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoProlong"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменить настройки автоматических списаний",
        "description": "Изменяет настройки автоматических списаний по подписке в рамках продукта",
        "tags": [
          "autoprolong"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProductUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoProlong"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение автоматических списаний по подписке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/subscriptions_summary": {
      "get": {
        "summary": "Данные по активированным/остановленным подпискам",
        "description": "Возвращает данные по активированным/остановленным подпискам",
        "tags": [
          "analytics"
        ],
        "parameters": {
          "from_date": {
            "in": "query",
            "name": "from_date",
            "description": "Начало периода",
            "example": "2021-01-01 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          "to_date": {
            "in": "query",
            "name": "to_date",
            "description": "Конец периода",
            "example": "2021-12-31 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          "tariffs": {
            "in": "query",
            "name": "tariffs",
            "description": "UUIDs тарифов",
            "example": "7bb90135-6f33-421f-912c-b71b2a0b2c98,2ce94ea3-1f1d-4958-a1c6-6988e0d14ce2",
            "schema": {
              "type": "string"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Данные по активированным/остановленным подпискам",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/mrr_info": {
      "get": {
        "summary": "Данные для MRR графика",
        "description": "Возвращает данные для MRR графика",
        "tags": [
          "analytics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "from_date",
            "description": "Начало периода",
            "example": "2021-01-01 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "to_date",
            "description": "Конец периода",
            "example": "2021-12-31 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tariffs",
            "description": "UUIDs тарифов",
            "example": "7bb90135-6f33-421f-912c-b71b2a0b2c98,2ce94ea3-1f1d-4958-a1c6-6988e0d14ce2",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Данные для MRR графика",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/retentions": {
      "get": {
        "summary": "Данные по удержаниям пользователей",
        "description": "Возвращает данные по удержаниям пользователей",
        "tags": [
          "analytics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "from_date",
            "description": "Начало периода",
            "example": "2021-01-01 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "to_date",
            "description": "Конец периода",
            "example": "2021-12-31 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tariffs",
            "description": "UUIDs тарифов",
            "example": "7bb90135-6f33-421f-912c-b71b2a0b2c98,2ce94ea3-1f1d-4958-a1c6-6988e0d14ce2",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Данные по удержаниям",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/trial_conversion_cohort": {
      "get": {
        "summary": "Данные для конверсии триалов по когортам",
        "description": "Возвращает данные для конверсии триалов по когортам",
        "tags": [
          "analytics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "from_date",
            "description": "Начало периода",
            "example": "2021-01-01 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "to_date",
            "description": "Конец периода",
            "example": "2021-12-31 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tariff",
            "description": "UUID тарифа",
            "example": "7bb90135-6f33-421f-912c-b71b2a0b2c98",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Данные для конверсии триалов по когортам",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/client": {
      "get": {
        "summary": "Список клиентов",
        "description": "Возвращает список клиентов",
        "tags": [
          "client"
        ],
        "responses": {
          "200": {
            "description": "Список клиентов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание клиента",
        "description": "Создает клиента",
        "tags": [
          "client"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Client"
                  },
                  {
                    "type": "object",
                    "required": [
                      "company_uuid"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "object",
                        "required": [
                          "phone"
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "email"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание клиента",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/client/{client_uuid}": {
      "get": {
        "summary": "Информация о клиенте",
        "description": "Возвращает информацию о клиенте по его идентификатору",
        "tags": [
          "client"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "client_uuid",
            "description": "Идентификатор клиента (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о клиенте",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientWithUUID"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Редактировать данные клиента",
        "description": "Изменяет данные клиента",
        "tags": [
          "client"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "client_uuid",
            "description": "Идентификатор клиента (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение данных клиента",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление клиента",
        "description": "Удаляет клиента по его идентификатору",
        "tags": [
          "client"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "client_uuid",
            "description": "Идентификатор клиента (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление клиента",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/company": {
      "get": {
        "summary": "Список компаний",
        "description": "Возвращает список компаний",
        "tags": [
          "company"
        ],
        "responses": {
          "200": {
            "description": "Список компаний",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание компании",
        "description": "Создает компанию",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Company"
                  },
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "email",
                      "phone",
                      "time_zone_name",
                      "country_legal_uuid"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/company/{company_uuid}": {
      "get": {
        "summary": "Подробнее о компании",
        "description": "Возвращает информацию о компании по ее идентификатору",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "company_uuid",
            "description": "Идентификатор компании (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о компании",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyWithUUID"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Редактировать данные компании",
        "description": "Изменяет данные компании",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "company_uuid",
            "description": "Идентификатор компании (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение данных компании",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/group": {
      "get": {
        "summary": "Список групп клиентов",
        "description": "Возвращает список групп клиентов",
        "tags": [
          "group"
        ],
        "responses": {
          "200": {
            "description": "Список групп клиентов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание группы клиентов",
        "description": "Создает группу клиентов",
        "tags": [
          "group"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание группы клиентов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/group/{group_uuid}/client": {
      "get": {
        "summary": "Список клиентов группы",
        "description": "Возвращает список клиентов определенной группы",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group_uuid",
            "description": "Идентификатор группы (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список клиентов группы",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Добавление клиента в группу",
        "description": "Добавляет клиента в определенную группу",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group_uuid",
            "description": "Идентификатор группы (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "client_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "client_uuid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное добавление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/group/{group_uuid}/client/{client_uuid}": {
      "delete": {
        "summary": "Удаляет клиента из группы",
        "description": "Удаляет клиента из группы",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group_uuid",
            "description": "Идентификатор группы (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "client_uuid",
            "description": "Идентификатор клиента (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/country": {
      "get": {
        "summary": "Список стран",
        "description": "Возвращает список стран",
        "tags": [
          "country"
        ],
        "responses": {
          "200": {
            "description": "Список стран",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client/country/{country_uuid}": {
      "get": {
        "summary": "Подробнее о стране",
        "description": "Возвращает информацию о стране по ее идентификатору",
        "tags": [
          "country"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "country_uuid",
            "description": "Идентификатор страны (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробнее о стране",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/discount/discount": {
      "get": {
        "summary": "Список скидок",
        "description": "Возвращает список скидок",
        "tags": [
          "discount"
        ],
        "responses": {
          "200": {
            "description": "Список скидок",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание скидки",
        "description": "Создает скидку",
        "tags": [
          "discount"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Discount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание скидки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/discount/discount/{discount_uuid}": {
      "get": {
        "summary": "Подробная информация о скидке",
        "description": "Возвращает информацию о скидке по ее идентификатору",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о скидке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountWithUUID"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение параметров скидки",
        "description": "Изменяет параметры скидки",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "canceled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение параметров скидки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/discount/discount/{discount_uuid}/service": {
      "get": {
        "summary": "Список услуг с данной скидкой",
        "description": "Возвращает все услуги, к которым применена данная скидка",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Список услуг с данной скидкой",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "uuid": {
                            "type": "string"
                          },
                          "modify_index": {
                            "type": "integer"
                          },
                          "discount_id": {
                            "type": "integer"
                          },
                          "service_uuid": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Привязка услуги к скидке",
        "description": "Привязывает услугу к скидке",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service_uuid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешная привязка услуги к скидке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/discount/discount/{discount_uuid}/payment_type": {
      "get": {
        "summary": "Список типов оплаты для скидки",
        "description": "Возвращает все типы оплаты данной скидки",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Список типов оплаты для скидки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountPaymentTypeListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Добавление типа оплаты скидки",
        "description": "Добавляет тип оплаты и привязывает его к скидке",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountPaymentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное добавление типа оплаты к скидке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/discount/discount/{discount_uuid}/condition": {
      "get": {
        "summary": "Список условий для скидки",
        "description": "Возвращает все условия данной скидки",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Список условий для скидки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountConditionListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Добавление условия скидки",
        "description": "Добавляет условие и привязывает его к скидке",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное добавление условия скидки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/discount/discount/{discount_uuid}/promocode": {
      "get": {
        "summary": "Список промокодов скидки",
        "description": "Возвращает список промокодов, которые активируют скидку для клиента",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Список промокодов скидки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromocodeListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание промокода для скидки",
        "description": "Создает один или несколько промокодов. Для создания одного промокода необходимо передать параметр code. Для генерации нескольких промокодов в тело запроса передаются параметры count, length, prefix, все созданные промокоды будут одноразовыми. Генерация промокодов происходит в фоне, если генерация с учетом уже имеющихся промокодов и указанными параметрами генерации невозможна, то ответ все равно будет успешным. При создании промокода для скидки добавляется условие - \"наличие промокода\".",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Набор символов, который должен указать клиент для активации скидки",
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "BLACKFRIDAY2020"
                      },
                      "activation_limit": {
                        "type": "integer",
                        "description": "Разрешенное количество активаций промокода, если не указывать, то количество активаций будет бесконечным",
                        "minimum": 1,
                        "example": 500
                      },
                      "personal_activation_limit": {
                        "type": "integer",
                        "description": "Количество активаций промокода, разрешенное клиенту, если не указывать, то активация промокода для клиента будет одноразовой",
                        "minimum": 1,
                        "example": 500
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "count",
                      "length"
                    ],
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Необходимое количество кодов",
                        "minimum": 1,
                        "maximum": 100000,
                        "example": 100
                      },
                      "length": {
                        "type": "integer",
                        "description": "Длина промокода",
                        "minimum": 1,
                        "maximum": 255,
                        "example": 10
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Префикс промокода, будет добавлен к началу промокода",
                        "example": "prefix",
                        "minLength": 0,
                        "maxLength": 254
                      },
                      "charset": {
                        "type": "string",
                        "description": "Набор символов для генерации промокодов, если не указывать, будет использован стандартный набор 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'",
                        "example": "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание или генерация промокода",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CreateResponse"
                    },
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/discount/discount/{discount_uuid}/take_promocode": {
      "post": {
        "summary": "Возвращает свободные, не активированные промокоды из списка сгенерированных промокодов",
        "description": "Возвращает свободные, не активированные промокоды из списка сгенерированных промокодов.\nВ ответ вернется ошибка, если:\n- для скидки указан одиночный промокод\n- все коды из списка сгенерированных кодов выданы и/или активированы\n",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number"
                ],
                "properties": {
                  "number": {
                    "type": "integer",
                    "description": "Количество кодов необходимых для выдачи",
                    "minLength": 1,
                    "example": 10
                  },
                  "issue_date": {
                    "type": "string",
                    "description": "Дата выдачи, которая будет установлена для выданных промокодов. Если не указывать, будет установлена текущая дата.",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список выданных промокодов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "promocodes": {
                      "type": "array",
                      "description": "Список выданных промокодов",
                      "example": [
                        "IDDQD",
                        "IDKFA"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Промокод",
                        "example": "IDDQD"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/discount/discount/{discount_uuid}/promocode/{promocode_uuid}": {
      "get": {
        "summary": "Подробная информация о промокоде",
        "description": "Возвращает информацию о промокоде по его идентификатору",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          },
          {
            "$ref": "#/components/parameters/PromocodeUUID"
          },
          {
            "in": "query",
            "name": "client_uuid",
            "description": "При указании идентификатора клиента, поле 'activation_count' будет содержать количество активаций промокода совершенное этим клиентом",
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о промокоде",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromocodeWithUUID"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение промокода",
        "description": "Изменяет промокод, если промокод был активирован, изменение не возможно.",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          },
          {
            "$ref": "#/components/parameters/PromocodeUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Набор символов, который должен указать клиент для активации скидки",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "BLACKFRIDAY2021"
                  },
                  "activation_limit": {
                    "type": "integer",
                    "description": "Разрешенное количество активаций промокода (0 - бесконечное количество активаций)",
                    "minimum": 0,
                    "example": 100
                  },
                  "personal_activation_limit": {
                    "type": "integer",
                    "description": "Количество активаций промокода, разрешенное клиенту",
                    "minimum": 1,
                    "example": 1
                  },
                  "issue_date": {
                    "type": "string",
                    "description": "Дата выдачи промокода",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение промокода",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CreateResponse"
                    },
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление промокода",
        "description": "Удаляет промокод. Если промокод был активирован, удаление не возможно. Если будут удалены все промокоды скидки, то условие скидки - \"наличие прмокода\" так же будет удалено.",
        "tags": [
          "discount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/DiscountUUID"
          },
          {
            "$ref": "#/components/parameters/PromocodeUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление промокода",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment_method/{payment_method_uuid}/send_receipt": {
      "get": {
        "summary": "Подробная информация об отправке чеков для метода оплаты",
        "description": "Возвращает подробную информацию об отправке чеков для метода оплаты",
        "tags": [
          "cash_register"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payment_method_uuid",
            "description": "Идентификатор метода оплаты (uuid)",
            "required": true,
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация об отправке чеков для метода оплаты",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "using_payment_system": {
                          "type": "boolean",
                          "description": "Отправка чеков при помощи метода оплаты",
                          "example": true
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "cash_register_uuid": {
                          "type": "string",
                          "description": "Идентификатор онлайн кассы",
                          "example": "b30e5a56-6fa3-434c-bce4-2bf3f1fb43b3",
                          "minLength": 36,
                          "maxLength": 36
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Настройка отправки чеков",
        "description": "Производит настройку отправки чеков",
        "tags": [
          "payment_method"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payment_method_uuid",
            "description": "Идентификатор метода оплаты (uuid)",
            "required": true,
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "Отправка чеков при помощи метода оплаты",
                    "required": [
                      "using_payment_system"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "using_payment_system": {
                        "type": "boolean",
                        "description": "Отправка чеков при помощи метода оплаты",
                        "example": true
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Подключение онлайн кассы к методу оплаты для отправки чеков",
                    "required": [
                      "cash_register_uuid"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "cash_register_uuid": {
                        "type": "string",
                        "description": "Идентификатор онлайн кассы",
                        "example": "b30e5a56-6fa3-434c-bce4-2bf3f1fb43b3",
                        "minLength": 36,
                        "maxLength": 36
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное подключение кассы",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Отключение отправки чеков для метода оплаты",
        "description": "Отключает отправку чеков для метода оплаты",
        "tags": [
          "payment_method"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payment_method_uuid",
            "description": "Идентификатор метода оплаты (uuid)",
            "required": true,
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное отключение отправки чеков",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhook/webhook": {
      "get": {
        "summary": "Список подписок на уведомления",
        "description": "Возвращает список всех подписок на уведомления",
        "tags": [
          "webhook"
        ],
        "responses": {
          "200": {
            "description": "Список подписок на уведомления",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание подписки на уведомление",
        "description": "Создает подписку на получение уведомлений по выбранному событию",
        "tags": [
          "webhook"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Webhook"
                  },
                  {
                    "type": "object",
                    "required": [
                      "event",
                      "url",
                      "company_uuid"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание подписки на уведомление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhook/webhook/{webhook_uuid}": {
      "get": {
        "summary": "Подробная информация о подписке на уведомление",
        "description": "Возвращает информация о подписке на уведомление по её идентификатору",
        "tags": [
          "webhook"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/WebhookUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о подписке на уведомление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookWithUUID"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение параметров подписки на уведомление",
        "description": "Измененяет параметры подписки на уведомление",
        "tags": [
          "webhook"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/WebhookUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL, на который будет отправлено уведомление по выбранному событию",
                    "minLength": 7,
                    "format": "uri",
                    "example": "https://example.com/webhook/event"
                  },
                  "ignore_ssl": {
                    "type": "boolean",
                    "description": "Флаг, при указании которого не будет проверятся наличие SSL сертификата",
                    "example": false
                  },
                  "headers": {
                    "type": "array",
                    "description": "Заголовоки запроса",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Заголовок запроса",
                          "minLength": 1,
                          "example": "Authorization"
                        },
                        "value": {
                          "type": "string",
                          "description": "Значение заголовка",
                          "example": "Bearer MYSECRETKEY"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение параметров подписки на уведомление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Отмена подписки на уведомление",
        "description": "Отменяет подписку на уведомление",
        "tags": [
          "webhook"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/WebhookUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhook/messages": {
      "get": {
        "summary": "Список уведомлений",
        "description": "Возвращает список всех уведомлений",
        "tags": [
          "webhook"
        ],
        "responses": {
          "200": {
            "description": "Список уведомлений",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cartpay/cart/{cart_uuid}/price": {
      "get": {
        "summary": "Расчет стоимости корзины",
        "description": "Возвращает общую стоимость всех покупок и продлений в корзине, по ее идентификатору",
        "tags": [
          "price"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CartUUID"
          },
          {
            "$ref": "#/components/parameters/Promocode"
          }
        ],
        "responses": {
          "200": {
            "description": "Стоимость корзины",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalCartPrice"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cartpay/cart/{cart_uuid}/operation/{operation_uuid}/price": {
      "get": {
        "summary": "Расчет стоимости покупки/продления в корзине",
        "description": "Возвращает стоимость покупки/продления  в корзине по ее идентификатору",
        "tags": [
          "price"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CartUUID"
          },
          {
            "$ref": "#/components/parameters/OperationUUID"
          },
          {
            "$ref": "#/components/parameters/Promocode"
          }
        ],
        "responses": {
          "200": {
            "description": "Стоимость операции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartpayPrice"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cartpay/cart/{cart_uuid}/pay": {
      "post": {
        "summary": "Оплата корзины",
        "description": "Рассчитывает стоимость корзины и отправляет запрос на оплату в сервис cart",
        "tags": [
          "pay"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CartUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "Оплата корзины при помощи метода оплаты",
                    "required": [
                      "payment_method_uuid"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "payment_method_uuid": {
                        "type": "string",
                        "description": "Метод оплаты, которым нужно оплатить корзину",
                        "example": "869f7e5d-129e-418e-b3fa-8ed09915de99"
                      },
                      "save_payment_method": {
                        "type": "boolean",
                        "description": "Сохранить метод оплаты"
                      },
                      "promocode": {
                        "type": "string",
                        "description": "Промокод, который должен быть учтен при оплате корзины",
                        "example": "BLACKFRIDAY2021"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Оплата корзины при помощи сохраненного способа оплаты, при успешной оплате указанный способ оплаты будет применен для автоматического продления всех услуг, которые были внутри корзине",
                    "required": [
                      "saved_payment_method_uuid"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "saved_payment_method_uuid": {
                        "type": "string",
                        "description": "Сохраненный метод оплаты, которым нужно оплатить корзину",
                        "example": "1143271e-2346-4547-a9de-dd3a1eb83182"
                      },
                      "promocode": {
                        "type": "string",
                        "description": "Промокод, который должен быть учтен при оплате корзины",
                        "example": "BLACKFRIDAY2021"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Активация корзины без указания платежных данных, можно использовать только если корзина имеет нулевую стоимость",
                    "properties": {
                      "promocode": {
                        "type": "string",
                        "description": "Промокод, который должен быть учтен при оплате корзины",
                        "example": "BLACKFRIDAY2021"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Возвращает UUID корзины и информацию о созданном платеже.\nЕсли корзина имеет стоимость равную нулю, то объект платежа будет пустым\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartpayPay"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cartpay/service/{service_uuid}/price": {
      "get": {
        "summary": "Стоимость существующей услуги",
        "description": "Возвращает стоимость существующей услуги. Для подписок возвращает сумму следующего списания по услуге",
        "tags": [
          "price"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ServiceUUID"
          },
          {
            "$ref": "#/components/parameters/Promocode"
          }
        ],
        "responses": {
          "200": {
            "description": "Стоимость существующей услуги",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartpayPrice"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/tariff": {
      "get": {
        "summary": "Список тарифов",
        "description": "Возвращает список тарифов",
        "tags": [
          "tariff"
        ],
        "responses": {
          "200": {
            "description": "Список тарифов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание тарифа",
        "description": "Создает тариф",
        "tags": [
          "tariff"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTariff"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/tariff/{tariff_uuid}": {
      "get": {
        "summary": "Подробная информация о тарифе",
        "description": "Возвращает информацию о тарифе по его идентификатору",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о тарифе",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tariff"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение тарифа",
        "description": "Изменяет тариф",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "description": "Наименование тарифа"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Описание тарифа"
                  },
                  "trial_enabled": {
                    "type": "boolean",
                    "description": "Флаг включения триального периода для тарифа. true - триальный период включен, false - триальный период отключен",
                    "example": true
                  },
                  "trial_period_type": {
                    "$ref": "#/components/schemas/TrialPeriodType"
                  },
                  "trial_period_count": {
                    "type": "integer",
                    "description": "Количество периодов (дней, месяцев), в течение которых действует триальный период",
                    "example": 14
                  },
                  "is_subscription": {
                    "type": "boolean",
                    "description": "true - тариф для предоставления услуг по подписке; false - тариф для услуг с единоразовой оплатой",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение цены тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление тарифа",
        "description": "Удаляет тариф",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/tariff/{tariff_uuid}/addition": {
      "post": {
        "summary": "Связать тариф дополнения и тариф основной услуги",
        "description": "Создает связь между тарифами основной услуги и дополнения",
        "tags": [
          "addition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор основного тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdditionTariff"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Список дополнений тарифа",
        "description": "Возвращает список дополнений тарифа",
        "tags": [
          "addition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор основного тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список дополнений тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalTariffListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/tariff/{tariff_uuid}/price": {
      "post": {
        "summary": "Создание цены тарифа",
        "description": "Создает цену для тарифа",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "price",
                  "currency_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "price": {
                    "type": "string",
                    "description": "Цена за данный период тарифа; указывается с точностью до 2 знаков после запятой, может быть нулевой"
                  },
                  "currency_uuid": {
                    "type": "string",
                    "description": "UUID валюты в биллинге. В настоящее время не используется, не валидируется"
                  },
                  "type": {
                    "$ref": "#/components/schemas/PriceType"
                  },
                  "count": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Количество периодов",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание цены тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Список цен тарифа",
        "description": "Возвращает список цен тарифа",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список цен тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/tariff/{tariff_uuid}/price/{price_uuid}": {
      "post": {
        "summary": "Изменение цены тарифа",
        "description": "Изменяет цену для тарифа",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "price_uuid",
            "description": "Идентификатор цены (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "price": {
                    "type": "string",
                    "description": "Цена (число)"
                  },
                  "currency_uuid": {
                    "type": "string",
                    "description": "UUID валюты в биллинге"
                  },
                  "type": {
                    "$ref": "#/components/schemas/PriceType"
                  },
                  "count": {
                    "type": "integer",
                    "description": "Количество периодов"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Включена ли цена. При передаче значения false цена для тарифа отключается, если до этого была включена При передаче значения true цена для тарифа включается, если до этого была отключена"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение цены тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Подробная информация о цене тарифа",
        "description": "Возвращает цену по двум идентификаторам: тарифа и цены",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "price_uuid",
            "description": "Идентификатор цены (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о цене тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Price"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление цены тарифа",
        "description": "Удаляет цену тарифа",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tariff_uuid",
            "description": "Идентификатор тарифа (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "price_uuid",
            "description": "Идентификатор цены (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление цены тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/tariff/{tariff_uuid}/changerule": {
      "post": {
        "summary": "Создание правил смены тарифа",
        "description": "Создает правила смены тарифа",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TariffUUID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "target_tariff_uuids",
                  "policy"
                ],
                "additionalProperties": false,
                "properties": {
                  "policy": {
                    "$ref": "#/components/schemas/Policy"
                  },
                  "target_tariff_uuids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "$ref": "#/components/schemas/TargetTariffUUID"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание правил смены тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Список правил смены тарифа",
        "description": "Возвращает список правил смены тарифа",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TariffUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Список правил смены тарифа",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "policy": {
                      "$ref": "#/components/schemas/Policy"
                    },
                    "target_tariff_uuid": {
                      "$ref": "#/components/schemas/TargetTariffUUID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/tariff/{tariff_uuid}/changerule/{changerule_uuid}": {
      "delete": {
        "summary": "Удаление правила смены тарифа",
        "description": "Удаляет правило смены тарифа",
        "tags": [
          "tariff"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/TariffUUID"
          },
          {
            "$ref": "#/components/parameters/ChangeRuleUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/product": {
      "get": {
        "summary": "Список продуктов",
        "description": "Возвращает список продуктов",
        "tags": [
          "product"
        ],
        "responses": {
          "200": {
            "description": "Список продуктов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание продукта",
        "description": "Создает продукт",
        "tags": [
          "product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Product"
                  },
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "internal_name"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание продукта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/product/{product_uuid}": {
      "get": {
        "summary": "Подробная информация о продукте",
        "description": "Возвращает информацию о продукте по его идентификатору",
        "tags": [
          "product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_uuid",
            "description": "Идентификатор продукта (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о продукте",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithUUID"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение продукта",
        "description": "Изменяет продукт",
        "tags": [
          "product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_uuid",
            "description": "Идентификатор продукта (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение продукта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление продукта",
        "description": "Удаляет продукт",
        "tags": [
          "product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_uuid",
            "description": "Идентификатор продукта (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление продукта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/addition": {
      "get": {
        "summary": "Список продуктов дополнений",
        "description": "Возвращает список продуктов дополнений",
        "tags": [
          "addition"
        ],
        "responses": {
          "200": {
            "description": "Список продуктов дополнений",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создание продукта дополнения",
        "description": "Создает продукт дополнения.\nПродукт дополнения выступает в качестве образа для создания тарифа дополнения.\n",
        "tags": [
          "addition"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Product"
                  },
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "internal_name"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание продукта дополнения",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tariff/addition/{addition_uuid}": {
      "get": {
        "summary": "Информация о продукте дополнения",
        "description": "Возвращает информацию о продукте дополнения по его идентификатору",
        "tags": [
          "addition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "addition_uuid",
            "description": "Идентификатор продукта дополнения (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о продукте дополнения",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithUUID"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение продукта дополнения",
        "description": "Изменяет продукт дополнения",
        "tags": [
          "addition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "addition_uuid",
            "description": "Идентификатор продукта дополнения (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение продукта дополнения",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление продукта дополнения",
        "description": "Удаляет продукт дополнения",
        "tags": [
          "addition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "addition_uuid",
            "description": "Идентификатор продукта дополнения (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление продукта дополнения",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rendered_services/certificate": {
      "get": {
        "summary": "Список актов выполненных работ",
        "description": "Возвращает список актов выполненных работ",
        "tags": [
          "rendered_services"
        ],
        "responses": {
          "200": {
            "description": "Список актов выполненных работ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rendered_services/certificate/{certificate_uuid}": {
      "get": {
        "summary": "Подробная информация об акте выполненных работ",
        "description": "Возвращает информацию об акте выполненных работ по его идентификатору",
        "tags": [
          "rendered_services"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "certificate_uuid",
            "description": "Идентификатор акта выполненных работ (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация об акте выполненных работ",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Certificate"
                    },
                    {
                      "$ref": "#/components/schemas/RecordID"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Изменение параметров акта выполненных работ",
        "description": "Изменяет параметры акта выполненных работ",
        "tags": [
          "rendered_services"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "certificate_uuid",
            "description": "Идентификатор акта выполненных работ (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "create_date": {
                    "type": "string",
                    "description": "Дата создания",
                    "example": "2020-12-01 15:21:11"
                  },
                  "status": {
                    "$ref": "#/components/schemas/CertificateStatus"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Комментарий",
                    "example": "Это просто комментарий"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное изменение параметров акта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление акта выполненных работ",
        "description": "Удаляет акт выполненных работ, если тот находится в статусе 'предварительный'",
        "tags": [
          "rendered_services"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "certificate_uuid",
            "description": "Идентификатор акта выполненных работ (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление акта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rendered_services/certificate/{certificate_uuid}/operation": {
      "get": {
        "summary": "Список операций входящих в акт выполненных работ",
        "description": "Возвращает список операций входящих в акт выполненных работ по идентификатору акта",
        "tags": [
          "rendered_services"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "certificate_uuid",
            "description": "Идентификатор акта выполненных работ (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список операций входящих в акт выполненных работ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateOperationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rendered_services/generate/client": {
      "post": {
        "summary": "Генерация актов выполненных работ по клиенту",
        "description": "Запускает в фоновом режиме генерацию актов выполненных работ по заданному клиенту с учетом переданных параметров",
        "tags": [
          "rendered_services"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "from_date",
                  "to_date",
                  "create_date",
                  "status",
                  "client_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "from_date": {
                    "type": "string",
                    "description": "Дата начала периода формирования акта",
                    "example": "2020-12-01 12:00:00"
                  },
                  "to_date": {
                    "type": "string",
                    "description": "Дата конца периода формирования акта",
                    "example": "2020-12-31 12:00:00"
                  },
                  "create_date": {
                    "type": "string",
                    "description": "Дата создания",
                    "example": "2020-12-01 00:00:00"
                  },
                  "client_uuid": {
                    "type": "string",
                    "description": "UUID клиента",
                    "example": "aba1b7df-ad84-4303-bbfa-5d29c675e6e4"
                  },
                  "status": {
                    "type": "string",
                    "description": "Статус",
                    "enum": [
                      "prepared",
                      "created"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешный запуск генерации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rendered_services/generate/type": {
      "post": {
        "summary": "Генерация актов выполненных работ по компании",
        "description": "Запускает в фоновом режиме генерацию актов выполненных работ по компании,  с учетом переданных типов клиентов",
        "tags": [
          "rendered_services"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "from_date",
                  "to_date",
                  "create_date",
                  "status",
                  "company_uuid",
                  "client_type"
                ],
                "additionalProperties": false,
                "properties": {
                  "from_date": {
                    "type": "string",
                    "description": "Дата начала периода формирования акта",
                    "example": "2020-12-01 12:00:00"
                  },
                  "to_date": {
                    "type": "string",
                    "description": "Дата конца периода формирования акта",
                    "example": "2020-12-31 12:00:00"
                  },
                  "create_date": {
                    "type": "string",
                    "description": "Дата создания",
                    "example": "2020-12-01 00:00:00"
                  },
                  "company_uuid": {
                    "type": "string",
                    "description": "UUID компании",
                    "example": "75888bf1-41a9-40a6-a7c0-350230c3692c"
                  },
                  "status": {
                    "type": "string",
                    "description": "Статус",
                    "enum": [
                      "prepared",
                      "created"
                    ]
                  },
                  "client_type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Тип клиента",
                      "enum": [
                        "individual",
                        "legal",
                        "sole_proprietor"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешный запуск генерации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart": {
      "get": {
        "summary": "Список корзин",
        "description": "Возвращает список внутренних сущностей типа \"корзина\"",
        "tags": [
          "cart"
        ],
        "responses": {
          "200": {
            "description": "Список корзин",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создать корзину",
        "description": "Создает внутреннюю сущность типа \"корзина\"",
        "tags": [
          "cart"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "client_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "client_uuid": {
                    "type": "string",
                    "description": "UUID клиента",
                    "example": "8a6c3606-020b-4258-9148-44822d9e5fe9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}": {
      "get": {
        "summary": "Подробная информация о корзине",
        "description": "Возвращает информацию о корзине по ее идентификатору",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о корзине",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/Cart"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление корзины",
        "description": "Удаляет корзину и операции в ней. Корзина должна быть активна, а покупка не оплачена",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины",
            "required": true,
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}/clear": {
      "post": {
        "summary": "Очистка корзины",
        "description": "Удаляет операции из корзины. Корзина должна быть активна, а покупка не оплачена",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление элементов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}/operation": {
      "get": {
        "summary": "Список покупок и продлений в корзине",
        "description": "Возвращает список покупок (услуг/подписок) из определённой корзины",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список операций корзины",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}/operation/trial": {
      "post": {
        "summary": "Добавление заказа услуги на триальном периоде в корзину",
        "description": "Добавляет операцию заказа услуги на триальном периоде в указанную корзину",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tariff_uuid",
                  "params"
                ],
                "additionalProperties": false,
                "properties": {
                  "tariff_uuid": {
                    "type": "string",
                    "description": "UUID тарифа",
                    "example": "ad82c6e5-d9bc-44d1-b509-552f9f507e16"
                  },
                  "next_price_uuid": {
                    "type": "string",
                    "description": "UUID цены, которая будет использоваться для продления услуги после окончания триального периода",
                    "example": "06bd4ec4-551b-43d4-94a6-2d49fd2c6f96"
                  },
                  "promocode": {
                    "type": "string",
                    "description": "Промокод, который будет применен при переходе на платный период после окончания триального периода",
                    "example": "PROMO2020"
                  },
                  "params": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "base_service_uuid": {
                    "type": "string",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное добавление заказа услуги на триальном периоде в корзину",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}/operation/buy": {
      "post": {
        "summary": "Добавление покупки в корзину",
        "description": "Создает сущность \"операция\" с типом \"покупка\", привязывая ее к указанной корзине",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tariff_uuid",
                  "price_uuid",
                  "params"
                ],
                "additionalProperties": false,
                "properties": {
                  "tariff_uuid": {
                    "type": "string",
                    "description": "UUID тарифа",
                    "example": "ad82c6e5-d9bc-44d1-b509-552f9f507e16"
                  },
                  "auto_prolong": {
                    "type": "boolean",
                    "default": false,
                    "description": "Флаг включения автопродления"
                  },
                  "price_uuid": {
                    "type": "string",
                    "description": "UUID цены, которая задана для указанного тарифа",
                    "example": "06bd4ec4-551b-43d4-94a6-2d49fd2c6f96"
                  },
                  "params": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "base_service_uuid": {
                    "type": "string",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное добавление покупки в корзину",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}/operation/prolong": {
      "post": {
        "summary": "Добавление продления в корзину",
        "description": "Создает сущность \"операция\" с типом \"продление\", привязывая ее к указанной корзине",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "service_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "service_uuid": {
                    "type": "string"
                  },
                  "new_price_uuid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}/operation/changetariff": {
      "post": {
        "summary": "Добавление смены тарифа в корзину",
        "description": "Создает сущность \"операция\" с типом \"смена тарифа\", привязывая ее к указанной корзине",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "service_uuid",
                  "new_price_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "service_uuid": {
                    "type": "string",
                    "description": "Идентификатор услуги, для которой происходит смена тарифа",
                    "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead"
                  },
                  "new_price_uuid": {
                    "type": "string",
                    "description": "Идентификатор цены тарифа, на которую перейдет услуга",
                    "example": "d08adbe7-5503-435b-9555-2f68d5a8dda7"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное создание",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}/operation/trial_prolong": {
      "post": {
        "summary": "Добавление продления услуги на триальный период в корзину",
        "description": "Добавляет операцию продления услуги на триальный период в указанную корзину",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "service_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "service_uuid": {
                    "type": "string",
                    "description": "UUID тарифа",
                    "example": "ad82c6e5-d9bc-44d1-b509-552f9f507e16"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешное добавление продления услуги на триальный период в корзину",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/cart/{cart_uuid}/operation/{operation_uuid}": {
      "get": {
        "summary": "Информация о покупке в корзине",
        "description": "Возвращает информацию о покупке в корзине по двум идентификаторам: корзины и операции",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "operation_uuid",
            "description": "Идентификатор операции (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о покупке в корзине",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/Operation"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удаление покупки или продления из корзины",
        "description": "Удаляет покупку из корзины. Корзина должна быть активна, а покупка не оплачена",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cart_uuid",
            "description": "Идентификатор корзины (id или uuid)",
            "required": true,
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "operation_uuid",
            "description": "Идентификатор операции",
            "required": true,
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/refund": {
      "post": {
        "summary": "Возврат средств по услуге",
        "description": "Вызывает возврат средств по услуге",
        "tags": [
          "cart"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "service_uuid",
                  "amount",
                  "payment_method_uuid"
                ],
                "additionalProperties": false,
                "properties": {
                  "service_uuid": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  },
                  "payment_method_uuid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Возвращает UUID возврата из сервиса платежей.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/refund/{refund_uuid}/operation": {
      "get": {
        "summary": "Список возвращенных операций",
        "description": "Возвращает список возвращенных операций",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "refund_uuid",
            "description": "Идентификатор возврата (id или uuid)",
            "required": true,
            "example": "999 || 80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список возвращенных операций",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/operation": {
      "get": {
        "summary": "Список всех покупок и продлений по всем корзинам",
        "description": "Возвращает список всех покупок и продлений по всем корзинам",
        "tags": [
          "cart"
        ],
        "responses": {
          "200": {
            "description": "Список всех покупок и продлений",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cart/service/{service_uuid}/operation": {
      "get": {
        "summary": "Подробная информация о текущей операции над услугой",
        "description": "Возвращает информацию о текущей операции над услугой",
        "tags": [
          "cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "service_uuid",
            "description": "Идентификатор услуги (uuid)",
            "required": true,
            "example": "80f9975c-95f7-4b4c-8ae5-e8365a700ead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подробная информация о текущей операции над услугой",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecordID"
                    },
                    {
                      "$ref": "#/components/schemas/Operation"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Сообщение об ошибке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}