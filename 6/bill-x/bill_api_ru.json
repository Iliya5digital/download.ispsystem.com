{
  "openapi": "3.0.0",
  "info": {
    "title": "BILLmanager API"
  },
  "servers": [
    {
      "url": "http://localhost:1500/billmgr"
    }
  ],
  "components": {
    "securitySchemes": {
      "SessionAuth": {
        "type": "apiKey",
        "name": "ISP_AUTHORIZATION",
        "in": "header",
        "description": "Введите токен авторизации с префиксом `Bearer`, например `Bearer 9698eff6c576ed85f5b57875`"
      }
    },
    "schemas": {
      "OutFormat": {
        "type": "string",
        "enum": [
          "bjson"
        ],
        "default": "bjson"
      },
      "LocaleElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "langcode": {
            "type": "string",
            "description": "ISO код языка"
          },
          "status": {
            "type": "string",
            "description": "Информация по локализации и ее статусе"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Локализация активна\"; значение \"off\": \"Локализация не используется\""
          },
          "embedded": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Встроенная локализация\""
          },
          "default_lang": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Локализация по умолчанию\""
          }
        }
      },
      "LocaleNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование локализации (примеры: Русский, Французский)",
            "example": "text"
          },
          "langcode": {
            "type": "string",
            "description": "Код языка, который будет использоваться для идентификации локализованных сообщений",
            "example": "text"
          }
        }
      },
      "Locale": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование локализации (примеры: Русский, Французский)",
            "example": "text"
          },
          "langcode": {
            "type": "string",
            "description": "Код языка, который будет использоваться для идентификации локализованных сообщений",
            "example": "text"
          }
        }
      },
      "LocaleSetdefault": {
        "type": "object",
        "properties": {}
      },
      "CurrencyElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "iso": {
            "type": "string",
            "description": "Код валюты в классификации ISO"
          },
          "code": {
            "type": "string",
            "description": "Номер валюты в классификации ISO"
          },
          "status": {
            "type": "string",
            "description": "Признак активности валюты в интерфейсе BILLmanager"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Доступна для использования\"; значение \"off\": \"Выключена\""
          }
        }
      },
      "CurrencyNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование валюты",
            "example": "text"
          },
          "iso": {
            "type": "string",
            "description": "ISO код",
            "example": "text"
          },
          "symbol": {
            "type": "string",
            "description": "UTF символ валюты",
            "example": ""
          },
          "code": {
            "type": "string",
            "description": "ISO номер",
            "example": "1"
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование валюты",
            "example": "text"
          },
          "iso": {
            "type": "string",
            "description": "ISO код",
            "example": "text"
          },
          "symbol": {
            "type": "string",
            "description": "UTF символ валюты",
            "example": ""
          },
          "code": {
            "type": "string",
            "description": "ISO номер",
            "example": "1"
          }
        }
      },
      "CurrencyRelateElem": {
        "type": "object",
        "properties": {
          "relate": {
            "type": "string",
            "description": "Наименование валюты"
          },
          "iso": {
            "type": "string",
            "description": "ISO код валюты"
          },
          "ratedate": {
            "type": "string",
            "description": "Дата последнего обновления курса"
          },
          "rate": {
            "type": "string",
            "description": "Динамика курса валюты по отношению к выбранной"
          },
          "status": {
            "type": "string",
            "description": "Автоматическая загрузка валют"
          },
          "autoupload": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Включена\"; значение \"off\": \"Выключена\""
          }
        }
      },
      "CurrencyrateElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "ratedate": {
            "type": "string",
            "description": "Дата актуальности курса"
          },
          "rate": {
            "type": "string",
            "description": "Значение курса валюты на выбранную дату."
          }
        }
      },
      "CurrencyrateNew": {
        "type": "object",
        "properties": {
          "ratedate": {
            "type": "string",
            "description": "Дата с которой действует курс",
            "example": "text"
          },
          "amount": {
            "type": "string",
            "description": "Количество единиц базовой валюты, за которое указан курс конвертации",
            "example": "1"
          },
          "rate": {
            "type": "string",
            "description": "Значение курса влюты на указанную дату за указанное количество единиц",
            "example": "1.00"
          }
        }
      },
      "Currencyrate": {
        "type": "object",
        "properties": {
          "ratedate": {
            "type": "string",
            "description": "Дата с которой действует курс",
            "example": "text"
          },
          "amount": {
            "type": "string",
            "description": "Количество единиц базовой валюты, за которое указан курс конвертации",
            "example": "1"
          },
          "rate": {
            "type": "string",
            "description": "Значение курса влюты на указанную дату за указанное количество единиц",
            "example": "1.00"
          }
        }
      },
      "CurrencyrateUpload": {
        "type": "object",
        "properties": {
          "autoupload": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Курс валют будет загружаться автоматически в указанное время",
            "example": "off"
          },
          "autotime": {
            "type": "string",
            "description": "Время загрузки указывается в формате чч:мм. Задание обновления курса валют будет запускаться каждый день в указанное время",
            "example": "text"
          },
          "upload": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Будет запущен процесс обновления курса валют с указанными параметрами",
            "example": "off"
          },
          "multi": {
            "type": "string",
            "description": "Умножить загруженный курс на значение указанное в данном поле",
            "example": "0.0"
          },
          "sum": {
            "type": "string",
            "description": "Увеличить загруженный курс на значение указанное в данном поле",
            "example": "0.0"
          },
          "fromdate": {
            "type": "string",
            "description": "Будут загружены данные начиная с указанной даты. Если значение не указано, загрузка будет произведена начиная с даты последнего обновления курсов валюты",
            "example": ""
          },
          "rewrite": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает перезапись значений уже сохраненных в системе при совпадении даты",
            "example": "off"
          }
        }
      },
      "CurrencyUpload": {
        "type": "object",
        "properties": {}
      },
      "ProjectElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"off\": \"Провайдер временно выключен. Авторизация, а также заказ, продление и другие операции с услугами заблокированы\""
          },
          "currency_str": {
            "type": "string",
            "description": "Основная валюта провайдера",
            "example": "RUB"
          },
          "site": {
            "type": "string",
            "description": "URL адрес сайта провайдера"
          },
          "billurl": {
            "type": "string",
            "description": "URL адрес доступа к BILLmanager. Используется для определения провайдера при регистрации клиента"
          }
        }
      },
      "ProjectNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование провайдера, используется в уведомлениях, а также при формировании имени счета клиентов",
            "example": "text"
          },
          "small_img_upload": {
            "type": "string",
            "description": "Используется при построении списка доступных провайдеров",
            "example": ""
          },
          "notifyemail": {
            "type": "string",
            "description": "Email адрес, с которого будут отправляться уведомления",
            "example": "example@domain.com"
          },
          "supportemail": {
            "type": "string",
            "description": "Используется в сообщениях об активации пользователя/плательщика и восстановлении пароля",
            "example": "example@domain.com"
          },
          "site": {
            "type": "string",
            "description": "URL адрес Вашего сайта. Может быть ипользован в уведомлениях, отправляемых клиентам",
            "example": "http://example.com"
          },
          "billurl": {
            "type": "string",
            "description": "URL адрес доступа к BILLmanager. Может быть ипользован в уведомлениях, отправляемых клиентам",
            "example": "http://example.com"
          },
          "clienthelp": {
            "type": "string",
            "description": "URL страницы, которая будет открыта при выборе пункта меню \"Вызов справки\" в интерфейсе пользователя. Макрос {lang} позволяет открывать разные страницы в зависимости от выбранной у клиента локализации",
            "example": "http://example.com"
          },
          "basecurrency": {
            "type": "string",
            "description": "Валюта расчетов с клиентами. Изменение блокируется при наличии платежей и расходов. В случае переключения клиентам будут созданы новые лицевые счета в новой валюте",
            "example": ""
          },
          "country_default": {
            "type": "string",
            "description": "Страна клиентов по умолчанию. Используется в случае невозможности определить страну по IP адресу или по сохраненному значению",
            "example": "182"
          },
          "state_default": {
            "type": "string",
            "description": "Регион клиентов по умолчанию. Используется в случае невозможности определить регион по сохраненному значению",
            "example": ""
          },
          "auth_method_phone": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "По номеру телефона",
            "example": "off"
          },
          "PhoneAuthCheckTry": {
            "type": "string",
            "description": "Количество попыток ввода кода, при достижении указанного лимита, требуется получение нового кода",
            "example": "1"
          },
          "PhoneAuthSendTry": {
            "type": "string",
            "description": "Количество попыток получения кода подтверждения номера телефона при прохождении процедуры верификации",
            "example": "1"
          },
          "auth_method_vkontakte": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "ВКонтакте",
            "example": "off"
          },
          "auth_method_google": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Google",
            "example": "off"
          },
          "recaptcha_type": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Настройка использования reCAPTCHA на форме регистрации для провайдера; 0 - глобальные настройки; 1 - не использовать; 2 - использовать reCAPTCHA; 3 - использовать Invisible reCAPTCHA",
            "example": ""
          },
          "recaptcha_publickey": {
            "type": "string",
            "description": "Публичный ключ сервиса reCAPTCHA",
            "example": "text"
          },
          "recaptcha_privatekey": {
            "type": "string",
            "description": "Секретный ключ сервиса reCAPTCHA",
            "example": "text"
          },
          "recaptcha_auth_publickey": {
            "type": "string",
            "description": "Публичный ключ сервиса reCAPTCHA",
            "example": "text"
          },
          "recaptcha_auth_privatekey": {
            "type": "string",
            "description": "Секретный ключ сервиса reCAPTCHA",
            "example": "text"
          },
          "recaptcha_auth_excluded_ips": {
            "type": "string",
            "description": "Список IP адресов и/или диспазонов IP адресов, для которых не будет выполнятся проверка reCAPTCHA",
            "example": ""
          },
          "autoassignitem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении данной опции клиентам при присоединении к провайдеру будет автоматически и бесплатно назначаться выбранная услуга",
            "example": "off"
          },
          "closeaccounts": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает закрытие счетов клиентов по прошествию выбранного промежутка времени",
            "example": "off"
          },
          "period_lenght": {
            "type": "string",
            "description": "Укажите период, по прошествию которого будут закрываться счета клиентов",
            "example": "0"
          },
          "period_type": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "description": "Тип периода; 1 - День; 2 - Месяц; 3 - Год",
            "example": ""
          },
          "description": {
            "type": "string",
            "description": "Описание расхода",
            "example": "text"
          },
          "activeitem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает закрытие счетов клиентов даже при наличии активных услуг",
            "example": "off"
          },
          "ga_version4": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать Google Analytics 4 вместо Universal Analytics (Google Analytics 3)",
            "example": "off"
          },
          "ga_counter": {
            "type": "string",
            "description": "Идентификатор потока данных Google Analytics (Вида G-YQXYQ1YQ23)",
            "example": ""
          },
          "ga_secret": {
            "type": "string",
            "description": "Секретный ключ для Measurement Protocol",
            "example": ""
          },
          "ga_userid": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает отправку в Google код клиента в качестве User ID",
            "example": "off"
          },
          "ga_type": {
            "type": "string",
            "description": "Строить экспорт по расходам или по услугам. По расходам - выгружается информация о всех расходах совершенных клиентами. По услугам - по каждой услуге заказанной клиентом выгрузка происходит только один раз, не зависимо от того сколько по ней было расходов",
            "example": ""
          },
          "ga_trial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает возможность выгрузки информации о триальных услуги",
            "example": "off"
          },
          "ym_counter": {
            "type": "string",
            "description": "Id счетчика для Яндекс.Метрики",
            "example": ""
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование провайдера, используется в уведомлениях, а также при формировании имени счета клиентов",
            "example": "text"
          },
          "small_img_upload": {
            "type": "string",
            "description": "Используется при построении списка доступных провайдеров",
            "example": ""
          },
          "notifyemail": {
            "type": "string",
            "description": "Email адрес, с которого будут отправляться уведомления",
            "example": "example@domain.com"
          },
          "supportemail": {
            "type": "string",
            "description": "Используется в сообщениях об активации пользователя/плательщика и восстановлении пароля",
            "example": "example@domain.com"
          },
          "site": {
            "type": "string",
            "description": "URL адрес Вашего сайта. Может быть ипользован в уведомлениях, отправляемых клиентам",
            "example": "http://example.com"
          },
          "billurl": {
            "type": "string",
            "description": "URL адрес доступа к BILLmanager. Может быть ипользован в уведомлениях, отправляемых клиентам",
            "example": "http://example.com"
          },
          "clienthelp": {
            "type": "string",
            "description": "URL страницы, которая будет открыта при выборе пункта меню \"Вызов справки\" в интерфейсе пользователя. Макрос {lang} позволяет открывать разные страницы в зависимости от выбранной у клиента локализации",
            "example": "http://example.com"
          },
          "basecurrency": {
            "type": "string",
            "description": "Валюта расчетов с клиентами. Изменение блокируется при наличии платежей и расходов. В случае переключения клиентам будут созданы новые лицевые счета в новой валюте",
            "example": ""
          },
          "country_default": {
            "type": "string",
            "description": "Страна клиентов по умолчанию. Используется в случае невозможности определить страну по IP адресу или по сохраненному значению",
            "example": "182"
          },
          "state_default": {
            "type": "string",
            "description": "Регион клиентов по умолчанию. Используется в случае невозможности определить регион по сохраненному значению",
            "example": ""
          },
          "auth_method_phone": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "По номеру телефона",
            "example": "off"
          },
          "PhoneAuthCheckTry": {
            "type": "string",
            "description": "Количество попыток ввода кода, при достижении указанного лимита, требуется получение нового кода",
            "example": "1"
          },
          "PhoneAuthSendTry": {
            "type": "string",
            "description": "Количество попыток получения кода подтверждения номера телефона при прохождении процедуры верификации",
            "example": "1"
          },
          "auth_method_vkontakte": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "ВКонтакте",
            "example": "off"
          },
          "auth_method_google": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Google",
            "example": "off"
          },
          "recaptcha_type": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Настройка использования reCAPTCHA на форме регистрации для провайдера; 0 - глобальные настройки; 1 - не использовать; 2 - использовать reCAPTCHA; 3 - использовать Invisible reCAPTCHA",
            "example": ""
          },
          "recaptcha_publickey": {
            "type": "string",
            "description": "Публичный ключ сервиса reCAPTCHA",
            "example": "text"
          },
          "recaptcha_privatekey": {
            "type": "string",
            "description": "Секретный ключ сервиса reCAPTCHA",
            "example": "text"
          },
          "recaptcha_auth_type": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Настройка использования reCAPTCHA на форме авторизации для провайдера; 0 - глобальные настройки; 1 - не использовать; 2 - использовать reCAPTCHA; 3 - использовать Invisible reCAPTCHA",
            "example": ""
          },
          "recaptcha_auth_publickey": {
            "type": "string",
            "description": "Публичный ключ сервиса reCAPTCHA",
            "example": "text"
          },
          "recaptcha_auth_privatekey": {
            "type": "string",
            "description": "Секретный ключ сервиса reCAPTCHA",
            "example": "text"
          },
          "recaptcha_auth_excluded_ips": {
            "type": "string",
            "description": "Список IP адресов и/или диспазонов IP адресов, для которых не будет выполнятся проверка reCAPTCHA",
            "example": ""
          },
          "licenseserverprovider": {
            "type": "string",
            "description": "Укажите сервер лицензий для заказа панелей управления к услугам",
            "example": ""
          },
          "autoassignitem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении данной опции клиентам при присоединении к провайдеру будет автоматически и бесплатно назначаться выбранная услуга",
            "example": "off"
          },
          "autoassignpricelist": {
            "type": "string",
            "description": "Тариф подключаемой услуги",
            "example": ""
          },
          "autoassignperiod": {
            "type": "string",
            "description": "Период, на который подключается услуга",
            "example": ""
          },
          "closeaccounts": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает закрытие счетов клиентов по прошествию выбранного промежутка времени",
            "example": "off"
          },
          "period_lenght": {
            "type": "string",
            "description": "Укажите период, по прошествию которого будут закрываться счета клиентов",
            "example": "0"
          },
          "period_type": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "description": "Тип периода; 1 - День; 2 - Месяц; 3 - Год",
            "example": ""
          },
          "description": {
            "type": "string",
            "description": "Описание расхода",
            "example": "text"
          },
          "activeitem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает закрытие счетов клиентов даже при наличии активных услуг",
            "example": "off"
          },
          "ga_version4": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать Google Analytics 4 вместо Universal Analytics (Google Analytics 3)",
            "example": "off"
          },
          "ga_counter": {
            "type": "string",
            "description": "Идентификатор потока данных Google Analytics (Вида G-YQXYQ1YQ23)",
            "example": ""
          },
          "ga_secret": {
            "type": "string",
            "description": "Секретный ключ для Measurement Protocol",
            "example": ""
          },
          "ga_userid": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает отправку в Google код клиента в качестве User ID",
            "example": "off"
          },
          "ga_type": {
            "type": "string",
            "description": "Строить экспорт по расходам или по услугам. По расходам - выгружается информация о всех расходах совершенных клиентами. По услугам - по каждой услуге заказанной клиентом выгрузка происходит только один раз, не зависимо от того сколько по ней было расходов",
            "example": ""
          },
          "ga_trial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает возможность выгрузки информации о триальных услуги",
            "example": "off"
          },
          "ym_counter": {
            "type": "string",
            "description": "Id счетчика для Яндекс.Метрики",
            "example": ""
          }
        }
      },
      "ProjectLocaleElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Локализация активна\"; значение \"off\": \"Локализация не используется\""
          },
          "embedded": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Встроенная локализация\""
          },
          "default_locale": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Используется по умолчанию\""
          }
        }
      },
      "ProjectCompanyElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "ProjectCompany": {
        "type": "object",
        "properties": {
          "payment_description": {
            "type": "string",
            "description": "Будет отображаться в качестве наименования авансового платежа в списке платежей",
            "example": ""
          }
        }
      },
      "ProjectSupport": {
        "type": "object",
        "properties": {}
      },
      "ProjectTaxruleElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "company": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Страна плательщика"
          },
          "taxrate": {
            "type": "string",
            "description": "Ставка налога"
          },
          "itemtype": {
            "type": "string",
            "description": "Тип продукта"
          },
          "startdatetime": {
            "type": "string",
            "description": "Дата начала действия налоговой ставки"
          },
          "enddatetime": {
            "type": "string",
            "description": "Дата окончания действия налоговой ставки"
          }
        }
      },
      "ProjectTaxruleNew": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "enum": [
              "null"
            ],
            "description": "; null - -- Все --",
            "example": ""
          },
          "country": {
            "type": "string",
            "description": "Выберите страну, для плательщиков которой будет действовать правило налогообложения ",
            "example": ""
          },
          "state": {
            "type": "string",
            "enum": [
              "null"
            ],
            "description": "Если используется двухуровневая система налогообложения, вы можете задать федеральный налог (все) и налог региона. Эти налоги будут суммироваться.; null - -- Все --",
            "example": ""
          },
          "taxrate": {
            "type": "string",
            "description": "Укажите налоговую ставку для выбранной страны",
            "example": "1.00"
          },
          "timezone": {
            "type": "string",
            "description": "Выберите часовой пояс, который будет использоваться для дат начала и окончания действия налоговой ставки",
            "example": ""
          },
          "startdatetime": {
            "type": "string",
            "description": "Дата начала действия налоговой ставки",
            "example": ""
          },
          "enddatetime": {
            "type": "string",
            "description": "Дата окончания действия налоговой ставки",
            "example": ""
          },
          "specialitemtype": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Налогообложению подвергаются не все типы продуктов",
            "example": "off"
          },
          "itemtype": {
            "type": "string",
            "description": "Укажите какие типы продуктов облагаются налогами",
            "example": ""
          }
        }
      },
      "ProjectTaxrule": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "enum": [
              "null"
            ],
            "description": "; null - -- Все --",
            "example": ""
          },
          "country": {
            "type": "string",
            "description": "Выберите страну, для плательщиков которой будет действовать правило налогообложения ",
            "example": ""
          },
          "state": {
            "type": "string",
            "enum": [
              "null"
            ],
            "description": "Если используется двухуровневая система налогообложения, вы можете задать федеральный налог (все) и налог региона. Эти налоги будут суммироваться.; null - -- Все --",
            "example": ""
          },
          "taxrate": {
            "type": "string",
            "description": "Укажите налоговую ставку для выбранной страны",
            "example": "1.00"
          },
          "timezone": {
            "type": "string",
            "description": "Выберите часовой пояс, который будет использоваться для дат начала и окончания действия налоговой ставки",
            "example": ""
          },
          "startdatetime": {
            "type": "string",
            "description": "Дата начала действия налоговой ставки",
            "example": ""
          },
          "enddatetime": {
            "type": "string",
            "description": "Дата окончания действия налоговой ставки",
            "example": ""
          },
          "specialitemtype": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Налогообложению подвергаются не все типы продуктов",
            "example": "off"
          },
          "itemtype": {
            "type": "string",
            "description": "Укажите какие типы продуктов облагаются налогами",
            "example": ""
          }
        }
      },
      "ProjectTaxruleSettings": {
        "type": "object",
        "properties": {
          "taxexclusive": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включите параметр, если хотите, чтобы цены на товары/услуги увеличивались на величину налога. При этом нельзя будет использовать налоговые ставки с ограничением по компании в которую платит плательщик",
            "example": "off"
          },
          "taxcustompay": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Отображать налог при авансовом пополнение счета. В некоторых странах это необходимо, в некоторых нет. Сверьтесь с системой налогообложения в вашей стране.",
            "example": "off"
          }
        }
      },
      "ProjectGroupElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор"
          },
          "name": {
            "type": "string",
            "description": "Наименование группы"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "ProjectGroupNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": ""
          },
          "allow_same_phone": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция разрешает использовать для верификации учетной записи один и тот же номер телефона на разных учетных записях",
            "example": "off"
          }
        }
      },
      "ProjectGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": ""
          },
          "allow_same_phone": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция разрешает использовать для верификации учетной записи один и тот же номер телефона на разных учетных записях",
            "example": "off"
          }
        }
      },
      "ProjectItemtypeElem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет типа продукта при отображении"
          }
        }
      },
      "ProjectCurrencyElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "iso": {
            "type": "string",
            "description": "Международный код валюты",
            "example": "RUB"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          },
          "projectdefault": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Используется по умолчанию\""
          }
        }
      },
      "CompanyElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          }
        }
      },
      "CompanyAddNew": {
        "type": "object",
        "properties": {
          "country_legal": {
            "type": "string",
            "description": "Выберите страну в которой юридически зарегистрирована ваша компания. От выбора страны будет зависеть какие виды документов и данных доступны для компании. Изменить список документов и полей можно в справочник \"Страны\".",
            "example": "182"
          },
          "profiletype": {
            "type": "string",
            "description": "Юридический статус компании",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "Наименование компании",
            "example": "text"
          },
          "email": {
            "type": "string",
            "description": "Основной Email компании",
            "example": "example@domain.com"
          },
          "www": {
            "type": "string",
            "description": "URL сайта компании. Может быть использован в шаблонах печати документов",
            "example": "http://example.com"
          },
          "fax": {
            "type": "string",
            "description": "Номер факса",
            "example": ""
          },
          "phone": {
            "type": "string",
            "description": "Контактный номер телефона",
            "example": ""
          },
          "payment_description": {
            "type": "string",
            "description": "Будет отображаться в качестве наименования авансового платежа в списке платежей",
            "example": ""
          },
          "state_legal": {
            "type": "string",
            "description": "Регион регистрации компании",
            "example": ""
          },
          "postcode_legal": {
            "type": "string",
            "description": "Индекс, по адресу регистрации компании",
            "example": ""
          },
          "city_legal": {
            "type": "string",
            "description": "Город регистрации компании",
            "example": ""
          },
          "country_physical": {
            "type": "string",
            "description": "Страна физического размещения",
            "example": ""
          },
          "state_physical": {
            "type": "string",
            "description": "Регион физического размещения",
            "example": ""
          },
          "postcode_physical": {
            "type": "string",
            "description": "Индекс для физического адреса размещения",
            "example": ""
          },
          "city_physical": {
            "type": "string",
            "description": "Город физического размещения",
            "example": ""
          },
          "regdate": {
            "type": "string",
            "description": "Дата основания компании",
            "example": ""
          },
          "locale": {
            "type": "string",
            "description": "Язык, на котором выписываются документы",
            "example": ""
          },
          "doctmpl_payment": {
            "type": "string",
            "description": "Шаблон печати счета, выставленного компанией. Может быть переопределен в настройках метода оплаты",
            "example": ""
          },
          "numtmpl_payment": {
            "type": "string",
            "description": "Шаблон формирования номера счета, можно использовать макросы {id} - код платежа и {num} - порядковый номер платежа, получателем которого является компания. При отсутствии обоих макросов в шаблоне номера счета к шаблону будет добавлен макрос {num}",
            "example": ""
          },
          "nextnum_payment": {
            "type": "string",
            "description": "Следующий порядковый номер платежа, получаетелем которого является компания. Учитывается только при условии заполнения шаблона номера счета и не заполненном шаблоне у метода оплаты",
            "example": "1"
          },
          "doctmpl_invoice": {
            "type": "string",
            "enum": [
              "correction",
              "correction"
            ],
            "description": "Шаблон печати акта выполненых работ, выставленного компанией; correction - Шаблон акта корректировки; correction - Шаблон акта корректировки",
            "example": ""
          },
          "numtmpl_invoice": {
            "type": "string",
            "description": "Шаблон формирования номера акта, можно использовать макросы {id} - код акта и {num} - порядковый номер акта, выписанного от имени компании. При отсутствии обоих макросов в шаблоне номера счета к шаблону будет добавлен макрос {num}",
            "example": ""
          },
          "nextnum_invoice": {
            "type": "string",
            "description": "Следующий порядковый номер акта, выписанного от имени компании. Учитывается только при условии заполнения шаблона номера акта",
            "example": "1"
          },
          "doctmpl_invoice_correction": {
            "type": "string",
            "description": "Шаблон печати акта корректировки, выставленного компанией",
            "example": ""
          },
          "numtmpl_invoice_correction": {
            "type": "string",
            "description": "Шаблон формирования номера акта, можно использовать макросы {id} - код акта и {num} - порядковый номер акта, выписанного от имени компании. При отсутствии обоих макросов в шаблоне номера счета к шаблону будет добавлен макрос {num}",
            "example": ""
          },
          "nextnum_invoice_correction": {
            "type": "string",
            "description": "Следующий порядковый номер акта корректировки, выписанного от имени компании. Учитывается только при условии заполнения шаблона номера акта",
            "example": "1"
          },
          "doctmpl_envelope": {
            "type": "string",
            "description": "Шаблон печати конверта для отправки корреспонденции",
            "example": ""
          },
          "doctmpl_reconciliation": {
            "type": "string",
            "description": "Выберите шаблон акта сверки. Создать или отредактировать его можно в меню \"Шаблоны документов\". Если не задать шаблон, то клиентам будет недоступна возможность создания акта сверки.",
            "example": ""
          },
          "sendcostcurrency": {
            "type": "string",
            "description": "Укажите валюту, в которой указана стоимость отправки актов сверки.",
            "example": ""
          },
          "sendcost": {
            "type": "string",
            "description": "Стоимость отправки акта сверки почтой. На указанную сумму при отправке акта будет создан расход",
            "example": "1.00"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование компании",
            "example": "text"
          },
          "email": {
            "type": "string",
            "description": "Основной Email компании",
            "example": "example@domain.com"
          },
          "www": {
            "type": "string",
            "description": "URL сайта компании. Может быть использован в шаблонах печати документов",
            "example": "http://example.com"
          },
          "fax": {
            "type": "string",
            "description": "Номер факса",
            "example": ""
          },
          "phone": {
            "type": "string",
            "description": "Контактный номер телефона",
            "example": ""
          },
          "payment_description": {
            "type": "string",
            "description": "Будет отображаться в качестве наименования авансового платежа в списке платежей",
            "example": ""
          },
          "country_legal": {
            "type": "string",
            "description": "Страна регистрации компании",
            "example": ""
          },
          "state_legal": {
            "type": "string",
            "description": "Регион регистрации компании",
            "example": ""
          },
          "postcode_legal": {
            "type": "string",
            "description": "Индекс, по адресу регистрации компании",
            "example": ""
          },
          "city_legal": {
            "type": "string",
            "description": "Город регистрации компании",
            "example": ""
          },
          "country_physical": {
            "type": "string",
            "description": "Страна физического размещения",
            "example": ""
          },
          "state_physical": {
            "type": "string",
            "description": "Регион физического размещения",
            "example": ""
          },
          "postcode_physical": {
            "type": "string",
            "description": "Индекс для физического адреса размещения",
            "example": ""
          },
          "city_physical": {
            "type": "string",
            "description": "Город физического размещения",
            "example": ""
          },
          "regdate": {
            "type": "string",
            "description": "Дата основания компании",
            "example": ""
          },
          "locale": {
            "type": "string",
            "description": "Язык, на котором выписываются документы",
            "example": ""
          },
          "doctmpl_payment": {
            "type": "string",
            "description": "Шаблон печати счета, выставленного компанией. Может быть переопределен в настройках метода оплаты",
            "example": ""
          },
          "numtmpl_payment": {
            "type": "string",
            "description": "Шаблон формирования номера счета, можно использовать макросы {id} - код платежа и {num} - порядковый номер платежа, получателем которого является компания. При отсутствии обоих макросов в шаблоне номера счета к шаблону будет добавлен макрос {num}",
            "example": ""
          },
          "nextnum_payment": {
            "type": "string",
            "description": "Следующий порядковый номер платежа, получаетелем которого является компания. Учитывается только при условии заполнения шаблона номера счета и не заполненном шаблоне у метода оплаты",
            "example": "1"
          },
          "doctmpl_invoice": {
            "type": "string",
            "enum": [
              "correction"
            ],
            "description": "Шаблон печати акта выполненых работ, выставленного компанией; correction - Шаблон акта корректировки",
            "example": ""
          },
          "numtmpl_invoice": {
            "type": "string",
            "description": "Шаблон формирования номера акта, можно использовать макросы {id} - код акта и {num} - порядковый номер акта, выписанного от имени компании. При отсутствии обоих макросов в шаблоне номера счета к шаблону будет добавлен макрос {num}",
            "example": ""
          },
          "nextnum_invoice": {
            "type": "string",
            "description": "Следующий порядковый номер акта, выписанного от имени компании. Учитывается только при условии заполнения шаблона номера акта",
            "example": "1"
          },
          "doctmpl_invoice_correction": {
            "type": "string",
            "description": "Шаблон печати акта корректировки, выставленного компанией",
            "example": ""
          },
          "numtmpl_invoice_correction": {
            "type": "string",
            "description": "Шаблон формирования номера акта, можно использовать макросы {id} - код акта и {num} - порядковый номер акта, выписанного от имени компании. При отсутствии обоих макросов в шаблоне номера счета к шаблону будет добавлен макрос {num}",
            "example": ""
          },
          "nextnum_invoice_correction": {
            "type": "string",
            "description": "Следующий порядковый номер акта корректировки, выписанного от имени компании. Учитывается только при условии заполнения шаблона номера акта",
            "example": "1"
          },
          "doctmpl_envelope": {
            "type": "string",
            "description": "Шаблон печати конверта для отправки корреспонденции",
            "example": ""
          },
          "doctmpl_reconciliation": {
            "type": "string",
            "description": "Выберите шаблон акта сверки. Создать или отредактировать его можно в меню \"Шаблоны документов\". Если не задать шаблон, то клиентам будет недоступна возможность создания акта сверки.",
            "example": ""
          },
          "sendcostcurrency": {
            "type": "string",
            "description": "Укажите валюту, в которой указана стоимость отправки актов сверки.",
            "example": ""
          },
          "sendcost": {
            "type": "string",
            "description": "Стоимость отправки акта сверки почтой. На указанную сумму при отправке акта будет создан расход",
            "example": "1.00"
          }
        }
      },
      "CompanyContractElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "contracttype": {
            "type": "string",
            "description": "Тип договора"
          },
          "doctmpl_name": {
            "type": "string",
            "description": "Шаблон, выбранный для договора"
          }
        }
      },
      "CompanyContractNew": {
        "type": "object",
        "properties": {
          "name_ru": {
            "type": "string",
            "example": "text"
          },
          "contracttype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "0",
              "1",
              "2"
            ],
            "description": "Выберите тип договора; 0 - Договор оказания услуг; 1 - Оферта; 2 - Агентский договор участия в реферальной программе; 0 - Договор оказания услуг; 1 - Оферта; 2 - Агентский договор участия в реферальной программе",
            "example": ""
          },
          "accepttype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Порядок принятия и отображения оферты клиентом; 0 - При регистрации и оплате; 1 - При регистрации; 2 - При оплате",
            "example": ""
          },
          "itemtype": {
            "type": "string",
            "description": "Договор будет предложен для подписания, если у клиента будут услуги соответствующих типов",
            "example": ""
          },
          "show_pricelist": {
            "type": "string",
            "example": ""
          },
          "pricelist": {
            "type": "string",
            "description": "Договор будет предложен для подписания, если у клиента будут услуги соответствующих тарифов",
            "example": ""
          },
          "accountgroup": {
            "type": "string",
            "description": "Группа клиентов, которой будет доступен данный договор",
            "example": ""
          },
          "accountgroups_restrict": {
            "type": "string",
            "description": "Группы клиентов, которым недоступен данный договор",
            "example": ""
          },
          "profiletype": {
            "type": "string",
            "example": ""
          },
          "for_each_item": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Для каждой услуги клиента будет создаваться отдельный договор",
            "example": "off"
          },
          "non_standard": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Текст нетипового договора формируется сотрудником и прикрепляется отдельным файлом к договору клиента",
            "example": "off"
          },
          "doctmpl": {
            "type": "string",
            "description": "Шаблон договора. Создается и редактируется в резделе 'Шаблоны документов'",
            "example": ""
          },
          "suffix": {
            "type": "string",
            "description": "Добавляется к номеру договора при его создании. Номер договора формируется в виде КОД_ПЛАТЕЛЬШИКА + СУФФИКС. Т.е. для плательщика с кодом 1 при суффиксе '/договор', номер договора будет выглядеть как '1/договор'. Если типовой договор создается для каждой услуги, то вы можете указать в суффиксе код договора '__id__'. Например при суффиксе '/__id__/договор', номер договора будет выглядеть как '1/2/договор'",
            "example": ""
          },
          "numbertmpl": {
            "type": "string",
            "description": "Шаблон, по которому будет генерироваться нумерация договоров. Поддерживается указание даты по заданному формату и макросов. Подробнее в документации",
            "example": ""
          },
          "start_date": {
            "type": "string",
            "description": "Дата, с которой вступает в силу договор. Срок действия договора с клиентом выбирается по наибольшему значению: дата создания плательщика клиета в BILLmanager, дата основания компании, для которой создан образец договора, дата начала действия договора",
            "example": ""
          },
          "end_date": {
            "type": "string",
            "description": "После указанной даты договор перестанет генерироваться клиентам автоматически",
            "example": ""
          }
        }
      },
      "CompanyContract": {
        "type": "object",
        "properties": {
          "name_ru": {
            "type": "string",
            "example": "text"
          },
          "contracttype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "0",
              "1",
              "2"
            ],
            "description": "Выберите тип договора; 0 - Договор оказания услуг; 1 - Оферта; 2 - Агентский договор участия в реферальной программе; 0 - Договор оказания услуг; 1 - Оферта; 2 - Агентский договор участия в реферальной программе",
            "example": ""
          },
          "accepttype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Порядок принятия и отображения оферты клиентом; 0 - При регистрации и оплате; 1 - При регистрации; 2 - При оплате",
            "example": ""
          },
          "itemtype": {
            "type": "string",
            "description": "Договор будет предложен для подписания, если у клиента будут услуги соответствующих типов",
            "example": ""
          },
          "show_pricelist": {
            "type": "string",
            "example": ""
          },
          "pricelist": {
            "type": "string",
            "description": "Договор будет предложен для подписания, если у клиента будут услуги соответствующих тарифов",
            "example": ""
          },
          "accountgroup": {
            "type": "string",
            "description": "Группа клиентов, которой будет доступен данный договор",
            "example": ""
          },
          "accountgroups_restrict": {
            "type": "string",
            "description": "Группы клиентов, которым недоступен данный договор",
            "example": ""
          },
          "profiletype": {
            "type": "string",
            "example": ""
          },
          "for_each_item": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Для каждой услуги клиента будет создаваться отдельный договор",
            "example": "off"
          },
          "non_standard": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Текст нетипового договора формируется сотрудником и прикрепляется отдельным файлом к договору клиента",
            "example": "off"
          },
          "doctmpl": {
            "type": "string",
            "description": "Шаблон договора. Создается и редактируется в резделе 'Шаблоны документов'",
            "example": ""
          },
          "suffix": {
            "type": "string",
            "description": "Добавляется к номеру договора при его создании. Номер договора формируется в виде КОД_ПЛАТЕЛЬШИКА + СУФФИКС. Т.е. для плательщика с кодом 1 при суффиксе '/договор', номер договора будет выглядеть как '1/договор'. Если типовой договор создается для каждой услуги, то вы можете указать в суффиксе код договора '__id__'. Например при суффиксе '/__id__/договор', номер договора будет выглядеть как '1/2/договор'",
            "example": ""
          },
          "numbertmpl": {
            "type": "string",
            "description": "Шаблон, по которому будет генерироваться нумерация договоров. Поддерживается указание даты по заданному формату и макросов. Подробнее в документации",
            "example": ""
          },
          "start_date": {
            "type": "string",
            "description": "Дата, с которой вступает в силу договор. Срок действия договора с клиентом выбирается по наибольшему значению: дата создания плательщика клиета в BILLmanager, дата основания компании, для которой создан образец договора, дата начала действия договора",
            "example": ""
          },
          "end_date": {
            "type": "string",
            "description": "После указанной даты договор перестанет генерироваться клиентам автоматически",
            "example": ""
          }
        }
      },
      "CompanyContractAppendixElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "doctmpl_name": {
            "type": "string"
          }
        }
      },
      "CompanyContractAppendixNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование образца приложения к договору",
            "example": "text"
          },
          "project": {
            "type": "string",
            "description": "При наличие услуг у выбранного провайдера у клиента появится приложение ",
            "example": ""
          },
          "itemtype": {
            "type": "string",
            "description": "При наличии услуг выбранного типа у клиента появится данное приложение",
            "example": ""
          },
          "nocheck": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Отключает необходимость наличия услуг указанного типа у клиента, для генерации приложения к договору",
            "example": "off"
          },
          "doctmpl": {
            "type": "string",
            "description": "Шаблон приложения к договору. Создается и редактируется в резделе 'Шаблоны документов'",
            "example": ""
          }
        }
      },
      "CompanyContractAppendix": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование образца приложения к договору",
            "example": "text"
          },
          "project": {
            "type": "string",
            "description": "При наличие услуг у выбранного провайдера у клиента появится приложение ",
            "example": ""
          },
          "itemtype": {
            "type": "string",
            "description": "При наличии услуг выбранного типа у клиента появится данное приложение",
            "example": ""
          },
          "nocheck": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Отключает необходимость наличия услуг указанного типа у клиента, для генерации приложения к договору",
            "example": "off"
          },
          "doctmpl": {
            "type": "string",
            "description": "Шаблон приложения к договору. Создается и редактируется в резделе 'Шаблоны документов'",
            "example": ""
          }
        }
      },
      "CompanyProjectElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "AccountElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "email": {
            "type": "string",
            "description": "Адрес электронной почты клиента"
          },
          "project": {
            "type": "string",
            "description": "Доступные клиенту провайдеры"
          },
          "balance": {
            "type": "string",
            "description": "Баланс лицевого счета клиента"
          },
          "account_status": {
            "type": "string",
            "description": "Текущий финансовый статус клиента"
          },
          "tz_registration_date": {
            "type": "string",
            "description": "Дата регистрации клиента"
          },
          "status": {
            "type": "string",
            "description": "Свойства клиента"
          },
          "has_discount": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Клиенту назначены персональные скидки\""
          },
          "aneed_phone": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Требуется проверка номера телефона\""
          },
          "aneed_activation": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Требуется подтверждение по email\""
          },
          "aneed_manual_vetting": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Требуется ручная проверка\""
          },
          "tax_warning": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Клиент включён в несколько групп с налоговыми ставками. Возможно, будут конфликты\""
          }
        }
      },
      "AccountNew": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Логин для входа. Оставьте поле пустым, если хотите использовать Email для входа",
            "example": ""
          },
          "email": {
            "type": "string",
            "description": "Email адрес клиента, также будет использоваться как логин для авторизации в BILLmanager",
            "example": "example@domain.com"
          },
          "verify_email": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Отправить письмо для подтверждения email адреса",
            "example": "off"
          },
          "project": {
            "type": "string",
            "description": "Провайдер, к которому будет привязан клиент",
            "example": ""
          },
          "client_lang": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "description": "Страна клиента",
            "example": ""
          },
          "state": {
            "type": "string",
            "description": "Выберите регион",
            "example": ""
          },
          "realname": {
            "type": "string",
            "description": "ФИО клиента или контактного лица организации, для которой создается учетная запись",
            "example": ""
          },
          "firstname": {
            "type": "string",
            "description": "Имя клиента или контактного лица организации, для которой создается учетная запись",
            "example": "text"
          },
          "lastname": {
            "type": "string",
            "description": "Фамилия клиента или контактного лица организации, для которой создается учетная запись",
            "example": "text"
          },
          "passwd": {
            "type": "string",
            "description": "Пароль доступа в личный кабинет",
            "example": ""
          },
          "confirm": {
            "type": "string",
            "example": ""
          },
          "employee": {
            "type": "string",
            "description": "Сотрудник, зарегистрировавший клиента",
            "example": ""
          },
          "notify": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Отправить клиенту уведомление о регистрации в BILLmanager",
            "example": "off"
          },
          "recovery": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Добавить в уведомление данные для сброса пароля",
            "example": "off"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Страна клиента",
            "example": ""
          },
          "state": {
            "type": "string",
            "description": "Выберите регион",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "Наименование клиента",
            "example": "text"
          },
          "valid_phone": {
            "type": "string",
            "description": "Проверенный номер телефона клиента",
            "example": ""
          },
          "try_phone": {
            "type": "string",
            "description": "Номер телефона клиента",
            "example": ""
          },
          "try_count_phone": {
            "type": "string",
            "description": "Количество попыток подтверждения номера телефона, которое использовал клиент",
            "example": ""
          },
          "label": {
            "type": "string",
            "description": "Служебная информация, доступная в фильтре",
            "example": ""
          },
          "products_page": {
            "type": "string",
            "description": "Страница",
            "example": ""
          },
          "registration_date": {
            "type": "string",
            "description": "Дата регистрации",
            "example": ""
          },
          "registration_ip": {
            "type": "string",
            "description": "IP-адрес, с которого произведена регистрация клиента",
            "example": ""
          },
          "attitude": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "0",
              "1",
              "2"
            ],
            "description": "Характеристика клиента; 0 - Обычный; 1 - Хороший; 2 - Конфликтный; 0 - Обычный; 1 - Хороший; 2 - Конфликтный",
            "example": ""
          },
          "abuse_rate": {
            "type": "string",
            "description": "Количество активных баллов нарушений",
            "example": ""
          },
          "employee": {
            "type": "string",
            "description": "Сотрудник, зарегистрировавший клиента",
            "example": ""
          }
        }
      },
      "AccountGroupElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "status": {
            "type": "string",
            "description": "Признак вхождения клиента в определенную группу"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          },
          "has_tax": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Для группы клиентов установлены правила налогообложения\""
          }
        }
      },
      "AccountOrdersElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование заказа"
          },
          "project": {
            "type": "string",
            "description": "Провайдер, под которым осуществлялся заказ"
          },
          "status": {
            "type": "string",
            "description": "Статус заказа"
          }
        }
      },
      "AccountOrdersProjectOrder": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "Наименование провайдера",
            "example": ""
          }
        }
      },
      "AccountOrdersProjectCart": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "Наименование провайдера",
            "example": ""
          }
        }
      },
      "AccountOrders": {
        "type": "object",
        "properties": {}
      },
      "AccountProjectElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "status": {
            "type": "string",
            "description": "Статус"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "SubaccountElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "project": {
            "type": "string",
            "description": "Провайдер, к которому относится лицевой счет"
          },
          "balance": {
            "type": "string",
            "description": "Баланс лицевого счета"
          },
          "creditlimit": {
            "type": "string",
            "description": "Лимит расходования средств клиентом сверх доступного баланса"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "SubaccountNew": {
        "type": "object",
        "properties": {
          "subaccount_project": {
            "type": "string",
            "description": "Провайдер создаваемого счета",
            "example": ""
          },
          "subaccount_currency": {
            "type": "string",
            "description": "Валюта создаваемого счета",
            "example": ""
          },
          "allowpostpaid": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает возможность клиенту оплачивать с данного счета услуги в долг и производить оплату услуг по факту их использования",
            "example": "off"
          },
          "creditlimit": {
            "type": "string",
            "description": "Кредитный лимит позволяет клиенту уходить в долг в пределах указанной суммы",
            "example": "1.00"
          },
          "count_from": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "С какого момента начать отсчет; 0 - неограниченно; 1 - от даты создания платежа, требующего оплаты; 2 - от последнего выставленного акта",
            "example": ""
          },
          "postponement_days": {
            "type": "string",
            "description": "Количество дней, в течение которых клиент должен погасить задолженность",
            "example": "1"
          },
          "block_after_days": {
            "type": "string",
            "description": "Количество дней, по истечению которых заказ и продление услуг будут недоступны",
            "example": "1"
          },
          "referer": {
            "type": "string",
            "description": "Укажите код клиента, который привел клиента по реферальной программе",
            "example": ""
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Счет клиента активен. У клиента может быть только один активный счет у провайдера",
            "example": "off"
          }
        }
      },
      "Subaccount": {
        "type": "object",
        "properties": {
          "allowpostpaid": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает возможность клиенту оплачивать с данного счета услуги в долг и производить оплату услуг по факту их использования",
            "example": "off"
          },
          "creditlimit": {
            "type": "string",
            "description": "Кредитный лимит позволяет клиенту уходить в долг в пределах указанной суммы",
            "example": "1.00"
          },
          "count_from": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "С какого момента начать отсчет; 0 - неограниченно; 1 - от даты создания платежа, требующего оплаты; 2 - от последнего выставленного акта",
            "example": ""
          },
          "postponement_days": {
            "type": "string",
            "description": "Количество дней, в течение которых клиент должен погасить задолженность",
            "example": "1"
          },
          "block_after_days": {
            "type": "string",
            "description": "Количество дней, по истечению которых заказ и продление услуг будут недоступны",
            "example": "1"
          },
          "referer": {
            "type": "string",
            "description": "Укажите код клиента, который привел клиента по реферальной программе",
            "example": ""
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Счет клиента активен. У клиента может быть только один активный счет у провайдера",
            "example": "off"
          },
          "incident_limit": {
            "type": "string",
            "description": "Лимит использования обращений в поддержку клиентом за все время",
            "example": "1"
          }
        }
      },
      "SubaccountRefund": {
        "type": "object",
        "properties": {
          "paymethod": {
            "type": "string",
            "description": "Метод оплаты, посредством которого будет произведен возврат средств",
            "example": ""
          },
          "refundrule": {
            "type": "string",
            "description": "Укажите правила возврата средств со счета клиента",
            "example": ""
          },
          "payment": {
            "type": "string",
            "description": "Выберите платеж, с которого будет произведен возврат средств",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Сумма, которую необходимо вернуть",
            "example": "1.00"
          }
        }
      },
      "AccountDiscountElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "actiontype": {
            "type": "string"
          },
          "applicable_for": {
            "type": "string"
          },
          "project": {
            "type": "string",
            "description": "Провайдер, на услуги которого распространяется скидка"
          },
          "discount_type": {
            "type": "string",
            "description": "Тип предоставляемой скидки"
          },
          "period": {
            "type": "string",
            "description": "Срок действия скидки"
          }
        }
      },
      "AccountDiscountAddNew": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "Провайдер, на котором будет предоставлена скидка",
            "example": ""
          },
          "fromdate": {
            "type": "string",
            "description": "Первый день действия скидки",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Последний день действия скидки",
            "example": "text"
          },
          "type": {
            "type": "string",
            "example": ""
          },
          "percentage": {
            "type": "string",
            "example": "0.0"
          },
          "priority": {
            "type": "string",
            "description": "По умолчанию скидки заданные клиенту персонально имеют больший приоритет чем скидки указанные в промо-акциях. Если задать скидке отрицательный приоритет, то она будет применена, только при отсутствии подходящих скидок из промо-акций",
            "example": "1"
          },
          "actiontype": {
            "type": "string",
            "example": ""
          },
          "applicable_for": {
            "type": "string",
            "example": ""
          },
          "period": {
            "type": "string",
            "example": ""
          }
        }
      },
      "AccountDiscount": {
        "type": "object",
        "properties": {
          "fromdate": {
            "type": "string",
            "description": "Первый день действия скидки",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Последний день действия скидки",
            "example": "text"
          },
          "type": {
            "type": "string",
            "example": ""
          },
          "percentage": {
            "type": "string",
            "example": "0.0"
          },
          "priority": {
            "type": "string",
            "description": "По умолчанию скидки заданные клиенту персонально имеют больший приоритет чем скидки указанные в промо-акциях. Если задать скидке отрицательный приоритет, то она будет применена, только при отсутствии подходящих скидок из промо-акций",
            "example": "1"
          },
          "actiontype": {
            "type": "string",
            "example": ""
          },
          "applicable_for": {
            "type": "string",
            "example": ""
          },
          "period": {
            "type": "string",
            "example": ""
          }
        }
      },
      "AccountCurrencyrateElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "currency_base": {
            "type": "string",
            "description": "Базовая валюта, в которую проводится конвертация"
          },
          "rate": {
            "type": "string",
            "description": "Значение курса валюты на указанную дату за указанное количество единиц"
          },
          "ratedate": {
            "type": "string",
            "description": "Дата курса"
          }
        }
      },
      "AccountCurrencyrateNew": {
        "type": "object",
        "properties": {
          "currency_base": {
            "type": "string",
            "description": "Базовая валюта, в которую проводится конвертация",
            "example": ""
          },
          "currency_relate": {
            "type": "string",
            "description": "Валюта, которая конвертируется в базовую",
            "example": ""
          },
          "rate": {
            "type": "string",
            "description": "Значение курса валюты на указанную дату за указанное количество единиц",
            "example": "0.0"
          },
          "amount": {
            "type": "string",
            "description": "Количество единиц базовой валюты, за которое указан курс конвертации",
            "example": "1"
          },
          "ratedate": {
            "type": "string",
            "description": "Дата",
            "example": "text"
          }
        }
      },
      "AccountCurrencyrate": {
        "type": "object",
        "properties": {
          "currency_base": {
            "type": "string",
            "description": "Базовая валюта, в которую проводится конвертация",
            "example": ""
          },
          "currency_relate": {
            "type": "string",
            "description": "Валюта, которая конвертируется в базовую",
            "example": ""
          },
          "rate": {
            "type": "string",
            "description": "Значение курса валюты на указанную дату за указанное количество единиц",
            "example": "0.0"
          },
          "amount": {
            "type": "string",
            "description": "Количество единиц базовой валюты, за которое указан курс конвертации",
            "example": "1"
          },
          "ratedate": {
            "type": "string",
            "description": "Дата",
            "example": "text"
          }
        }
      },
      "SubaccountExpenseElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "locale_name": {
            "type": "string",
            "description": "Наименование расхода"
          },
          "realdate": {
            "type": "string",
            "description": "Дата списания"
          },
          "cdate": {
            "type": "string",
            "description": "Дата оказания услуги"
          },
          "amount": {
            "type": "string",
            "description": "Сумма списания"
          },
          "notpayd": {
            "type": "string",
            "description": "Не оплаченная часть расхода"
          },
          "discountamount": {
            "type": "string",
            "description": "Сумма предоставленной при списании средств скидки"
          },
          "payments": {
            "type": "string",
            "description": "Номера платежей, которыми оплачен расход"
          },
          "discount": {
            "type": "string",
            "description": "Код предоставленной скидки"
          },
          "taxamount": {
            "type": "string",
            "description": "Сумма налога"
          }
        }
      },
      "SubaccountExpenseNew": {
        "type": "object",
        "properties": {
          "subaccount": {
            "type": "string",
            "description": "Выберите провайдера",
            "example": ""
          },
          "item": {
            "type": "string",
            "description": "Выберите услугу, за которую будет создан расход",
            "example": ""
          },
          "operation": {
            "type": "string",
            "description": "Операция, на основании которой будет расход",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Сумма расхода",
            "example": "1.00"
          },
          "taxrate": {
            "type": "string",
            "description": "Процент налогов. Обратите внимание, что сумма налога включена в сумму расхода. Поэтому сумма налога будет высчитана по формуле СУММА - (СУММА / ((100 + СТАВКА) / 100))",
            "example": "1.00"
          },
          "cdate": {
            "type": "string",
            "description": "Дата, с которой начинается оказание услуги",
            "example": "text"
          },
          "name": {
            "type": "string",
            "description": "Вы можете указать собсвенное наименование. Если вы не укажете наименование, то наименование будет сгенерировано автоматически на основе операции.",
            "example": ""
          },
          "postpaid": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Если опция установлена, то при нехватке средств на счете расход будет создан в долг",
            "example": "off"
          }
        }
      },
      "SubaccountExpense": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Сумма расхода",
            "example": "1.00"
          },
          "taxrate": {
            "type": "string",
            "description": "Процент налогов. Обратите внимание, что сумма налога включена в сумму расхода. Поэтому сумма налога будет высчитана по формуле СУММА - (СУММА / ((100 + СТАВКА) / 100))",
            "example": "1.00"
          },
          "realdate": {
            "type": "string",
            "description": "Фактическая дата списания",
            "example": "text"
          },
          "cdate": {
            "type": "string",
            "description": "Дата, с которой начинается оказание услуги",
            "example": "text"
          },
          "name": {
            "type": "string",
            "description": "Вы можете указать собсвенное наименование. Если вы не укажете наименование, то наименование будет сгенерировано автоматически на основе операции.",
            "example": ""
          }
        }
      },
      "ExpensePaymentElem": {
        "type": "object",
        "properties": {
          "payment": {
            "type": "string",
            "description": "Код платежа, с которого списана часть суммы расхода"
          },
          "payment_number": {
            "type": "string",
            "description": "Номер платежа, с которого списана часть суммы расхода"
          },
          "amount_iso": {
            "type": "string",
            "description": "Часть суммы расхода привязанная к платежу"
          },
          "invoice": {
            "type": "string",
            "description": "Код акта выполненных работ, в который включена часть расхода"
          },
          "invoice_number": {
            "type": "string",
            "description": "Номере акта выполненных работ, в который включена часть расхода"
          }
        }
      },
      "ExpensePaymentNew": {
        "type": "object",
        "properties": {
          "payment": {
            "type": "string",
            "enum": [
              "info_msg"
            ],
            "description": "Платеж, с которого будет списана часть суммы расхода; info_msg - С платежа максимально может быть списано __amount__, неоплаченная часть расхода составляет __expense_amount__",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Сумма, которая будет списана с платежа",
            "example": "1.00"
          }
        }
      },
      "ExpensePayment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Сумма, которая будет списана с платежа",
            "example": "1.00"
          }
        }
      },
      "PaymentExpenseElem": {
        "type": "object",
        "properties": {
          "expense": {
            "type": "string",
            "description": "Код расхода, на который потрачена часть суммы платежа"
          },
          "expense_locale_name": {
            "type": "string",
            "description": "Наименование расхода, на который потрачена часть суммы платежа"
          },
          "disable_change_expense": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "amount_iso": {
            "type": "string",
            "description": "Часть суммы расхода привязанная к платежу"
          },
          "invoice": {
            "type": "string",
            "description": "Код акта выполненных работ, в который включена часть расхода"
          },
          "invoice_number": {
            "type": "string",
            "description": "Номере акта выполненных работ, в который включена часть расхода"
          }
        }
      },
      "PaymentExpenseNew": {
        "type": "object",
        "properties": {
          "expense": {
            "type": "string",
            "enum": [
              "info_msg"
            ],
            "description": "; info_msg - Неоплаченная часть расхода составляет __expense_amount__, с платежа максимально может быть списано __amount__, ",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Сумма, которая будет списана с платежа",
            "example": "1.00"
          }
        }
      },
      "PaymentExpense": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Сумма, которая будет списана с платежа",
            "example": "1.00"
          }
        }
      },
      "ExpenseElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "locale_name": {
            "type": "string",
            "description": "Наименование расхода"
          },
          "account": {
            "type": "string",
            "description": "Клиент, со счета которого произведено списание"
          },
          "realdate": {
            "type": "string",
            "description": "Дата списания"
          },
          "cdate": {
            "type": "string",
            "description": "Дата оказания услуги"
          },
          "amount": {
            "type": "string",
            "description": "Сумма списания"
          },
          "notpayd": {
            "type": "string",
            "description": "Не оплаченная часть расхода"
          },
          "discountamount": {
            "type": "string",
            "description": "Сумма предоставленной при списании средств скидки"
          },
          "payments": {
            "type": "string",
            "description": "Номера платежей, которыми оплачен расход"
          },
          "discount": {
            "type": "string",
            "description": "Код предоставленной скидки"
          },
          "taxamount": {
            "type": "string",
            "description": "Сумма налога"
          }
        }
      },
      "Expense": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Сумма расхода",
            "example": "1.00"
          },
          "taxrate": {
            "type": "string",
            "description": "Процент налогов. Обратите внимание, что сумма налога включена в сумму расхода. Поэтому сумма налога будет высчитана по формуле СУММА - (СУММА / ((100 + СТАВКА) / 100))",
            "example": "1.00"
          },
          "realdate": {
            "type": "string",
            "description": "Фактическая дата списания",
            "example": "text"
          },
          "cdate": {
            "type": "string",
            "description": "Дата, с которой начинается оказание услуги",
            "example": "text"
          },
          "name": {
            "type": "string",
            "description": "Вы можете указать собсвенное наименование. Если вы не укажете наименование, то наименование будет сгенерировано автоматически на основе операции.",
            "example": ""
          }
        }
      },
      "ProfileElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "wrongaddress": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Был возврат корреспонденции\""
          },
          "need_phone": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Номер телефона не проверен\""
          },
          "need_activation": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Требуется подтверждение email адреса\""
          },
          "need_manual_vetting": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Требуется ручное подтверждение\""
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит плательщик"
          },
          "profiletype": {
            "type": "string",
            "description": "Юридический статус плательщика"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "ProfileAddNew": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Выберите страну",
            "example": ""
          },
          "profiletype": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "1",
              "2",
              "3",
              "1",
              "2",
              "3",
              "1",
              "2",
              "3"
            ],
            "description": "Юридический статус плательщика; 1 - Физическое лицо; 2 - Юридическое лицо; 3 - Индивидуальный предприниматель; 1 - Физическое лицо; 2 - Юридическое лицо; 3 - Индивидуальный предприниматель; 1 - Физическое лицо; 2 - Юридическое лицо; 3 - Индивидуальный предприниматель; 1 - Физическое лицо; 2 - Юридическое лицо; 3 - Индивидуальный предприниматель",
            "example": ""
          },
          "hidden_field": {
            "type": "string",
            "example": ""
          },
          "request": {
            "type": "string",
            "example": ""
          },
          "name": {
            "type": "string",
            "example": "text"
          },
          "person": {
            "type": "string",
            "description": "Укажите контактное лицо",
            "example": "text"
          },
          "phone": {
            "type": "string",
            "example": ""
          },
          "fax": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": "example@domain.com"
          },
          "maildocs": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Способ получения оригиналов финансовых документов; 0 - В личном кабинете; 1 - По почте; 2 - По электронной почте; 3 - Через систему электронного документооборота; 0 - В личном кабинете; 1 - По почте; 2 - По электронной почте; 3 - Через систему электронного документооборота",
            "example": ""
          },
          "docflow_box": {
            "type": "string",
            "description": "Ящик для входящих документов (__company__)",
            "example": ""
          },
          "docflow_department": {
            "type": "string",
            "description": "Подразделение для входящих документов (__company__)",
            "example": ""
          },
          "document_type": {
            "type": "string",
            "description": "Тип отправляемых по системе электронного документооборота документов",
            "example": ""
          },
          "id1c": {
            "type": "string",
            "description": "Код для интеграции с бухгалтерской системой",
            "example": ""
          },
          "invoicetype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Выберите способ, которым будут генерироваться акты выполненных работ; 0 - По расходам после оплаты; 1 - Автоматически по авансовым платежам; 2 - По не оплаченным расходам; 3 - По не оплаченным и оплаченным расходам; 0 - По расходам после оплаты; 1 - Автоматически по авансовым платежам; 2 - По не оплаченным расходам; 3 - По не оплаченным и оплаченным расходам",
            "example": ""
          },
          "postcompany": {
            "type": "string",
            "description": "Компания, от имени которой будет выставлен акт",
            "example": ""
          },
          "postcurrency": {
            "type": "string",
            "description": "Валюта, в которой будет выставлен акт. При наличии неоплченных расходов, закрытых актом, авансовый платеж может быть выписан только на компанию, от имени которой выставлен акт, и только в валюту акта",
            "example": ""
          },
          "invoicedesc": {
            "type": "string",
            "description": "При автоматической генерации акта выполненных работ по авансовым платежам это значение будет использовано как описание услуг.",
            "example": ""
          },
          "payment_description": {
            "type": "string",
            "example": ""
          },
          "country_legal": {
            "type": "string",
            "example": ""
          },
          "state_legal": {
            "type": "string",
            "example": ""
          },
          "postcode_legal": {
            "type": "string",
            "example": ""
          },
          "city_legal": {
            "type": "string",
            "example": ""
          },
          "legaleqphysical": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "off"
          },
          "country_physical": {
            "type": "string",
            "example": ""
          },
          "state_physical": {
            "type": "string",
            "example": ""
          },
          "postcode_physical": {
            "type": "string",
            "example": ""
          },
          "city_physical": {
            "type": "string",
            "example": ""
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "hidden_field": {
            "type": "string",
            "example": ""
          },
          "request": {
            "type": "string",
            "example": ""
          },
          "profiletype": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "1",
              "2",
              "3"
            ],
            "description": "Юридический статус плательщика; 1 - Физическое лицо; 2 - Юридическое лицо; 3 - Индивидуальный предприниматель; 1 - Физическое лицо; 2 - Юридическое лицо; 3 - Индивидуальный предприниматель",
            "example": ""
          },
          "name": {
            "type": "string",
            "example": "text"
          },
          "person": {
            "type": "string",
            "description": "Укажите контактное лицо",
            "example": "text"
          },
          "phone": {
            "type": "string",
            "example": ""
          },
          "fax": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": "example@domain.com"
          },
          "maildocs": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Способ получения оригиналов финансовых документов; 0 - В личном кабинете; 1 - По почте; 2 - По электронной почте; 3 - Через систему электронного документооборота; 0 - В личном кабинете; 1 - По почте; 2 - По электронной почте; 3 - Через систему электронного документооборота",
            "example": ""
          },
          "docflow_box": {
            "type": "string",
            "description": "Ящик для входящих документов (__company__)",
            "example": ""
          },
          "docflow_department": {
            "type": "string",
            "description": "Подразделение для входящих документов (__company__)",
            "example": ""
          },
          "document_type": {
            "type": "string",
            "description": "Тип отправляемых по системе электронного документооборота документов",
            "example": ""
          },
          "id1c": {
            "type": "string",
            "description": "Код для интеграции с бухгалтерской системой",
            "example": ""
          },
          "invoicetype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Выберите способ, которым будут генерироваться акты выполненных работ; 0 - По расходам после оплаты; 1 - Автоматически по авансовым платежам; 2 - По не оплаченным расходам; 3 - По не оплаченным и оплаченным расходам",
            "example": ""
          },
          "postcompany": {
            "type": "string",
            "description": "Компания, от имени которой будет выставлен акт",
            "example": ""
          },
          "postcurrency": {
            "type": "string",
            "description": "Валюта, в которой будет выставлен акт. При наличии неоплченных расходов, закрытых актом, авансовый платеж может быть выписан только на компанию, от имени которой выставлен акт, и только в валюту акта",
            "example": ""
          },
          "invoicedesc": {
            "type": "string",
            "description": "При автоматической генерации акта выполненных работ по авансовым платежам это значение будет использовано как описание услуг.",
            "example": ""
          },
          "payment_description": {
            "type": "string",
            "example": ""
          },
          "country_legal": {
            "type": "string",
            "example": ""
          },
          "state_legal": {
            "type": "string",
            "example": ""
          },
          "postcode_legal": {
            "type": "string",
            "example": ""
          },
          "city_legal": {
            "type": "string",
            "example": ""
          },
          "legaleqphysical": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "off"
          },
          "country_physical": {
            "type": "string",
            "example": ""
          },
          "state_physical": {
            "type": "string",
            "example": ""
          },
          "postcode_physical": {
            "type": "string",
            "example": ""
          },
          "city_physical": {
            "type": "string",
            "example": ""
          }
        }
      },
      "ProfileCompanyElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "status": {
            "type": "string",
            "description": "Состояние подключения плательщика к компании"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "ProfileReconciliation": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "description": "Выберите компанию, для которой необходимо распечатать акт сверки",
            "example": ""
          },
          "currency": {
            "type": "string",
            "description": "Выберите валюту акта сверки",
            "example": ""
          },
          "fromdate": {
            "type": "string",
            "description": "Укажите начальную дату расчетного периода",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Укажите конечную дату расчетного периода",
            "example": "text"
          },
          "prepair_invoice": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "В печатную форму будет добавлена информация об актах выполненных работ со статусом \"Предварительный\"",
            "example": "off"
          }
        }
      },
      "ProfileHistoryElem": {
        "type": "object",
        "properties": {
          "changedate": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "AccountOrdersItemtype": {
        "type": "object",
        "properties": {}
      },
      "ContractElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "number": {
            "type": "string",
            "description": "Номер договора"
          },
          "signdate": {
            "type": "string",
            "description": "Дата заключения договора"
          },
          "senddate": {
            "type": "string",
            "description": "Дата отправки договора"
          },
          "end_date": {
            "type": "string",
            "description": "Срок действия договора"
          },
          "client_name": {
            "type": "string",
            "description": "Наименование плательщика клиента"
          },
          "company_name": {
            "type": "string",
            "description": "Наименование компании провайдера"
          },
          "contract_name": {
            "type": "string",
            "description": "Вид договора"
          },
          "contracttype": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Состояние договора"
          },
          "non_standard": {
            "type": "string"
          },
          "for_each_item": {
            "type": "string"
          }
        }
      },
      "ContractNew": {
        "type": "object",
        "properties": {
          "companycontract": {
            "type": "string",
            "description": "Выберите образец договора, создается в меню \"Компании -> Договоры\"",
            "example": ""
          },
          "profile": {
            "type": "string",
            "description": "Введите Id плательщика, для которого необходим договор",
            "example": "1"
          },
          "show_non_standard_params": {
            "type": "string",
            "example": ""
          },
          "end_date": {
            "type": "string",
            "description": "Срок действия договора",
            "example": ""
          },
          "file": {
            "type": "string",
            "description": "Файл нетипового договора",
            "example": ""
          }
        }
      },
      "Contract": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер договора",
            "example": ""
          },
          "signdate": {
            "type": "string",
            "description": "Дата заключения договора",
            "example": ""
          },
          "senddate": {
            "type": "string",
            "description": "Дата отправки договора клиенту",
            "example": ""
          },
          "companycontract": {
            "type": "string",
            "description": "Выберите образец договора, создается в меню \"Компании -> Договоры\"",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "0",
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "description": "Выбор состояния договора; 1 - Образец; 2 - Запрошен; 3 - Отправлен; 4 - Подписан; 5 - Аннулирован; 0 - Неизвестный; 1 - Образец; 2 - Запрошен; 3 - Отправлен; 4 - Подписан; 5 - Аннулирован; 0 - Неизвестный; 1 - Образец; 2 - Запрошен; 3 - Отправлен; 4 - Подписан; 5 - Аннулирован",
            "example": ""
          },
          "show_non_standard_params": {
            "type": "string",
            "example": ""
          },
          "end_date": {
            "type": "string",
            "description": "Срок действия договора",
            "example": ""
          },
          "file": {
            "type": "string",
            "description": "Файл нетипового договора",
            "example": ""
          }
        }
      },
      "ContractItemElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Услуга"
          },
          "status": {
            "type": "string",
            "description": "Статус"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "AccountgroupElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "props": {
            "type": "string",
            "description": "Параметры группы клиентов"
          },
          "ignoreitemmax": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Ограничение на количество услуг не проверяется\""
          },
          "allowdeleteitem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Разрешено удаление услуг\""
          },
          "allowsuspenditem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Разрешено включение/выключение услуг\""
          },
          "ignoreabuserate": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Штрафные санкции по нарушениям не применяются\""
          },
          "has_tax": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Для группы клиентов установлены правила налогообложения\""
          }
        }
      },
      "AccountgroupNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование группы",
            "example": "text"
          },
          "allowsuspenditem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции члены данной группы могут приостанавливать и включать свои услуги",
            "example": "off"
          },
          "allowdeleteitem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции члены данной группы могут удалять свои услуги",
            "example": "off"
          },
          "ignoreitemmax": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции члены данной группы могут создавать любое количество услуг, независимо от настроек тарифа",
            "example": "off"
          },
          "ignoreabuserate": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции к членам данной группы не будут применяться штрафные санкции за нарушения",
            "example": "off"
          }
        }
      },
      "Accountgroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование группы",
            "example": "text"
          },
          "allowsuspenditem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции члены данной группы могут приостанавливать и включать свои услуги",
            "example": "off"
          },
          "allowdeleteitem": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции члены данной группы могут удалять свои услуги",
            "example": "off"
          },
          "ignoreitemmax": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции члены данной группы могут создавать любое количество услуг, независимо от настроек тарифа",
            "example": "off"
          },
          "ignoreabuserate": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции к членам данной группы не будут применяться штрафные санкции за нарушения",
            "example": "off"
          }
        }
      },
      "AccountgroupAccountElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Клиент"
          },
          "status": {
            "type": "string",
            "description": "Статус вхождения клиента в группу"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "AccountgroupTaxruleElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "project": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Страна плательщика"
          },
          "taxrate": {
            "type": "string",
            "description": "Ставка налога"
          },
          "itemtype": {
            "type": "string",
            "description": "Тип продукта"
          },
          "startdatetime": {
            "type": "string",
            "description": "Дата начала действия налоговой ставки"
          },
          "enddatetime": {
            "type": "string",
            "description": "Дата окончания действия налоговой ставки"
          }
        }
      },
      "AccountgroupTaxruleNew": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "example": ""
          },
          "company": {
            "type": "string",
            "enum": [
              "null",
              "null"
            ],
            "description": "; null - -- Все --; null - -- Все --",
            "example": ""
          },
          "country": {
            "type": "string",
            "description": "Выберите страну, для плательщиков которой будет действовать правило налогообложения ",
            "example": ""
          },
          "state": {
            "type": "string",
            "enum": [
              "null",
              "null"
            ],
            "description": "Если используется двухуровневая система налогообложения, вы можете задать федеральный налог (все) и налог региона. Эти налоги будут суммироваться.; null - -- Все --; null - -- Все --",
            "example": ""
          },
          "taxrate": {
            "type": "string",
            "description": "Укажите налоговую ставку для выбранной страны",
            "example": "1.00"
          },
          "timezone": {
            "type": "string",
            "description": "Выберите часовой пояс, который будет использоваться для дат начала и окончания действия налоговой ставки",
            "example": ""
          },
          "startdatetime": {
            "type": "string",
            "description": "Дата начала действия налоговой ставки",
            "example": ""
          },
          "enddatetime": {
            "type": "string",
            "description": "Дата окончания действия налоговой ставки",
            "example": ""
          },
          "specialitemtype": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Налогообложению подвергаются не все типы продуктов",
            "example": "off"
          },
          "itemtype": {
            "type": "string",
            "description": "Укажите какие типы продуктов облагаются налогами",
            "example": ""
          }
        }
      },
      "AccountgroupTaxrule": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "example": ""
          },
          "company": {
            "type": "string",
            "enum": [
              "null",
              "null"
            ],
            "description": "; null - -- Все --; null - -- Все --",
            "example": ""
          },
          "country": {
            "type": "string",
            "description": "Выберите страну, для плательщиков которой будет действовать правило налогообложения ",
            "example": ""
          },
          "state": {
            "type": "string",
            "enum": [
              "null",
              "null"
            ],
            "description": "Если используется двухуровневая система налогообложения, вы можете задать федеральный налог (все) и налог региона. Эти налоги будут суммироваться.; null - -- Все --; null - -- Все --",
            "example": ""
          },
          "taxrate": {
            "type": "string",
            "description": "Укажите налоговую ставку для выбранной страны",
            "example": "1.00"
          },
          "timezone": {
            "type": "string",
            "description": "Выберите часовой пояс, который будет использоваться для дат начала и окончания действия налоговой ставки",
            "example": ""
          },
          "startdatetime": {
            "type": "string",
            "description": "Дата начала действия налоговой ставки",
            "example": ""
          },
          "enddatetime": {
            "type": "string",
            "description": "Дата окончания действия налоговой ставки",
            "example": ""
          },
          "specialitemtype": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Налогообложению подвергаются не все типы продуктов",
            "example": "off"
          },
          "itemtype": {
            "type": "string",
            "description": "Укажите какие типы продуктов облагаются налогами",
            "example": ""
          }
        }
      },
      "AccountgroupTaxruleSettings": {
        "type": "object",
        "properties": {
          "taxexclusive": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включите параметр, если хотите, чтобы цены на товары/услуги увеличивались на величину налога. При этом нельзя будет использовать налоговые ставки с ограничением по компании в которую платит плательщик",
            "example": "off"
          },
          "taxcustompay": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Отображать налог при авансовом пополнение счета. В некоторых странах это необходимо, в некоторых нет. Сверьтесь с системой налогообложения в вашей стране.",
            "example": "off"
          }
        }
      },
      "AccountgroupHistoryElem": {
        "type": "object",
        "properties": {
          "changedate": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "AccountgroupConditionElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "condition": {
            "type": "string",
            "description": "Описание условия включения в группу клиентов"
          },
          "conditiongroup": {
            "type": "string",
            "description": "Группа условий включения в группу клиентов. Группа условий срабатывает, если срабатывает хотя бы одно из услвоий в группе, клиент добавляется в группу, если срабатывают все группу условий и условия без группы"
          }
        }
      },
      "PaymentElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "number": {
            "type": "string",
            "description": "Номер платежа в соответствии с правилами нумерации компании или метода оплаты"
          },
          "create_date": {
            "type": "string",
            "description": "Дата создания платежа"
          },
          "pay_date": {
            "type": "string",
            "description": "Дата зачисления платежа"
          },
          "sender_name": {
            "type": "string",
            "description": "Плательщик клиента, от имени которого совершена оплата"
          },
          "recipient_name": {
            "type": "string",
            "description": "Компания-получатель платежа. Отсутствует, если метод оплаты не подключен ни к одной компании"
          },
          "project": {
            "type": "string",
            "description": "Провайдер, к которому относится платеж"
          },
          "account_name": {
            "type": "string",
            "description": "Клиент совершивший оплату"
          },
          "paymethod_name": {
            "type": "string",
            "description": "Метод оплаты, через который совершался платеж"
          },
          "subaccountamount_iso": {
            "type": "string",
            "description": "Сумма, зачисляемая на счет клиента"
          },
          "autogenerated": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Сумма платежа рассчитана автоматически\""
          },
          "paymethodamount_iso": {
            "type": "string",
            "description": "Сумма платежа в валюте метода оплаты"
          },
          "billorder": {
            "type": "string",
            "description": "Заказ, к которому привязан платеж"
          },
          "status": {
            "type": "string",
            "description": "Текущий статус платежа"
          },
          "store_payment": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"После успешного зачисления платежа способ оплаты будет сохранен\""
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер счета для оплаты",
            "example": "text"
          },
          "createdate": {
            "type": "string",
            "description": "Дата и время создания счета на оплату",
            "example": "text"
          },
          "paydate": {
            "type": "string",
            "description": "Дата оплаты счета или зачисления платежа",
            "example": ""
          },
          "documentnumber": {
            "type": "string",
            "description": "№ платежного документа",
            "example": ""
          },
          "documentdate": {
            "type": "string",
            "description": "Дата платежного документа",
            "example": ""
          },
          "description": {
            "type": "string",
            "description": "Назначение платежа",
            "example": ""
          },
          "sender": {
            "type": "string",
            "description": "Плательщик клиента, от имени которого совершена оплата",
            "example": ""
          },
          "recipient": {
            "type": "string",
            "enum": [
              "tax_info"
            ],
            "description": "Компания-получатель платежа. Список формируется из компаний, которые подключены к методу оплаты и доступны выбранному плательщику; tax_info - При изменении компании-получателя будет выставлен новый налог в соответствии с налоговой ставкой новой компании-получателя",
            "example": ""
          },
          "show_recipient_tax_info": {
            "type": "string",
            "example": ""
          },
          "subaccountamount": {
            "type": "string",
            "description": "Сумма платежа, зачисляемая на счет клиента",
            "example": "1.00"
          },
          "usedamount": {
            "type": "string",
            "description": "Сумма израсходованных средств",
            "example": "1.00"
          },
          "paymethodamount": {
            "type": "string",
            "description": "Сумма в валюте платежной системы",
            "example": "1.00"
          },
          "commissionamount": {
            "type": "string",
            "description": "Комиссия, добавляемая к сумме платежа при оплате",
            "example": "1.00"
          },
          "taxamount_readonly": {
            "type": "string",
            "description": "Сумма налога",
            "example": "1.00"
          },
          "show_taxamount": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "1",
              "1_postpaid",
              "1_part_postpaid",
              "1_fully_paid",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "100",
              "1",
              "1_postpaid",
              "1_part_postpaid",
              "1_fully_paid",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "100"
            ],
            "description": "Статус платежа; 1 - Новый; 1_postpaid - К оплате; 1_part_postpaid - Частично оплачен; 1_fully_paid - Полностью погашен; 2 - Оплачивается; 3 - Обещанный платеж; 4 - Зачислен; 5 - Ожидает возврата; 6 - Возвращен; 7 - Мошеннический; 8 - Инициирован; 9 - Отменен; 100 - Удаляется; 1 - Новый; 1_postpaid - К оплате; 1_part_postpaid - Частично оплачен; 1_fully_paid - Полностью погашен; 2 - Оплачивается; 3 - Обещанный платеж; 4 - Зачислен; 5 - Ожидает возврата; 6 - Возвращен; 7 - Мошеннический; 8 - Инициирован; 9 - Отменен; 100 - Удаляется",
            "example": ""
          },
          "paymethod": {
            "type": "string",
            "description": "Метод оплаты",
            "example": ""
          },
          "restrictrefund": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запретить возврат средств с данного платежа",
            "example": "off"
          }
        }
      },
      "PaymentRefund": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Сумма в валюте метода оплаты, которая будет возвращена клиенту",
            "example": "1.00"
          },
          "description": {
            "type": "string",
            "description": "Причина возврата для передачи в платежную систему",
            "example": "text"
          }
        }
      },
      "PaymentOrderinfoElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "info": {
            "type": "string",
            "description": "Формулировка позиции в счете"
          },
          "cost": {
            "type": "string",
            "description": "Стоимость позиции в счете"
          }
        }
      },
      "PaymentOrderinfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Описание позиции счета",
            "example": ""
          }
        }
      },
      "PaymentHistoryElem": {
        "type": "object",
        "properties": {
          "changedate": {
            "type": "string",
            "description": "Дата изменения"
          },
          "desc": {
            "type": "string",
            "description": "Описание изменений"
          },
          "user": {
            "type": "string",
            "description": "Пользователь внесший изменения"
          },
          "ip": {
            "type": "string",
            "description": "IP-адрес пользователя или внутрення утилита сделавшая изменения"
          },
          "action": {
            "type": "string",
            "description": "Внутренние имя функции в результате выполнения которой были внесены изменения"
          }
        }
      },
      "PricelistElem": {
        "type": "object",
        "properties": {
          "processingmodules": {
            "type": "string",
            "description": "Обработчики услуг, подключенные к тарифному плану"
          },
          "pricelist_cost": {
            "type": "string",
            "description": "Базовая стоимость периодов заказа тарифного плана"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет тарифа при сортировке (в прямом порядке)"
          },
          "status": {
            "type": "string",
            "description": "Дополнительная информация по тарифному плану "
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          },
          "orderreference": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Тариф доступен для заказа при наличии услуг тарифов, указанных в разделе \"Доступ\"\""
          },
          "billdaily": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Ежедневное списание\""
          },
          "sync_in_progress": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Синхронизация с панелью управления\""
          },
          "quickorder": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Тариф доступен для быстрого заказа\""
          },
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "itemtype_name": {
            "type": "string",
            "description": "Тип услуги, к которому относится тарифный план"
          },
          "project": {
            "type": "string",
            "description": "Провайдер тарифного плана"
          }
        }
      },
      "PricelistArchivedElem": {
        "type": "object",
        "properties": {
          "processingmodules": {
            "type": "string",
            "description": "Обработчики услуг, подключенные к тарифному плану"
          },
          "pricelist_cost": {
            "type": "string",
            "description": "Базовая стоимость периодов заказа тарифного плана"
          },
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "itemtype_name": {
            "type": "string",
            "description": "Тип услуги, к которому относится тарифный план"
          },
          "project": {
            "type": "string",
            "description": "Провайдер тарифного плана"
          }
        }
      },
      "PricelistExtractArchive": {
        "type": "object",
        "properties": {
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Активировать тарифы после извлечения",
            "example": "off"
          }
        }
      },
      "PricelistAddNew": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "Провайдер тарифного плана",
            "example": ""
          },
          "activate": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Тариф будет активирован сразу после создания. Если требуются дополнительные настройки тарифного плана или его дополнений, рекомендуется выключение опции и ручная активация тарифного плана по окончанию его настройки",
            "example": "off"
          },
          "name": {
            "type": "string",
            "description": "Наименование тарифного плана",
            "example": "text"
          },
          "processingmodule": {
            "type": "string",
            "description": "Выберите какие обработчики услуг будут обрабатывать услуги создаваемого тарифного плана. Тарифы не подключенные к обработчикам услуг не будут доступны для заказа.",
            "example": ""
          },
          "modulepreset": {
            "type": "string",
            "description": "Конфигурация",
            "example": ""
          },
          "intname": {
            "type": "string",
            "description": "Внутренее наименование служит для получения значений по умолчанию параметров создаваемых услуг из обработчика либо для идентификации базовой конфигурации при ручной обработке",
            "example": "text"
          },
          "datacenter": {
            "type": "string",
            "description": "Дата-центры, для которых будет доступен тариф",
            "example": ""
          },
          "change_datacenter": {
            "type": "string",
            "example": ""
          },
          "billdaily": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенном флаге оплата за услугу будет сниматься ежедневно. Сумма будет рассчитана пропорционально стоимости одного дня в месяце расчета. Политики смены тарифа при этом не работают.",
            "example": "off"
          },
          "alignexpenseamount": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении стоимость дня будет рассчитываться в зависимости от количества дней в периоде заказа, а не для каждого месяца отдельно",
            "example": "off"
          },
          "billhourly": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении флага клиент получает права на запуск/остановку услуг данного тарифа. В зависимости от установки флага \"Списывать средства при остановке\", клиент может получить компенсацию за часы простоя остановленной услуги. При этом средства списываются в начале дня полностью, возврат компенсации осуществляется  на следующий день с учетом времени простоя.",
            "example": "off"
          },
          "chargestoped": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При выключенном флаге клиент получает компенсацию за часы простоя остановленной услуги. Такой же флаг есть у каждого ресурса (по умолчанию он включен). Нет никакой зависимости между флагами в самом тарифном плане и в дополнительных ресурсах.",
            "example": "off"
          },
          "autocalcday": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Если стоит флаг, то стоимость дня рассчитывается из стоимости месяца деленного на количество дней в месяц",
            "example": "off"
          },
          "billprorata": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении опции срок действия услуги будет выровнен по календарному месяцу в зависимости от дня, указанного в поле \"Переходный день\". Если клиент заказывает услугу в день месяца до указанного, срок действия услуги будет рассчитан до конца текущего месяца; если же в день указанный в настройке или позже, то до конца следующего месяца. Также пропорционально изменению периода действия услуги будет изменена стоимость заказа/продления",
            "example": "off"
          },
          "prorataday": {
            "type": "string",
            "description": "Переходный день для календарного списания средств",
            "example": "1"
          },
          "quickorder": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает возможность быстрого заказа услуг, без указания при заказе параметров",
            "example": "off"
          },
          "opennotify": {
            "type": "string",
            "description": "Шаблон уведомления об открытии услуги",
            "example": ""
          },
          "license": {
            "type": "string",
            "description": "Шаблон отображения условий предоставления услуг, при наличии которого, во время заказа услуги, клиенту будет необходимо согласиться с условиями предоставления услуг. Создать или отредактировать шаблон можно в меню 'Шаблоны документов'",
            "example": ""
          },
          "pricelist_group": {
            "type": "string",
            "description": "Группа тарифа служит для объединения тарифов для предоставления общих скидок и действия политик триального периода, а также для объединения тарифов по группам в отчетах",
            "example": ""
          },
          "create_addon": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При создании тарифа будут также созданы все доступные для тарифного плана дополнения",
            "example": "off"
          },
          "ostemplate": {
            "type": "string",
            "description": "Шаблоны операционных систем, которые будут включены в тариф",
            "example": ""
          },
          "accessgroups": {
            "type": "string",
            "description": "Выбор групп клиентов, для которых тариф доступен для заказа и перехода",
            "example": ""
          },
          "denygroups": {
            "type": "string",
            "description": "Выбор групп клиентов, для которых тариф недоступен для заказа и перехода",
            "example": ""
          },
          "minperiodtype": {
            "type": "string",
            "enum": [
              "0",
              "2",
              "1",
              "0",
              "2",
              "1"
            ],
            "description": "Минимальный период, по истечении которого клиент сможет отказаться от услуги. При ежедневном списании также влияет на резервирование средств на оплату заказанной услуги; 0 - Не ограничено; 2 - День; 1 - Месяц; 0 - Не ограничено; 2 - День; 1 - Месяц",
            "example": ""
          },
          "minperiodlen": {
            "type": "string",
            "description": "Длина минимального периода в днях или месяцах",
            "example": "1"
          },
          "trial": {
            "type": "string",
            "description": "Длина триального периода в днях. Политика предоставления триального периода определяется настройками типа продукта. Оставьте пустым, если для данного тарифа нет пробного периода",
            "example": "1"
          },
          "trial_itemmax": {
            "type": "string",
            "description": "Максимальное количество триальных экземпляров услуг данного тарифного плана",
            "example": "0"
          },
          "itemmax": {
            "type": "string",
            "description": "Укажите максимально количество услуг доступных для заказа одним клиентом. По достижению указанного количества клиентом, заказ дополнительных услуг данного тарифа клиенту будет недоступен",
            "example": "0"
          },
          "allow_multiple_order": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Возможность одновременно добавить в корзину несколько услуг",
            "example": "off"
          },
          "max_multiple_order_count": {
            "type": "string",
            "description": "Большое максимальное количество одновременно заказываемых услуг может повлиять на работу биллинга",
            "example": "2"
          },
          "suspendpenaltytype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Тип штрафа за просрочку продления услуги. Штраф взимается непосредственно при оплате продления услуги; 0 - Без штрафа; 1 - Фиксированная сумма; 2 - Процент от стоимости периода просрочки; 3 - Продление с даты остановки; 0 - Без штрафа; 1 - Фиксированная сумма; 2 - Процент от стоимости периода просрочки; 3 - Продление с даты остановки",
            "example": ""
          },
          "suspendpenaltypercent": {
            "type": "string",
            "description": "Процент стоимости услуги за просроченный период",
            "example": "1.00"
          },
          "allownosuitable": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Если нет свободных ресурсов или нет в наличии выделенных серверов, услуга будет доступна для заказа",
            "example": "off"
          },
          "suspendperiod": {
            "type": "string",
            "description": "Укажите, через сколько дней после остановки неоплаченную услугу необходимо удалить. Если оставить поле пустым, будет действовать политика типа продукта",
            "example": "1"
          },
          "nostopholidays": {
            "type": "string",
            "enum": [
              "stop",
              "nostop",
              "stop",
              "nostop"
            ],
            "description": "Позволяет переопределить политику остановки услуг типа продукта; stop - Останавливать услуги; nostop - Не останавливать услуги; stop - Останавливать услуги; nostop - Не останавливать услуги",
            "example": ""
          },
          "changepolicy": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "description": "Политика расчетов применяемая при смене тарифа услуги; 0 - Изменение периода действия; 1 - Доплата/возврат средств; 2 - Смена тарифа запрещена; 3 - Только доплата, при понижении нет возврата; 4 - Полная оплата нового тарифа; 0 - Изменение периода действия; 1 - Доплата/возврат средств; 2 - Смена тарифа запрещена; 3 - Только доплата, при понижении нет возврата; 4 - Полная оплата нового тарифа",
            "example": ""
          },
          "changeprolongpolicy": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "0",
              "1"
            ],
            "description": "Политика продления услуги на новый тарифный план; 0 - текущей даты; 1 - даты окончания срока действия услуги; 0 - текущей даты; 1 - даты окончания срока действия услуги",
            "example": ""
          },
          "orderpolicy": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "0",
              "1"
            ],
            "description": "Способ расчета стоимости дополнительных ресурсов при заказе в период действия услуги; 0 - Стоимость до срока действия услуги; 1 - Полная стоимость за период; 0 - Стоимость до срока действия услуги; 1 - Полная стоимость за период",
            "example": ""
          },
          "returnpolicy": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "0",
              "1",
              "2"
            ],
            "description": "Способ расчета суммы возврата при отказе от дополнительных ресурсов в период действия услуги; 0 - Возврат средств; 1 - Без возврата средств; 2 - Изменение при продлении; 0 - Возврат средств; 1 - Без возврата средств; 2 - Изменение при продлении",
            "example": ""
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет тарифа при сортировке (в прямом порядке)",
            "example": "1"
          },
          "order_img_upload": {
            "type": "string",
            "description": "Позволяет загрузить изображение иконки тарифного плана, которое будет показано клиенту при заказе. При отсутствии клиенту будет отображена иконка типа продукта. Стандартный размер иконки при отображении 32 на 32 точки",
            "example": ""
          },
          "show_addon_image": {
            "type": "string",
            "enum": [
              "off",
              "on",
              "off",
              "on"
            ],
            "description": "Включает возможность настройки и отображение иконок ресурсов при заказе и редактировании услуг; off - Не отображать иконки; on - Отображать иконки; off - Не отображать иконки; on - Отображать иконки",
            "example": ""
          }
        }
      },
      "PricelistClone": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "Провайдер, которому будет скопирован тариф",
            "example": ""
          },
          "priceconverttype": {
            "type": "string",
            "description": "Выберите способ пересчета стоимости тарифного плана",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "Наименование тарифного плана",
            "example": "text"
          },
          "intname": {
            "type": "string",
            "description": "Должно совпадать с названием тарифного плана на сервере, на котором будет открыта услуга",
            "example": "text"
          },
          "processingmodule": {
            "type": "string",
            "description": "Выберите какие обработчики услуг будут обрабатывать услуги создаваемого тарифного плана. Тарифы не подключенные к обработчикам услуг не будут доступны для заказа.",
            "example": ""
          },
          "modulepreset": {
            "type": "string",
            "description": "Конфигурация",
            "example": ""
          },
          "activate": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении опции, создаваемый тариф будет доступен для заказа",
            "example": "off"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет тарифа при сортировке (в прямом порядке)",
            "example": "1"
          }
        }
      },
      "PricelistImport": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string",
            "description": "Выберите модуль обработки",
            "example": ""
          },
          "itemtype": {
            "type": "string",
            "description": "Выберите тип продукта",
            "example": ""
          },
          "pricelist": {
            "type": "string",
            "description": "Выберите тарифный план",
            "example": ""
          },
          "project": {
            "type": "string",
            "description": "Выберите провайдера, которому будет импортирован выбранный тарифный план",
            "example": ""
          }
        }
      },
      "Pricelist": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование тарифного плана",
            "example": "text"
          },
          "processingmodule": {
            "type": "string",
            "description": "Выберите какие обработчики услуг будут обрабатывать услуги создаваемого тарифного плана. Тарифы не подключенные к обработчикам услуг не будут доступны для заказа.",
            "example": ""
          },
          "modulepreset": {
            "type": "string",
            "description": "Конфигурация",
            "example": ""
          },
          "intname": {
            "type": "string",
            "description": "Внутренее наименование служит для получения значений по умолчанию параметров создаваемых услуг из обработчика либо для идентификации базовой конфигурации при ручной обработке",
            "example": "text"
          },
          "datacenter": {
            "type": "string",
            "description": "Дата-центры, для которых будет доступен тариф",
            "example": ""
          },
          "change_datacenter": {
            "type": "string",
            "example": ""
          },
          "billdaily": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенном флаге оплата за услугу будет сниматься ежедневно. Сумма будет рассчитана пропорционально стоимости одного дня в месяце расчета. Политики смены тарифа при этом не работают.",
            "example": "off"
          },
          "alignexpenseamount": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении стоимость дня будет рассчитываться в зависимости от количества дней в периоде заказа, а не для каждого месяца отдельно",
            "example": "off"
          },
          "billhourly": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении флага клиент получает права на запуск/остановку услуг данного тарифа. В зависимости от установки флага \"Списывать средства при остановке\", клиент может получить компенсацию за часы простоя остановленной услуги. При этом средства списываются в начале дня полностью, возврат компенсации осуществляется  на следующий день с учетом времени простоя.",
            "example": "off"
          },
          "chargestoped": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При выключенном флаге клиент получает компенсацию за часы простоя остановленной услуги. Такой же флаг есть у каждого ресурса (по умолчанию он включен). Нет никакой зависимости между флагами в самом тарифном плане и в дополнительных ресурсах.",
            "example": "off"
          },
          "autocalcday": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Если стоит флаг, то стоимость дня рассчитывается из стоимости месяца деленного на количество дней в месяц",
            "example": "off"
          },
          "billprorata": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включении опции срок действия услуги будет выровнен по календарному месяцу в зависимости от дня, указанного в поле \"Переходный день\". Если клиент заказывает услугу в день месяца до указанного, срок действия услуги будет рассчитан до конца текущего месяца; если же в день указанный в настройке или позже, то до конца следующего месяца. Также пропорционально изменению периода действия услуги будет изменена стоимость заказа/продления",
            "example": "off"
          },
          "prorataday": {
            "type": "string",
            "description": "Переходный день для календарного списания средств",
            "example": "1"
          },
          "quickorder": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает возможность быстрого заказа услуг, без указания при заказе параметров",
            "example": "off"
          },
          "opennotify": {
            "type": "string",
            "description": "Шаблон, на основе которого будет сформирована инструкция по услуге. Отправляется на почту клиенту после обработки открытия услуги, а также доступна по кнопке в списке услуг",
            "example": ""
          },
          "license": {
            "type": "string",
            "description": "Шаблон отображения условий предоставления услуг, при наличии которого, во время заказа услуги, клиенту будет необходимо согласиться с условиями предоставления услуг. Создать или отредактировать шаблон можно в меню 'Шаблоны документов'",
            "example": ""
          },
          "pricelist_group": {
            "type": "string",
            "description": "Группа тарифа служит для объединения тарифов для предоставления общих скидок и действия политик триального периода, а также для объединения тарифов по группам в отчетах",
            "example": ""
          },
          "ostemplate": {
            "type": "string",
            "description": "Шаблоны операционных систем, которые будут включены в тариф",
            "example": ""
          },
          "accessgroups": {
            "type": "string",
            "description": "Выбор групп клиентов, для которых тариф доступен для заказа и перехода",
            "example": ""
          },
          "denygroups": {
            "type": "string",
            "description": "Выбор групп клиентов, для которых тариф недоступен для заказа и перехода",
            "example": ""
          },
          "minperiodtype": {
            "type": "string",
            "enum": [
              "0",
              "2",
              "1"
            ],
            "description": "Минимальный период, по истечении которого клиент сможет отказаться от услуги. При ежедневном списании также влияет на резервирование средств на оплату заказанной услуги; 0 - Не ограничено; 2 - День; 1 - Месяц",
            "example": ""
          },
          "minperiodlen": {
            "type": "string",
            "description": "Длина минимального периода в днях или месяцах",
            "example": "1"
          },
          "trial": {
            "type": "string",
            "description": "Длина триального периода в днях. Политика предоставления триального периода определяется настройками типа продукта. Оставьте пустым, если для данного тарифа нет пробного периода",
            "example": "1"
          },
          "trial_itemmax": {
            "type": "string",
            "description": "Максимальное количество триальных экземпляров услуг данного тарифного плана",
            "example": "0"
          },
          "itemmax": {
            "type": "string",
            "description": "Укажите максимально количество услуг доступных для заказа одним клиентом. По достижению указанного количества клиентом, заказ дополнительных услуг данного тарифа клиенту будет недоступен",
            "example": "0"
          },
          "allow_multiple_order": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Возможность одновременно добавить в корзину несколько услуг",
            "example": "off"
          },
          "max_multiple_order_count": {
            "type": "string",
            "description": "Большое максимальное количество одновременно заказываемых услуг может повлиять на работу биллинга",
            "example": "2"
          },
          "suspendpenaltytype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Тип штрафа за просрочку продления услуги. Штраф взимается непосредственно при оплате продления услуги; 0 - Без штрафа; 1 - Фиксированная сумма; 2 - Процент от стоимости периода просрочки; 3 - Продление с даты остановки",
            "example": ""
          },
          "suspendpenaltypercent": {
            "type": "string",
            "description": "Процент стоимости услуги за просроченный период",
            "example": "1.00"
          },
          "allownosuitable": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Если нет свободных ресурсов или нет в наличии выделенных серверов, услуга будет доступна для заказа",
            "example": "off"
          },
          "suspendperiod": {
            "type": "string",
            "description": "Укажите, через сколько дней после остановки неоплаченную услугу необходимо удалить. Если оставить поле пустым, будет действовать политика типа продукта",
            "example": "1"
          },
          "nostopholidays": {
            "type": "string",
            "enum": [
              "stop",
              "nostop"
            ],
            "description": "Позволяет переопределить политику остановки услуг типа продукта; stop - Останавливать услуги; nostop - Не останавливать услуги",
            "example": ""
          },
          "changepolicy": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "description": "Политика расчетов применяемая при смене тарифа услуги; 0 - Изменение периода действия; 1 - Доплата/возврат средств; 2 - Смена тарифа запрещена; 3 - Только доплата, при понижении нет возврата; 4 - Полная оплата нового тарифа",
            "example": ""
          },
          "changeprolongpolicy": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Политика продления услуги на новый тарифный план; 0 - текущей даты; 1 - даты окончания срока действия услуги",
            "example": ""
          },
          "orderpolicy": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Способ расчета стоимости дополнительных ресурсов при заказе в период действия услуги; 0 - Стоимость до срока действия услуги; 1 - Полная стоимость за период",
            "example": ""
          },
          "returnpolicy": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Способ расчета суммы возврата при отказе от дополнительных ресурсов в период действия услуги; 0 - Возврат средств; 1 - Без возврата средств; 2 - Изменение при продлении",
            "example": ""
          },
          "endoflifedate": {
            "type": "string",
            "description": "Дата окончания действия тарифа при продлении услуги",
            "example": ""
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет тарифа при сортировке (в прямом порядке)",
            "example": "1"
          },
          "order_img_upload": {
            "type": "string",
            "description": "Позволяет загрузить изображение иконки тарифного плана, которое будет показано клиенту при заказе. При отсутствии клиенту будет отображена иконка типа продукта. Стандартный размер иконки при отображении 32 на 32 точки",
            "example": ""
          },
          "show_addon_image": {
            "type": "string",
            "enum": [
              "off",
              "on"
            ],
            "description": "Включает возможность настройки и отображение иконок ресурсов при заказе и редактировании услуг; off - Не отображать иконки; on - Отображать иконки",
            "example": ""
          }
        }
      },
      "PricelistProcessingElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование обработчика услуг"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет обработчика при открытии услуги"
          },
          "status": {
            "type": "string",
            "description": "Отношение обработчика услуг к тарифному плану"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "PricelistDetailElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "price": {
            "type": "string",
            "description": "Стоимость единицы дополнительного ресурса"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет дополнения к тарифу при сортировке (в прямом порядке)"
          },
          "status": {
            "type": "string",
            "description": "Текущее состояние дополнения"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          },
          "is_compound": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Тип учета - по выбору клиента\""
          },
          "manualprocessing": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Включена ручная обработка\""
          },
          "restrictclientchange": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Запрещено изменение клиентом после заказа\""
          },
          "has_scale": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Настроена шкала цен возможных значений\""
          }
        }
      },
      "PricelistDetailNew": {
        "type": "object",
        "properties": {
          "billtype": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "5",
              "4"
            ],
            "description": "Способ списания средств за дополнение с клиента; 1 - Не учитывать; 2 - На основе заказанных значений; 3 - На основе статистики; 5 - На основе значения других ресурсов; 4 - Выбирается клиентом",
            "example": ""
          },
          "chargestoped": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При выключенном флаге клиент получает компенсацию за часы простоя остановленной услуги.",
            "example": "off"
          },
          "itemtype": {
            "type": "string",
            "enum": [
              "settings",
              "settings"
            ],
            "description": "Тип дополнения. Определяет ресурс, который регулируется данным дополнением; settings - Дополнительные настройки; settings - Дополнительные настройки",
            "example": ""
          },
          "addontype": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "description": "Способ задания значения дополнения к тарифу; 1 - Логическое (Да/Нет); 2 - Целое число; 3 - Перечисление; 4 - Перечисление с количеством",
            "example": ""
          },
          "scaletype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Параметр используется при расчете стоимости дополнения при заданной шкале цен; 0 - По ближайшему значению; 1 - За каждый шаг шкалы; 2 - По пакетам значений; 3 - По вариантам значений",
            "example": ""
          },
          "restrictclientchange": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "uponly",
              "downonly"
            ],
            "description": "Политика изменение клиентом ресурса после заказа; on - Изменение запрещено; off - Изменение разрешено; uponly - Только повышение; downonly - Только понижение",
            "example": ""
          },
          "minperiodtype": {
            "type": "string",
            "enum": [
              "0",
              "2",
              "1",
              "0",
              "2",
              "1",
              "0",
              "2",
              "1"
            ],
            "description": "Минимальный период, по истечению которого клиент сможет изменить дополнение в сторону уменьшения; 0 - Не ограничено; 2 - День; 1 - Месяц; 0 - Не ограничено; 2 - День; 1 - Месяц; 0 - Не ограничено; 2 - День; 1 - Месяц",
            "example": ""
          },
          "minperiodlen": {
            "type": "string",
            "description": "Длина минимального периода заказа дополнения",
            "example": "1"
          },
          "manualprocessing": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Для обработки ресурса будет создана задача в технический отдел",
            "example": "off"
          },
          "manualprocessing_skipdefault": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Если данная опция включена, и для дополнения выбрано значение по умолчанию, то это дополнение не будет добавлено в задачу на ручную обработку.",
            "example": "off"
          },
          "manualname": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции в качестве наименования дополнения будет использовано указанное значение",
            "example": "off"
          },
          "name": {
            "type": "string",
            "description": "Наименование тарифного плана",
            "example": "text"
          },
          "intname": {
            "type": "string",
            "description": "Указывается при необходимости переопределения стандартного служебного имени дополнения, например для расчета статистики использования ресурсов по нескольким параметрам, или в случае если имя параметра отличается от служебного имени дополнения",
            "example": ""
          },
          "processing_feature": {
            "type": "string",
            "description": "При выборе дополнения с указанной возможностью будет выбран обработчик, у которого данная возможность присутствует",
            "example": ""
          },
          "roundtype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Способ округления расчитанного значения; 0 - По правилам математики; 1 - Округление к большему значению; 2 - Округление к меньшему значению",
            "example": ""
          },
          "addonstattype": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Выберите, за какой период считать превышение; 1 - За календарный месяц; 2 - За день",
            "example": ""
          },
          "addonstatcomparison": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Выберите как считать, если параметров одного типа несколько. К примеру, трафик может быть входящим и исходящим.; 1 - Суммировать; 2 - Наибольшее значение",
            "example": ""
          },
          "addonstatcalculation": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Укажите, за что указана цена. Если за единицу в месяц, то статистика будет считаться как: (превышение за день) * (цену) / (количество дней в месяце); 0 - За каждую единицу; 1 - За единицу в месяц",
            "example": ""
          },
          "addonstatchargestoped": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При проставленной опции списание по данному дополнению будут идти и на остановленной услуге",
            "example": "off"
          },
          "allowpostpaid": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция разрешает списание средств за перерасход ресурса без учета баланса клиента",
            "example": "off"
          },
          "summarizeinvoice": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Суммировать значение параметра за весь период при генерации акта выполненных работ",
            "example": "off"
          },
          "measure": {
            "type": "string",
            "description": "Единица измерения, в которой задается дополнение. При передаче значения дополнения в панель управления заказанное значение будет переведено в единицу измерения используемую панелью управления",
            "example": ""
          },
          "addonlimit": {
            "type": "string",
            "description": "Значение по умолчанию для дополнения",
            "example": "0"
          },
          "addonstep": {
            "type": "string",
            "description": "Шаг заказа дополнения",
            "example": "1"
          },
          "addonmin": {
            "type": "string",
            "description": "Минимальное значение для заказа. Не может быть меньше чем включено в тариф.",
            "example": "0"
          },
          "addonmax": {
            "type": "string",
            "description": "Максимальное доступное для заказа значение ресурса",
            "example": "0"
          },
          "addonlimittrial": {
            "type": "string",
            "description": "Значение по умолчанию для дополнения на триальном периоде",
            "example": "0"
          },
          "addonmaxtrial": {
            "type": "string",
            "description": "Максимальное доступное для заказа значение ресурса которое можно заказать на триальном периоде",
            "example": "0"
          },
          "enumeration": {
            "type": "string",
            "description": "Перечисление, из которого будут браться значения для дополнений к услугам",
            "example": ""
          },
          "enumerationitem": {
            "type": "string",
            "description": "Элемент перечисления, включенный по умолчанию при заказе услуги",
            "example": ""
          },
          "orderpolicy": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "0",
              "1",
              "0",
              "1"
            ],
            "description": "Способ расчета стоимости изменения значения дополнения; 0 - разница в стоимости значений; 1 - полная стоимость значения; 0 - Стоимость до срока действия услуги; 1 - Полная стоимость за период; 0 - Стоимость до срока действия услуги; 1 - Полная стоимость за период",
            "example": ""
          },
          "addonbool": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Значение по умолчанию для дополнения",
            "example": "off"
          },
          "orderpriority": {
            "type": "string",
            "description": "Позволяет задать приоритет дополнения тарифа при сортировке",
            "example": "1"
          },
          "order_img_upload": {
            "type": "string",
            "description": "Позволяет загрузить изображение иконки тарифного плана, которое будет показано клиенту при заказе. При отсутствии клиенту будет отображена иконка типа продукта. Стандартный размер иконки при отображении 32 на 32 точки",
            "example": ""
          }
        }
      },
      "PricelistDetail": {
        "type": "object",
        "properties": {
          "billtype": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "5",
              "4"
            ],
            "description": "Способ списания средств за дополнение с клиента; 1 - Не учитывать; 2 - На основе заказанных значений; 3 - На основе статистики; 5 - На основе значения других ресурсов; 4 - Выбирается клиентом",
            "example": ""
          },
          "chargestoped": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При выключенном флаге клиент получает компенсацию за часы простоя остановленной услуги.",
            "example": "off"
          },
          "itemtype": {
            "type": "string",
            "enum": [
              "settings",
              "settings"
            ],
            "description": "Тип дополнения. Определяет ресурс, который регулируется данным дополнением; settings - Дополнительные настройки; settings - Дополнительные настройки",
            "example": ""
          },
          "addontype": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "description": "Способ задания значения дополнения к тарифу; 1 - Логическое (Да/Нет); 2 - Целое число; 3 - Перечисление; 4 - Перечисление с количеством",
            "example": ""
          },
          "scaletype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Параметр используется при расчете стоимости дополнения при заданной шкале цен; 0 - По ближайшему значению; 1 - За каждый шаг шкалы; 2 - По пакетам значений; 3 - По вариантам значений",
            "example": ""
          },
          "restrictclientchange": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "uponly",
              "downonly"
            ],
            "description": "Политика изменение клиентом ресурса после заказа; on - Изменение запрещено; off - Изменение разрешено; uponly - Только повышение; downonly - Только понижение",
            "example": ""
          },
          "minperiodtype": {
            "type": "string",
            "enum": [
              "0",
              "2",
              "1",
              "0",
              "2",
              "1",
              "0",
              "2",
              "1"
            ],
            "description": "Минимальный период, по истечению которого клиент сможет изменить дополнение в сторону уменьшения; 0 - Не ограничено; 2 - День; 1 - Месяц; 0 - Не ограничено; 2 - День; 1 - Месяц; 0 - Не ограничено; 2 - День; 1 - Месяц",
            "example": ""
          },
          "minperiodlen": {
            "type": "string",
            "description": "Длина минимального периода заказа дополнения",
            "example": "1"
          },
          "manualprocessing": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Для обработки ресурса будет создана задача в технический отдел",
            "example": "off"
          },
          "manualprocessing_skipdefault": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Если данная опция включена, и для дополнения выбрано значение по умолчанию, то это дополнение не будет добавлено в задачу на ручную обработку.",
            "example": "off"
          },
          "manualname": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При включенной опции в качестве наименования дополнения будет использовано указанное значение",
            "example": "off"
          },
          "name": {
            "type": "string",
            "description": "Наименование тарифного плана",
            "example": "text"
          },
          "intname": {
            "type": "string",
            "description": "Указывается при необходимости переопределения стандартного служебного имени дополнения, например для расчета статистики использования ресурсов по нескольким параметрам, или в случае если имя параметра отличается от служебного имени дополнения",
            "example": ""
          },
          "processing_feature": {
            "type": "string",
            "description": "При выборе дополнения с указанной возможностью будет выбран обработчик, у которого данная возможность присутствует",
            "example": ""
          },
          "roundtype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Способ округления расчитанного значения; 0 - По правилам математики; 1 - Округление к большему значению; 2 - Округление к меньшему значению",
            "example": ""
          },
          "addonstattype": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Выберите, за какой период считать превышение; 1 - За календарный месяц; 2 - За день",
            "example": ""
          },
          "addonstatcomparison": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Выберите как считать, если параметров одного типа несколько. К примеру, трафик может быть входящим и исходящим.; 1 - Суммировать; 2 - Наибольшее значение",
            "example": ""
          },
          "addonstatcalculation": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Укажите, за что указана цена. Если за единицу в месяц, то статистика будет считаться как: (превышение за день) * (цену) / (количество дней в месяце); 0 - За каждую единицу; 1 - За единицу в месяц",
            "example": ""
          },
          "addonstatchargestoped": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При проставленной опции списание по данному дополнению будут идти и на остановленной услуге",
            "example": "off"
          },
          "allowpostpaid": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция разрешает списание средств за перерасход ресурса без учета баланса клиента",
            "example": "off"
          },
          "summarizeinvoice": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Суммировать значение параметра за весь период при генерации акта выполненных работ",
            "example": "off"
          },
          "measure": {
            "type": "string",
            "description": "Единица измерения, в которой задается дополнение. При передаче значения дополнения в панель управления заказанное значение будет переведено в единицу измерения используемую панелью управления",
            "example": ""
          },
          "addonlimit": {
            "type": "string",
            "description": "Значение по умолчанию для дополнения",
            "example": "0"
          },
          "addonstep": {
            "type": "string",
            "description": "Шаг заказа дополнения",
            "example": "1"
          },
          "addonmin": {
            "type": "string",
            "description": "Минимальное значение для заказа. Не может быть меньше чем включено в тариф.",
            "example": "0"
          },
          "addonmax": {
            "type": "string",
            "description": "Максимальное доступное для заказа значение ресурса",
            "example": "0"
          },
          "addonlimittrial": {
            "type": "string",
            "description": "Значение по умолчанию для дополнения на триальном периоде",
            "example": "0"
          },
          "addonmaxtrial": {
            "type": "string",
            "description": "Максимальное доступное для заказа значение ресурса которое можно заказать на триальном периоде",
            "example": "0"
          },
          "enumeration": {
            "type": "string",
            "description": "Перечисление, из которого будут браться значения для дополнений к услугам",
            "example": ""
          },
          "enumerationitem": {
            "type": "string",
            "description": "Элемент перечисления, включенный по умолчанию при заказе услуги",
            "example": ""
          },
          "orderpolicy": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "0",
              "1",
              "0",
              "1"
            ],
            "description": "Способ расчета стоимости изменения значения дополнения; 0 - разница в стоимости значений; 1 - полная стоимость значения; 0 - Стоимость до срока действия услуги; 1 - Полная стоимость за период; 0 - Стоимость до срока действия услуги; 1 - Полная стоимость за период",
            "example": ""
          },
          "addonbool": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Значение по умолчанию для дополнения",
            "example": "off"
          },
          "orderpriority": {
            "type": "string",
            "description": "Позволяет задать приоритет дополнения тарифа при сортировке",
            "example": "1"
          },
          "order_img_upload": {
            "type": "string",
            "description": "Позволяет загрузить изображение иконки тарифного плана, которое будет показано клиенту при заказе. При отсутствии клиенту будет отображена иконка типа продукта. Стандартный размер иконки при отображении 32 на 32 точки",
            "example": ""
          }
        }
      },
      "PricelistDetailEnumElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "price": {
            "type": "string",
            "description": "Цена"
          },
          "orderpriority": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "disabled": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Недоступно для заказа\"; значение \"off\": \"Доступно для заказа\""
          },
          "is_default": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Значение по умолчанию\""
          }
        }
      },
      "PricelistDetailEnum": {
        "type": "object",
        "properties": {
          "orderpriority": {
            "type": "string",
            "description": "Порядок сортировки элемента перечисления в списке выбора",
            "example": "1"
          }
        }
      },
      "PricelistDetailIntegerElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "value": {
            "type": "string",
            "description": "Количество ресурса при заказе которого начинает действовать специальная цена "
          },
          "price": {
            "type": "string",
            "description": "Специальная цена за единцу ресурса"
          }
        }
      },
      "PricelistDetailIntegerNew": {
        "type": "object",
        "properties": {}
      },
      "PricelistDetailInteger": {
        "type": "object",
        "properties": {}
      },
      "PricelistDetailCompoundElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "price": {
            "type": "string",
            "description": "Стоимость единицы дополнительного ресурса"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет дополнения к тарифу при сортировке (в прямом порядке)"
          },
          "status": {
            "type": "string",
            "description": "Текущее состояние дополнения"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          },
          "manualprocessing": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "restrictclientchange": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "has_scale": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          }
        }
      },
      "PricelistHistoryElem": {
        "type": "object",
        "properties": {
          "changedate": {
            "type": "string"
          },
          "desc": {
            "type": "string",
            "description": "Описание тарифа"
          },
          "user": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "PricelistChangeElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование тарифа"
          },
          "status": {
            "type": "string",
            "description": "Признак разрешения смены тарифа на данный"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "PricelistChangeRuleElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "fromdate": {
            "type": "string",
            "description": "Начало периода, в который должна попасть дата заказа услуги, для которой производится смена тарифного плана, для получения указанной скидки"
          },
          "todate": {
            "type": "string",
            "description": "Окончание периода, в который должна попасть дата заказа услуги, для которой производится смена тарифного плана, для получения указанной скидки"
          },
          "period": {
            "type": "string",
            "description": "Период заказа, на который распространяется скидка"
          },
          "discount": {
            "type": "string",
            "description": "% скидки предоставляемый при смене на тариф в указанный период"
          }
        }
      },
      "PricelistChangeRuleNew": {
        "type": "object",
        "properties": {
          "fromdate": {
            "type": "string",
            "description": "Начальная дата периода, в которым должна попасть дата заказа услуги для применения к ней правила",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Конечная дата периода, в которым должна попасть дата заказа услуги для применения к ней правила",
            "example": "text"
          },
          "period": {
            "type": "string",
            "description": "На разных периодах заказа (вечный, месяц и т.д.) можно иметь разные правила.",
            "example": ""
          },
          "discount": {
            "type": "string",
            "description": "Укажите скидку в процентах, с которой будет предоставлен новый товар.",
            "example": "1.00"
          }
        }
      },
      "PricelistChangeRule": {
        "type": "object",
        "properties": {
          "fromdate": {
            "type": "string",
            "description": "Начальная дата периода, в которым должна попасть дата заказа услуги для применения к ней правила",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Конечная дата периода, в которым должна попасть дата заказа услуги для применения к ней правила",
            "example": "text"
          },
          "period": {
            "type": "string",
            "description": "На разных периодах заказа (вечный, месяц и т.д.) можно иметь разные правила.",
            "example": ""
          },
          "discount": {
            "type": "string",
            "description": "Укажите скидку в процентах, с которой будет предоставлен новый товар.",
            "example": "1.00"
          }
        }
      },
      "PricelistReferenceElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "referencedesc": {
            "type": "string",
            "description": "Зависимость дополнений тарифного плана"
          },
          "reference": {
            "type": "string",
            "description": "Соотношение дополнений тарифного плана"
          }
        }
      },
      "PricelistReferenceNew": {
        "type": "object",
        "properties": {
          "pricelist_base": {
            "type": "string",
            "description": "Дополнение тарифного плана, при изменении которого будет изменено значение зависимого дополнения",
            "example": ""
          },
          "enumerationitem_base": {
            "type": "string",
            "description": "Значения, при выборе одного из которых будет изменено зависимое дополнений",
            "example": ""
          },
          "pricelist_reference": {
            "type": "string",
            "description": "Дополнение, которое будет изменено при изменении основного дополнения",
            "example": ""
          },
          "enumerationitem_reference": {
            "type": "string",
            "description": "Значения, которые будут доступны при изменении основного дополнения",
            "example": ""
          }
        }
      },
      "PricelistReference": {
        "type": "object",
        "properties": {
          "pricelist_base": {
            "type": "string",
            "description": "Дополнение тарифного плана, при изменении которого будет изменено значение зависимого дополнения",
            "example": ""
          },
          "enumerationitem_base": {
            "type": "string",
            "description": "Значения, при выборе одного из которых будет изменено зависимое дополнений",
            "example": ""
          },
          "pricelist_reference": {
            "type": "string",
            "description": "Дополнение, которое будет изменено при изменении основного дополнения",
            "example": ""
          },
          "enumerationitem_reference": {
            "type": "string",
            "description": "Значения, которые будут доступны при изменении основного дополнения",
            "example": ""
          }
        }
      },
      "PricelistReferenceClone": {
        "type": "object",
        "properties": {}
      },
      "ItemtypeElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "intname": {
            "type": "string"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет типа продукта при сортировке (в прямом порядке)"
          }
        }
      },
      "ItemtypeNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование типа продукта",
            "example": "text"
          },
          "description": {
            "type": "string",
            "description": "Краткое описание типа продукта при заказе услуги",
            "example": ""
          },
          "intname": {
            "type": "string",
            "description": "Внутреннее имя типа, которое используется для его идентификации. Также по внутреннему имени отбираются поддерживаемые обработчики",
            "example": "text"
          },
          "trialtype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Выберите способ предоставления клиентам триальной версии услуг данного типа; 0 - Одна этого типа продукта; 1 - По одной в каждой группе продукта; 2 - По одной каждого тарифа; 3 - Для каждой услуги",
            "example": ""
          },
          "splitexpense": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает равномерное распределение расходов по месяцам, например: при оплате услуги за год будет создано 12 или 13 расходов за каждый месяц, в котором будет активна услуга. Удобно для актов выполненных работ, а также учета расходов будущих периодов",
            "example": "off"
          },
          "nostopholidays": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Установите опцию, если не хотите, чтобы услуги клиентов останавливались в выходные дни: субботу и воскресенье",
            "example": "off"
          },
          "orderpriority": {
            "type": "string",
            "description": "Позволяет задать приоритет типа продукта при сортировке",
            "example": ""
          },
          "open_duration_limit": {
            "type": "string",
            "description": "Регламент на время обработки услуг. Формат чч:мм",
            "example": ""
          },
          "list_img_upload": {
            "type": "string",
            "description": "Позволяет загрузить свою иконку для отображения в списке услуг, напротив заголовка списка. Стандартный размер иконки при отображении 48 на 48 точки, формат - .PNG",
            "example": ""
          },
          "suspendperiod": {
            "type": "string",
            "description": "Укажите, через сколько дней после остановки неоплаченную услугу необходимо удалить",
            "example": "1"
          },
          "closetype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Политика доступа клиентов к удалению услуг данного типа; 0 - Клиент может удалять услуги; 1 - Клиенту запрещено удалять услуги; 2 - Клиент может удалять услуги с проверкой по проверенному телефону",
            "example": ""
          },
          "closesubtype": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Правила удаления услуги, если удаляет сам клиент; 0 - Удалять сразу; 1 - Удалять после завершения оплаченного периода",
            "example": ""
          },
          "trial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить триальный период",
            "example": "off"
          },
          "day": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в день",
            "example": "off"
          },
          "monthly": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в месяц",
            "example": "off"
          },
          "quarterly": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в три месяца",
            "example": "off"
          },
          "semiannual": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в полгода",
            "example": "off"
          },
          "annually": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в год",
            "example": "off"
          },
          "biennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в два года",
            "example": "off"
          },
          "triennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в три года",
            "example": "off"
          },
          "quadrennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в четыре года",
            "example": "off"
          },
          "quinquennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в пять лет",
            "example": "off"
          },
          "decennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в десять лет",
            "example": "off"
          },
          "lifetime": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить единоразовую оплату",
            "example": "off"
          },
          "transfer": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить трансфер",
            "example": "off"
          },
          "orderview": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Переключает режим отображения выбора тарифа при заказе услуги клиентом. Настроить описание тарифа можно в его настройках; 0 - В виде списка; 1 - В виде блоков",
            "example": ""
          },
          "order_img_upload": {
            "type": "string",
            "description": "Позволяет загрузить свою иконку для отображения типа продукта в списке типов, а также для тарифов, которые не имеют своей иконки. Стандартный размер иконки при отображении 32 на 32 точки",
            "example": ""
          },
          "show_addon_image": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает возможность настройки и отображение иконок ресурсов при заказе и редактировании услуг",
            "example": "off"
          }
        }
      },
      "Itemtype": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование типа продукта",
            "example": "text"
          },
          "description": {
            "type": "string",
            "description": "Краткое описание типа продукта при заказе услуги",
            "example": ""
          },
          "intname": {
            "type": "string",
            "description": "Внутреннее имя типа, которое используется для его идентификации. Также по внутреннему имени отбираются поддерживаемые обработчики",
            "example": "text"
          },
          "trialtype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Выберите способ предоставления клиентам триальной версии услуг данного типа; 0 - Одна этого типа продукта; 1 - По одной в каждой группе продукта; 2 - По одной каждого тарифа; 3 - Для каждой услуги",
            "example": ""
          },
          "splitexpense": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает равномерное распределение расходов по месяцам, например: при оплате услуги за год будет создано 12 или 13 расходов за каждый месяц, в котором будет активна услуга. Удобно для актов выполненных работ, а также учета расходов будущих периодов",
            "example": "off"
          },
          "nostopholidays": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Установите опцию, если не хотите, чтобы услуги клиентов останавливались в выходные дни: субботу и воскресенье",
            "example": "off"
          },
          "orderpriority": {
            "type": "string",
            "description": "Позволяет задать приоритет типа продукта при сортировке",
            "example": ""
          },
          "open_duration_limit": {
            "type": "string",
            "description": "Регламент на время обработки услуг. Формат чч:мм",
            "example": ""
          },
          "list_img_upload": {
            "type": "string",
            "description": "Позволяет загрузить свою иконку для отображения в списке услуг, напротив заголовка списка. Стандартный размер иконки при отображении 48 на 48 точки, формат - .PNG",
            "example": ""
          },
          "suspendperiod": {
            "type": "string",
            "description": "Укажите, через сколько дней после остановки неоплаченную услугу необходимо удалить",
            "example": "1"
          },
          "closetype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Политика доступа клиентов к удалению услуг данного типа; 0 - Клиент может удалять услуги; 1 - Клиенту запрещено удалять услуги; 2 - Клиент может удалять услуги с проверкой по проверенному телефону",
            "example": ""
          },
          "closesubtype": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Правила удаления услуги, если удаляет сам клиент; 0 - Удалять сразу; 1 - Удалять после завершения оплаченного периода",
            "example": ""
          },
          "trial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить триальный период",
            "example": "off"
          },
          "day": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в день",
            "example": "off"
          },
          "monthly": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в месяц",
            "example": "off"
          },
          "quarterly": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в три месяца",
            "example": "off"
          },
          "semiannual": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в полгода",
            "example": "off"
          },
          "annually": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в год",
            "example": "off"
          },
          "biennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в два года",
            "example": "off"
          },
          "triennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в три года",
            "example": "off"
          },
          "quadrennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в четыре года",
            "example": "off"
          },
          "quinquennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в пять лет",
            "example": "off"
          },
          "decennial": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить период в десять лет",
            "example": "off"
          },
          "lifetime": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить единоразовую оплату",
            "example": "off"
          },
          "transfer": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить трансфер",
            "example": "off"
          },
          "orderview": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Переключает режим отображения выбора тарифа при заказе услуги клиентом. Настроить описание тарифа можно в его настройках; 0 - В виде списка; 1 - В виде блоков",
            "example": ""
          },
          "order_img_upload": {
            "type": "string",
            "description": "Позволяет загрузить свою иконку для отображения типа продукта в списке типов, а также для тарифов, которые не имеют своей иконки. Стандартный размер иконки при отображении 32 на 32 точки",
            "example": ""
          },
          "show_addon_image": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает возможность настройки и отображение иконок ресурсов при заказе и редактировании услуг",
            "example": "off"
          }
        }
      },
      "PricelistgroupElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "project": {
            "type": "string",
            "description": "Провайдера группы тарифов"
          },
          "itemtype": {
            "type": "string",
            "description": "Тип продукта к которому относится группа"
          }
        }
      },
      "PricelistgroupNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование группы",
            "example": "text"
          },
          "project": {
            "type": "string",
            "enum": [
              "list"
            ],
            "description": "Провайдер, к которому привязана группа; list - Провайдер",
            "example": ""
          },
          "itemtype": {
            "type": "string",
            "description": "Тип продукта, к которому привязана группа",
            "example": ""
          },
          "itemmax": {
            "type": "string",
            "description": "Укажите максимально количество услуг доступных для заказа одним клиентом. По достижению указанного количества клиентом, заказ дополнительных услуг данного тарифа клиенту будет недоступен",
            "example": "1"
          },
          "trial_itemmax": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "Pricelistgroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование группы",
            "example": "text"
          },
          "itemmax": {
            "type": "string",
            "description": "Укажите максимально количество услуг доступных для заказа одним клиентом. По достижению указанного количества клиентом, заказ дополнительных услуг данного тарифа клиенту будет недоступен",
            "example": "1"
          },
          "trial_itemmax": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "PromotionElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "type": {
            "type": "string",
            "description": "Тип промо-акции"
          },
          "fromdate": {
            "type": "string",
            "description": "Дата начала действия промо-акции"
          },
          "todate": {
            "type": "string",
            "description": "Дата окончания промо-акции"
          },
          "status": {
            "type": "string",
            "description": "Текущее состояние промо-акции"
          },
          "project_name": {
            "type": "string",
            "description": "Провайдер, для которого создана промо-акция"
          }
        }
      },
      "PromotionNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "project": {
            "type": "string",
            "description": "Провайдер промо-акции",
            "example": ""
          },
          "fromdate": {
            "type": "string",
            "description": "Начало периода действия промо-акции",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Окончание периода действия промо-акции (включительно указанную дату)",
            "example": "text"
          },
          "type": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Тип промо-акции; 0 - Предоставление скидок на услуги; 1 - Сертификат на пополнение баланса; 2 - Кешбэк на платежи",
            "example": ""
          },
          "account_uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз клиент может воспользоваться промо-акцией",
            "example": "1"
          },
          "numtmpl_payment": {
            "type": "string",
            "description": "Шаблон формирования номера счета, можно использовать макрос {id} - код платежа. Если поле не заполнено, будет использован шаблон: {id}, так же если в шаблоне отсутствует макрос {id}, то он будет автоматически добавлен к шаблону при создании платежа",
            "example": ""
          },
          "amount_percent": {
            "type": "string",
            "description": "Настройка процента от суммы ранее зачисленного платежа",
            "example": "1.00"
          },
          "amount_max": {
            "type": "string",
            "description": "Максимальная сумма кешбэка",
            "example": "1.00"
          },
          "paymethod": {
            "type": "string",
            "enum": [
              "name",
              "description",
              "nullmsg"
            ],
            "description": "Методы оплаты, по которым будет начисляться кешбэк; name - Дополнение к наименованию метода оплаты; description - Дополнение к описанию метода оплаты; nullmsg - -- все --",
            "example": ""
          }
        }
      },
      "Promotion": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "fromdate": {
            "type": "string",
            "description": "Начало периода действия промо-акции",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Окончание периода действия промо-акции (включительно указанную дату)",
            "example": "text"
          },
          "type": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Тип промо-акции; 0 - Предоставление скидок на услуги; 1 - Сертификат на пополнение баланса; 2 - Кешбэк на платежи",
            "example": ""
          },
          "account_uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз клиент может воспользоваться промо-акцией",
            "example": "1"
          },
          "numtmpl_payment": {
            "type": "string",
            "description": "Шаблон формирования номера счета, можно использовать макрос {id} - код платежа. Если поле не заполнено, будет использован шаблон: {id}, так же если в шаблоне отсутствует макрос {id}, то он будет автоматически добавлен к шаблону при создании платежа",
            "example": ""
          },
          "amount_percent": {
            "type": "string",
            "description": "Настройка процента от суммы ранее зачисленного платежа",
            "example": "1.00"
          },
          "amount_max": {
            "type": "string",
            "description": "Максимальная сумма кешбэка",
            "example": "1.00"
          },
          "paymethod": {
            "type": "string",
            "enum": [
              "name",
              "description",
              "nullmsg"
            ],
            "description": "Методы оплаты, по которым будет начисляться кешбэк; name - Дополнение к наименованию метода оплаты; description - Дополнение к описанию метода оплаты; nullmsg - -- все --",
            "example": ""
          }
        }
      },
      "PromotionDiscountElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "actiontype": {
            "type": "string",
            "description": "Выберите на что действует скидка. Обратите внимание, что скидка на продление не будет действовать на тарифы с ежедневным списанием"
          },
          "applicable_for": {
            "type": "string",
            "description": "Способ применения скидки"
          }
        }
      },
      "PromotionDiscountNew": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Способ предоставления скидки; 0 - Процент от стоимости; 1 - Специальная цена",
            "example": ""
          },
          "percentage": {
            "type": "string",
            "description": "Скидка в % на стоимость услуги/товара",
            "example": "0.0"
          },
          "actiontype": {
            "type": "string",
            "description": "Выберите на что действует скидка. Обратите внимание, что скидка на продление не будет действовать на тарифы с ежедневным списанием",
            "example": ""
          },
          "applicable_for": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "0",
              "1",
              "2"
            ],
            "description": "Способ применения скидки; 0 - Ко всей стоимости услуги; 1 - К базовой стоимости тарифа; 2 - К дополнительным ресурсам; 0 - Ко всей стоимости услуги; 1 - К базовой стоимости тарифа; 2 - К дополнительным ресурсам",
            "example": ""
          },
          "period": {
            "type": "string",
            "description": "Период заказа, на который распространяется скидка",
            "example": ""
          },
          "validity": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Выберите, как будет действовать скидка: без ограничений на весь период заказа или только на часть.; 0 - На весь период заказа; 1 - На несколько первых месяцев; 2 - На первый период заказа (ежедневное списание)",
            "example": ""
          },
          "validitylength": {
            "type": "string",
            "description": "Укажите на сколько месяцев будет действовать скидка",
            "example": "1"
          }
        }
      },
      "PromotionDiscount": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Способ предоставления скидки; 0 - Процент от стоимости; 1 - Специальная цена",
            "example": ""
          },
          "percentage": {
            "type": "string",
            "description": "Скидка в % на стоимость услуги/товара",
            "example": "0.0"
          },
          "actiontype": {
            "type": "string",
            "description": "Выберите на что действует скидка. Обратите внимание, что скидка на продление не будет действовать на тарифы с ежедневным списанием",
            "example": ""
          },
          "applicable_for": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "0",
              "1",
              "2"
            ],
            "description": "Способ применения скидки; 0 - Ко всей стоимости услуги; 1 - К базовой стоимости тарифа; 2 - К дополнительным ресурсам; 0 - Ко всей стоимости услуги; 1 - К базовой стоимости тарифа; 2 - К дополнительным ресурсам",
            "example": ""
          },
          "period": {
            "type": "string",
            "description": "Период заказа, на который распространяется скидка",
            "example": ""
          },
          "validity": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Выберите, как будет действовать скидка: без ограничений на весь период заказа или только на часть.; 0 - На весь период заказа; 1 - На несколько первых месяцев; 2 - На первый период заказа (ежедневное списание)",
            "example": ""
          },
          "validitylength": {
            "type": "string",
            "description": "Укажите на сколько месяцев будет действовать скидка",
            "example": "1"
          }
        }
      },
      "PromotionConditionElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "condition": {
            "type": "string",
            "description": "Условие участия в промо-акции"
          },
          "cgroup": {
            "type": "string",
            "description": "Условия в группе будут объединены оператором ИЛИ. Группы между собой связаны по оператору И. Пример: есть условия A, B  и С объединенные в одну группу и есть условия D и E объединенные в другую группу. Итоговое выражение тогда будет - (A ИЛИ B ИЛИ С) И (D ИЛИ E)"
          }
        }
      },
      "PromotionConditionNew": {
        "type": "object",
        "properties": {
          "ctype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "50",
              "51",
              "61",
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "50",
              "51",
              "61"
            ],
            "description": "Условие, по которому будет проверяться применимость акции для клиента; 0 - Без условий; 1 - Количество оплаченных услуг; 2 - Дата регистрации; 3 - Количество услуг; 4 - Покупка услуги/товара; 5 - Сумма расходов за период; 6 - Сумма платежей за период; 7 - Наличие промокода; 8 - Участие в реферальной программе; 9 - Состоит в группе клиентов; 10 - Заплачено денег в течение года; 11 - Дата заказа/активации первой услуги; 12 - Наличие рекуррентного платежа/автопродления; 50 - Дата заказа/активации услуги; 51 - Текущий срок действия услуги; 61 - Использование сертификатов на пополнение баланса; 0 - Без условий; 1 - Количество оплаченных услуг; 2 - Дата регистрации; 3 - Количество услуг; 4 - Покупка услуги/товара; 5 - Сумма расходов за период; 6 - Сумма платежей за период; 7 - Наличие промокода; 8 - Участие в реферальной программе; 9 - Состоит в группе клиентов; 10 - Заплачено денег в течение года; 11 - Дата заказа/активации первой услуги; 12 - Наличие рекуррентного платежа/автопродления; 50 - Дата заказа/активации услуги; 51 - Текущий срок действия услуги; 61 - Использование сертификатов на пополнение баланса",
            "example": ""
          },
          "coupon_promotion": {
            "type": "string",
            "description": "Промо-акция, сертификат из которой должен быть использован для проверки условия",
            "example": ""
          },
          "coupon": {
            "type": "string",
            "enum": [
              "promotion"
            ],
            "description": "Сертификат, по которому будет производиться проверка условия; promotion - Промо-акция",
            "example": ""
          },
          "comparison": {
            "type": "string",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Количество услуг выбранного типа или тарифного плана",
            "example": "0"
          },
          "period": {
            "type": "string",
            "enum": [
              "specification",
              "specification_1",
              "specification_2"
            ],
            "description": "Период заказа; specification - Способ указания периода; specification_1 - Интервал времени; specification_2 - Диапазон дат",
            "example": ""
          },
          "period_specification": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Способ, которым указывается период по условию; 1 - Интервал времени; 2 - Диапазон дат",
            "example": ""
          },
          "periodtype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Тип указываемого периода; 0 - Все время; 1 - День; 2 - Месяц; 3 - Год",
            "example": ""
          },
          "periodlength": {
            "type": "string",
            "description": "Длина указываемого периода",
            "example": "1"
          },
          "selectedproject": {
            "type": "string",
            "description": "Провайдер",
            "example": ""
          },
          "summa": {
            "type": "string",
            "description": "Сумма в выбранной валюте",
            "example": "1.00"
          },
          "currency": {
            "type": "string",
            "description": "Валюта расчетов",
            "example": ""
          },
          "fixedcurrencyrate": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Для подсчета суммы расходов будет использован не текущий курс, а фиксированный",
            "example": "off"
          },
          "currencyrate": {
            "type": "string",
            "description": "Курс выбранной валюты",
            "example": "1.00"
          },
          "affiliate": {
            "type": "string",
            "description": "Клиенты, пришедшие по выбранной реферальной программе, будут участвовать в промо-акции",
            "example": ""
          },
          "account_group": {
            "type": "string",
            "description": "Для возможности воспользоваться промо акцией клиент должен состоять в выбранной группе",
            "example": ""
          },
          "fromdate": {
            "type": "string",
            "description": "Дата начала периода",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Дата окончания периода",
            "example": "text"
          },
          "group": {
            "type": "string",
            "enum": [
              "none",
              "new"
            ],
            "description": "Вы можете группировать условия. Условия в группе будут объединены оператором ИЛИ. Группы между собой связаны по оператору И. Пример: есть условия A, B  и С объединенные в одну группу и есть условия D и E объединенные в другую группу. Итоговое выражение тогда будет - (A ИЛИ B ИЛИ С) И (D ИЛИ E); none - Без группы; new - Создать новую группу условий",
            "example": ""
          },
          "groupname": {
            "type": "string",
            "description": "Введите имя группы условий",
            "example": "text"
          }
        }
      },
      "PromotionCondition": {
        "type": "object",
        "properties": {
          "ctype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "50",
              "51",
              "61",
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "50",
              "51",
              "61"
            ],
            "description": "Условие, по которому будет проверяться применимость акции для клиента; 0 - Без условий; 1 - Количество оплаченных услуг; 2 - Дата регистрации; 3 - Количество услуг; 4 - Покупка услуги/товара; 5 - Сумма расходов за период; 6 - Сумма платежей за период; 7 - Наличие промокода; 8 - Участие в реферальной программе; 9 - Состоит в группе клиентов; 10 - Заплачено денег в течение года; 11 - Дата заказа/активации первой услуги; 12 - Наличие рекуррентного платежа/автопродления; 50 - Дата заказа/активации услуги; 51 - Текущий срок действия услуги; 61 - Использование сертификатов на пополнение баланса; 0 - Без условий; 1 - Количество оплаченных услуг; 2 - Дата регистрации; 3 - Количество услуг; 4 - Покупка услуги/товара; 5 - Сумма расходов за период; 6 - Сумма платежей за период; 7 - Наличие промокода; 8 - Участие в реферальной программе; 9 - Состоит в группе клиентов; 10 - Заплачено денег в течение года; 11 - Дата заказа/активации первой услуги; 12 - Наличие рекуррентного платежа/автопродления; 50 - Дата заказа/активации услуги; 51 - Текущий срок действия услуги; 61 - Использование сертификатов на пополнение баланса",
            "example": ""
          },
          "coupon_promotion": {
            "type": "string",
            "description": "Промо-акция, сертификат из которой должен быть использован для проверки условия",
            "example": ""
          },
          "coupon": {
            "type": "string",
            "enum": [
              "promotion"
            ],
            "description": "Сертификат, по которому будет производиться проверка условия; promotion - Промо-акция",
            "example": ""
          },
          "comparison": {
            "type": "string",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Количество услуг выбранного типа или тарифного плана",
            "example": "0"
          },
          "period": {
            "type": "string",
            "enum": [
              "specification",
              "specification_1",
              "specification_2"
            ],
            "description": "Период заказа; specification - Способ указания периода; specification_1 - Интервал времени; specification_2 - Диапазон дат",
            "example": ""
          },
          "period_specification": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Способ, которым указывается период по условию; 1 - Интервал времени; 2 - Диапазон дат",
            "example": ""
          },
          "periodtype": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ],
            "description": "Тип указываемого периода; 0 - Все время; 1 - День; 2 - Месяц; 3 - Год",
            "example": ""
          },
          "periodlength": {
            "type": "string",
            "description": "Длина указываемого периода",
            "example": "1"
          },
          "selectedproject": {
            "type": "string",
            "description": "Провайдер",
            "example": ""
          },
          "summa": {
            "type": "string",
            "description": "Сумма в выбранной валюте",
            "example": "1.00"
          },
          "currency": {
            "type": "string",
            "description": "Валюта расчетов",
            "example": ""
          },
          "fixedcurrencyrate": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Для подсчета суммы расходов будет использован не текущий курс, а фиксированный",
            "example": "off"
          },
          "currencyrate": {
            "type": "string",
            "description": "Курс выбранной валюты",
            "example": "1.00"
          },
          "affiliate": {
            "type": "string",
            "description": "Клиенты, пришедшие по выбранной реферальной программе, будут участвовать в промо-акции",
            "example": ""
          },
          "account_group": {
            "type": "string",
            "description": "Для возможности воспользоваться промо акцией клиент должен состоять в выбранной группе",
            "example": ""
          },
          "fromdate": {
            "type": "string",
            "description": "Дата начала периода",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Дата окончания периода",
            "example": "text"
          },
          "group": {
            "type": "string",
            "enum": [
              "none",
              "new"
            ],
            "description": "Вы можете группировать условия. Условия в группе будут объединены оператором ИЛИ. Группы между собой связаны по оператору И. Пример: есть условия A, B  и С объединенные в одну группу и есть условия D и E объединенные в другую группу. Итоговое выражение тогда будет - (A ИЛИ B ИЛИ С) И (D ИЛИ E); none - Без группы; new - Создать новую группу условий",
            "example": ""
          },
          "groupname": {
            "type": "string",
            "description": "Введите имя группы условий",
            "example": "text"
          }
        }
      },
      "PromotionClone": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "fromdate": {
            "type": "string",
            "description": "Начало периода действия промо-акции",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Окончание периода действия промо-акции (включительно указанную дату)",
            "example": "text"
          },
          "type": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "0",
              "1",
              "2"
            ],
            "description": "Тип промо-акции; 0 - Предоставление скидок на услуги; 1 - Сертификат на пополнение баланса; 2 - Кешбэк на платежи; 0 - Предоставление скидок на услуги; 1 - Сертификат на пополнение баланса; 2 - Кешбэк на платежи",
            "example": ""
          },
          "account_uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз клиент может воспользоваться промо-акцией",
            "example": "1"
          },
          "numtmpl_payment": {
            "type": "string",
            "description": "Шаблон формирования номера счета, можно использовать макрос {id} - код платежа. Если поле не заполнено, будет использован шаблон: {id}, так же если в шаблоне отсутствует макрос {id}, то он будет автоматически добавлен к шаблону при создании платежа",
            "example": ""
          },
          "amount_percent": {
            "type": "string",
            "description": "Настройка процента от суммы ранее зачисленного платежа",
            "example": "1.00"
          },
          "amount_max": {
            "type": "string",
            "description": "Максимальная сумма кешбэка",
            "example": "1.00"
          },
          "paymethod": {
            "type": "string",
            "enum": [
              "name",
              "description",
              "nullmsg",
              "name",
              "description",
              "nullmsg"
            ],
            "description": "Методы оплаты, по которым будет начисляться кешбэк; name - Дополнение к наименованию метода оплаты; description - Дополнение к описанию метода оплаты; nullmsg - -- все --; name - Дополнение к наименованию метода оплаты; description - Дополнение к описанию метода оплаты; nullmsg - -- все --",
            "example": ""
          }
        }
      },
      "PromotionHistoryElem": {
        "type": "object",
        "properties": {
          "changedate": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "PromotionArchivedElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "type": {
            "type": "string",
            "description": "Тип промо-акции"
          },
          "fromdate": {
            "type": "string",
            "description": "Дата начала действия промо-акции"
          },
          "todate": {
            "type": "string",
            "description": "Дата окончания промо-акции"
          },
          "status": {
            "type": "string",
            "description": "Текущее состояние промо-акции"
          },
          "project_name": {
            "type": "string",
            "description": "Провайдер, для которого создана промо-акция"
          }
        }
      },
      "PromotionPromocodeElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "code": {
            "type": "string",
            "description": "Буквенно числовая последовательность промокода. Может быть передана клиенту для использования"
          },
          "uselimit": {
            "type": "string",
            "description": "Лимит на импользование промокода"
          },
          "use_count": {
            "type": "string",
            "description": "Количество использований промокода"
          },
          "status": {
            "type": "string",
            "description": "Статус промокода/сертификата"
          }
        }
      },
      "PromotionPromocodeNew": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Шаблон промокода. При генерации значени символы \"?\" (знак вопроса) будут заменены случайными значениями.",
            "example": "text"
          },
          "count": {
            "type": "string",
            "description": "При генерации нескольких промокодов укажите необходимое количество",
            "example": "1"
          },
          "uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз можно использовать одинаковый промокод",
            "example": "1"
          },
          "account_uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз клиент может использовать одинаковый промокод",
            "example": "1"
          },
          "onlydigit": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При генерации случайных значений будут использоваться только цифры",
            "example": "off"
          },
          "active_time_type": {
            "type": "string",
            "description": "Период, в который промокод может быть активирован",
            "example": ""
          },
          "fromdate": {
            "type": "string",
            "description": "Дата, с которой начинается период действие промокода",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Дата, по которую действует промокод",
            "example": "text"
          },
          "expiretype": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Скидка по промокоду будет действовать в течение указанного периода; 0 - На период заказа услуги; 1 - На указанный период",
            "example": ""
          },
          "periodtype": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "description": "Тип указываемого периода; 1 - День; 2 - Месяц; 3 - Год",
            "example": ""
          },
          "periodlength": {
            "type": "string",
            "description": "Длина указываемого периода",
            "example": "1"
          }
        }
      },
      "PromotionPromocode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Шаблон промокода. При генерации значени символы \"?\" (знак вопроса) будут заменены случайными значениями.",
            "example": "text"
          },
          "uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз можно использовать одинаковый промокод",
            "example": "1"
          },
          "account_uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз клиент может использовать одинаковый промокод",
            "example": "1"
          },
          "active_time_type": {
            "type": "string",
            "description": "Период, в который промокод может быть активирован",
            "example": ""
          },
          "fromdate": {
            "type": "string",
            "description": "Дата, с которой начинается период действие промокода",
            "example": "text"
          },
          "todate": {
            "type": "string",
            "description": "Дата, по которую действует промокод",
            "example": "text"
          },
          "expiretype": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Скидка по промокоду будет действовать в течение указанного периода; 0 - На период заказа услуги; 1 - На указанный период",
            "example": ""
          },
          "periodtype": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "description": "Тип указываемого периода; 1 - День; 2 - Месяц; 3 - Год",
            "example": ""
          },
          "periodlength": {
            "type": "string",
            "description": "Длина указываемого периода",
            "example": "1"
          }
        }
      },
      "PromocodeUsageElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Код услуги"
          },
          "account_id": {
            "type": "string"
          },
          "account": {
            "type": "string",
            "description": "Клиент, воспользовавшийся промокодом"
          },
          "status": {
            "type": "string"
          },
          "expense": {
            "type": "string",
            "description": "Сумма расходов по услуге"
          }
        }
      },
      "PromotionCouponElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "code": {
            "type": "string",
            "description": "Буквенно числовая последовательность сертификата. Может быть передана клиенту для использования"
          },
          "amount": {
            "type": "string",
            "description": "Сумма пополнения лицевого счета клиента"
          },
          "uselimit": {
            "type": "string",
            "description": "Лимит на использование сертификата"
          },
          "use_count": {
            "type": "string",
            "description": "Количество использований сертификата"
          },
          "payment_expire": {
            "type": "string",
            "description": "Срок действия платежа, зачисленного по сертификату"
          },
          "status": {
            "type": "string",
            "description": "Статус промокода/сертификата"
          }
        }
      },
      "PromotionCouponNew": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Буквенно числовая последовательность сертификата. Может быть передана клиенту для использования",
            "example": "text"
          },
          "onlydigit": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "При генерации случайных значений будут использоваться только цифры",
            "example": "off"
          },
          "count": {
            "type": "string",
            "description": "При генерации нескольких промокодов укажите необходимое количество",
            "example": "1"
          },
          "amount_type": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Сумма сертификата может быть фиксированной или рассчитываться по параметрам; 1 - фиксированная; 2 - по сумме последнего платежа",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Сумма пополнения лицевого счета клиента",
            "example": "1.00"
          },
          "amount_percent": {
            "type": "string",
            "description": "Настройка процента от суммы ранее зачисленного платежа",
            "example": "1.00"
          },
          "amount_max": {
            "type": "string",
            "description": "Максимальная сумма сертификата при расчете по сумме последнего платежа",
            "example": "1.00"
          },
          "uselimit": {
            "type": "string",
            "description": "Лимит на использование сертификата",
            "example": "1"
          },
          "account_uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз клиент может использовать одинаковый промокод",
            "example": "1"
          },
          "expire_period_specification": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Настройка срока, в течение которого можно использовать средства зачисленные по сертификату; 0 - неограничен; 1 - в течение указанного периода времени; 2 - до указанной даты",
            "example": ""
          },
          "expire_date": {
            "type": "string",
            "description": "Дата (включительно), до которой можно использовать средства зачисленные по сертификату",
            "example": "text"
          },
          "expire_period": {
            "type": "string",
            "description": "Срок, в течение которого можно использовать средства зачисленные по сертификату",
            "example": "1"
          }
        }
      },
      "PromotionCoupon": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Буквенно числовая последовательность сертификата. Может быть передана клиенту для использования",
            "example": "text"
          },
          "amount_type": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Сумма сертификата может быть фиксированной или рассчитываться по параметрам; 1 - фиксированная; 2 - по сумме последнего платежа",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Сумма пополнения лицевого счета клиента",
            "example": "1.00"
          },
          "amount_percent": {
            "type": "string",
            "description": "Настройка процента от суммы ранее зачисленного платежа",
            "example": "1.00"
          },
          "amount_max": {
            "type": "string",
            "description": "Максимальная сумма сертификата при расчете по сумме последнего платежа",
            "example": "1.00"
          },
          "uselimit": {
            "type": "string",
            "description": "Лимит на использование сертификата",
            "example": "1"
          },
          "account_uselimit": {
            "type": "string",
            "description": "Укажите, сколько раз клиент может использовать одинаковый промокод",
            "example": "1"
          },
          "expire_period_specification": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ],
            "description": "Настройка срока, в течение которого можно использовать средства зачисленные по сертификату; 0 - неограничен; 1 - в течение указанного периода времени; 2 - до указанной даты",
            "example": ""
          },
          "expire_date": {
            "type": "string",
            "description": "Дата (включительно), до которой можно использовать средства зачисленные по сертификату",
            "example": "text"
          },
          "expire_period": {
            "type": "string",
            "description": "Срок, в течение которого можно использовать средства зачисленные по сертификату",
            "example": "1"
          }
        }
      },
      "PromotionCouponUsageElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "payment_number": {
            "type": "string",
            "description": "Номер платежа, созданного по сертификату"
          },
          "usage_date": {
            "type": "string",
            "description": "Дата и время использования сертификата"
          },
          "account_name": {
            "type": "string",
            "description": "Клиент, использовавший сертификат"
          },
          "payment_amount": {
            "type": "string",
            "description": "Сумма платежа, созданного по сертификату"
          },
          "status": {
            "type": "string",
            "description": "Статус платежа, созданного по сертификату"
          }
        }
      },
      "PromotionDiscountHistoryElem": {
        "type": "object",
        "properties": {}
      },
      "PromotionConditionHistoryElem": {
        "type": "object",
        "properties": {}
      },
      "PromotionPromocodeHistoryElem": {
        "type": "object",
        "properties": {}
      },
      "PromotionCouponHistoryElem": {
        "type": "object",
        "properties": {}
      },
      "PromotionPromocodeUsageElem": {
        "type": "object",
        "properties": {
          "promocode": {
            "type": "string",
            "description": "Использованный промокод"
          },
          "id": {
            "type": "string",
            "description": "Код услуги"
          },
          "account_id": {
            "type": "string",
            "description": "Код клиента"
          },
          "account": {
            "type": "string",
            "description": "Клиент воспользовавшийся промокодом"
          },
          "status": {
            "type": "string"
          },
          "expense": {
            "type": "string",
            "description": "Сумма расходов по услуге"
          }
        }
      },
      "CouponUsageElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "code": {
            "type": "string",
            "description": "Буквенно числовая последовательность сертификата"
          },
          "payment_number": {
            "type": "string",
            "description": "Номер платежа, созданного по сертификату"
          },
          "usage_date": {
            "type": "string",
            "description": "Дата и время использования сертификата"
          },
          "account_id": {
            "type": "string",
            "description": "Код клиента"
          },
          "account_name": {
            "type": "string",
            "description": "Клиент, использовавший сертификат"
          },
          "payment_amount": {
            "type": "string",
            "description": "Сумма платежа, созданного по сертификату"
          },
          "status": {
            "type": "string",
            "description": "Статус платежа, созданного по сертификату"
          }
        }
      },
      "CashbackUsageElem": {
        "type": "object",
        "properties": {
          "usage_date_tz": {
            "type": "string",
            "description": "Дата регистрации кешбэка"
          },
          "account_id": {
            "type": "string",
            "description": "Код клиента"
          },
          "account_name": {
            "type": "string",
            "description": "Наименование клиента"
          },
          "payment_source_number": {
            "type": "string",
            "description": "Номер исходного платежа"
          },
          "payment_source_amount": {
            "type": "string",
            "description": "Сумма исходного платежа в валюте лицевого счета"
          },
          "payment_source_status": {
            "type": "string",
            "description": "Статус исходного платежа"
          },
          "payment_cashback_number": {
            "type": "string",
            "description": "Номер платежа, которым был зачислен кешбэк"
          },
          "payment_cashback_amount": {
            "type": "string",
            "description": "Сумма платежа, которым был зачислен кешбэк"
          },
          "payment_cashback_status": {
            "type": "string",
            "description": "Статус платежа, которым был зачислен кешбэк"
          }
        }
      },
      "AdditionElem": {
        "type": "object",
        "properties": {
          "item": {
            "type": "string",
            "description": "Лицензия, для которой приобретен модуль"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Addition": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "BackupserviceElem": {
        "type": "object",
        "properties": {
          "accountname": {
            "type": "string",
            "description": "Наименование учетной записи, на стороне провайдера"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Backupservice": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "CertificateElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "CN": {
            "type": "string",
            "description": "Имя домена, удостоверяемого сертификатом"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "project": {
            "type": "string"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "subscriptiondate": {
            "type": "string",
            "description": "Срок действия сертификата при заказе на период больше года. Необходимо переустанавливать сертификат после каждой замены сертификата в рамках подписки"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Certificate": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": "text"
          },
          "subscriptiondate": {
            "type": "string",
            "description": "Срок действия сертификата при заказе на период больше года. Необходимо переустанавливать сертификат после каждой замены сертификата в рамках подписки",
            "example": ""
          },
          "service_status": {
            "type": "string",
            "example": ""
          },
          "custom_order_id": {
            "type": "string",
            "description": "Идентификатор сертификата в центре выдачи",
            "example": ""
          },
          "approver_count": {
            "type": "string",
            "example": ""
          },
          "noexpense": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": "off"
          },
          "crt_start_date": {
            "type": "string",
            "description": "Дата начала срока действия сертификата",
            "example": ""
          },
          "crt_end_date": {
            "type": "string",
            "description": "Дата окончания срока действия сертификата",
            "example": ""
          },
          "CN": {
            "type": "string",
            "description": "Если сертификат защищает 1 домен, введите www.example.com.\nЕсли он защищает поддомены, укажите как *.example.com\nЕсли вы покупаете мультидоменный сертификат, введите 1 домен вида www.example.com. Дополнительные домены вы введете на следующем шаге.",
            "example": "text"
          },
          "field_country": {
            "type": "string",
            "description": "Выберите страну из списка",
            "example": ""
          },
          "ST": {
            "type": "string",
            "description": "Укажите регион - область, край, республика, город федерального значения и т.д. Допускается использование только символов латиницы",
            "example": "text"
          },
          "L": {
            "type": "string",
            "description": "Укажите город или местность, которая будет отображена в сертификате. Допускается использование только символов латиницы",
            "example": "text"
          },
          "O": {
            "type": "string",
            "description": "Укажите полное название организации так, как оно указано в Свидетельстве о регистрации юридического лица либо ФИО, если сертификат будет выписан на физическое лицо. Для сертификатов с расширенной проверкой (EV) также необходимо указать юридическую форму. Допускается использование только символов латиницы",
            "example": "text"
          },
          "OU": {
            "type": "string",
            "description": "Укажите подразделение организации, если необходимо. Допускается использование только символов латиницы",
            "example": ""
          },
          "emailAddress": {
            "type": "string",
            "description": "Укажите контактный Email, если вы хотите что бы он отображался в свойствах сертификата",
            "example": "example@domain.com"
          }
        }
      },
      "CertificateReissue": {
        "type": "object",
        "properties": {
          "reissue_warn": {
            "type": "string",
            "description": "Предупреждение:",
            "example": ""
          },
          "reissue_desc": {
            "type": "string",
            "description": "Перевыпуск сертификата может потребоваться в одном из двух случаев:<br/> - Утерян секретный ключ сертификата и необходима генерация нового<br/> - Необходимо добавить дополнительные доменные имена к сертификату с поддержкой нескольких доменов",
            "example": ""
          },
          "crt_type": {
            "type": "string",
            "description": "В зависимости от выбранного способа можно либо указать уже имеющийся запрос на создание сертификата, либо перевыпустить сертификат со старыми значениями указанных ниже полей. Секретный ключ при этом можно будет узнать в свойствах сертификата",
            "example": ""
          },
          "altname_input": {
            "type": "string",
            "description": "Значения доменов/поддоменов вводятся через пробел:\n        <br/>- для мультидоменного сертификата укажите все домены, которые будет защищать сертификат (если требуется защита с WWW и без WWW - укажите оба варианта);\n        <br/>- для немультидоменного сертификата укажите все поддомены основного домена, которые будет защищать сертификат.\n        <br/>Поддомены основного домена WWW, OWA, AUTODISCOVER и MAIL могут предоставляться бесплатно в зависимости от центра сертификации.",
            "example": ""
          },
          "altname_wildcard_input": {
            "type": "string",
            "description": "Перечислите через пробел все wildcard-домены, которые будет защищать мультидоменный сертификат. Если вам нужно защитить домен с WWW и без WWW, обязательно укажите 2 домена: с WWW и без WWW.",
            "example": ""
          },
          "CN": {
            "type": "string",
            "description": "Если сертификат защищает 1 домен, введите www.example.com.\nЕсли он защищает поддомены, укажите как *.example.com\nЕсли вы покупаете мультидоменный сертификат, введите 1 домен вида www.example.com. Дополнительные домены вы введете на следующем шаге.",
            "example": "text"
          },
          "field_country": {
            "type": "string",
            "description": "Выберите страну из списка",
            "example": ""
          },
          "ST": {
            "type": "string",
            "description": "Укажите регион - область, край, республика, город федерального значения и т.д. Допускается использование только символов латиницы",
            "example": "text"
          },
          "L": {
            "type": "string",
            "description": "Укажите город или местность, которая будет отображена в сертификате. Допускается использование только символов латиницы",
            "example": "text"
          },
          "O": {
            "type": "string",
            "description": "Укажите полное название организации так, как оно указано в Свидетельстве о регистрации юридического лица либо ФИО, если сертификат будет выписан на физическое лицо. Для сертификатов с расширенной проверкой (EV) также необходимо указать юридическую форму. Допускается использование только символов латиницы",
            "example": "text"
          },
          "OU": {
            "type": "string",
            "description": "Укажите подразделение организации, если необходимо. Допускается использование только символов латиницы",
            "example": ""
          },
          "emailAddress": {
            "type": "string",
            "description": "Укажите контактный Email, если вы хотите что бы он отображался в свойствах сертификата",
            "example": "example@domain.com"
          },
          "delete_private_key": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Из соображений безопасности ключ можно не сохранять в биллинговой системе. При этом в случае утери секретного ключа потребуется перевыпуск сертификата",
            "example": "off"
          },
          "hidden_field": {
            "type": "string",
            "example": ""
          },
          "approver_method": {
            "type": "string",
            "enum": [
              "auth_file",
              "auth_cname",
              "auth_dnstxt",
              "auth_email",
              "auth_file",
              "auth_cname",
              "auth_dnstxt",
              "auth_email"
            ],
            "description": "Метод проверки сертификата; auth_file - По хэш-файлу; auth_cname - По записи CNAME DNS; auth_dnstxt - По записи DNS TXT; auth_email - По Email-адресу; auth_file - По хэш-файлу; auth_cname - По записи CNAME DNS; auth_dnstxt - По записи DNS TXT; auth_email - По Email-адресу",
            "example": ""
          },
          "auth_file_protocol": {
            "type": "string",
            "description": "Установите галочку если Ваш сайт доступен по протоколу HTTPS или в противном случае оставте это поле пустым",
            "example": ""
          }
        }
      },
      "CertificateDomainValidationRedirect": {
        "type": "object",
        "properties": {}
      },
      "CertificateProlong": {
        "type": "object",
        "properties": {
          "approver_method": {
            "type": "string",
            "enum": [
              "auth_file",
              "auth_cname",
              "auth_dnstxt",
              "auth_email",
              "auth_file",
              "auth_cname",
              "auth_dnstxt",
              "auth_email"
            ],
            "description": "Метод проверки сертификата; auth_file - По хэш-файлу; auth_cname - По записи CNAME DNS; auth_dnstxt - По записи DNS TXT; auth_email - По Email-адресу; auth_file - По хэш-файлу; auth_cname - По записи CNAME DNS; auth_dnstxt - По записи DNS TXT; auth_email - По Email-адресу",
            "example": ""
          },
          "auth_file_protocol": {
            "type": "string",
            "description": "Установите галочку если Ваш сайт доступен по протоколу HTTPS или в противном случае оставте это поле пустым",
            "example": ""
          }
        }
      },
      "CertificateDnsVerify": {
        "type": "object",
        "properties": {
          "domains": {
            "type": "string",
            "description": "Выберите домен, для которого была добавлена DNS запись",
            "example": ""
          }
        }
      },
      "CertificateDomainValidationEmail": {
        "type": "object",
        "properties": {}
      },
      "CertificateFile": {
        "type": "object",
        "properties": {
          "info": {
            "type": "string",
            "description": "Укажите новые данные и нажмите \"ОК\". Данные будут проверены и сохранены в свойствах услуги.<br/>В случае указания сертификата, отличного от уже указанного для услуги, клиенту будет отправлено письмо с информацией о выпуске сертификата",
            "example": ""
          },
          "CN": {
            "type": "string",
            "description": "Если сертификат защищает 1 домен, введите www.example.com.\nЕсли он защищает поддомены, укажите как *.example.com\nЕсли вы покупаете мультидоменный сертификат, введите 1 домен вида www.example.com. Дополнительные домены вы введете на следующем шаге.",
            "example": "text"
          },
          "field_country": {
            "type": "string",
            "description": "Выберите страну из списка",
            "example": ""
          },
          "ST": {
            "type": "string",
            "description": "Укажите регион - область, край, республика, город федерального значения и т.д. Допускается использование только символов латиницы",
            "example": "text"
          },
          "L": {
            "type": "string",
            "description": "Укажите город или местность, которая будет отображена в сертификате. Допускается использование только символов латиницы",
            "example": "text"
          },
          "O": {
            "type": "string",
            "description": "Укажите полное название организации так, как оно указано в Свидетельстве о регистрации юридического лица либо ФИО, если сертификат будет выписан на физическое лицо. Для сертификатов с расширенной проверкой (EV) также необходимо указать юридическую форму. Допускается использование только символов латиницы",
            "example": "text"
          },
          "OU": {
            "type": "string",
            "description": "Укажите подразделение организации, если необходимо. Допускается использование только символов латиницы",
            "example": ""
          },
          "emailAddress": {
            "type": "string",
            "description": "Укажите контактный Email, если вы хотите что бы он отображался в свойствах сертификата",
            "example": "example@domain.com"
          },
          "crt_start_date": {
            "type": "string",
            "description": "Дата начала срока действия сертификата",
            "example": ""
          },
          "crt_end_date": {
            "type": "string",
            "description": "Дата окончания срока действия сертификата",
            "example": ""
          }
        }
      },
      "ColocationElem": {
        "type": "object",
        "properties": {
          "panelid": {
            "type": "string",
            "description": "Идентификатор в панели управления"
          },
          "racknumber": {
            "type": "string",
            "description": "Номер стойки, в которую установлен сервер"
          },
          "label": {
            "type": "string",
            "description": "Наклейка на сервер"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Colocation": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "ColocationPortElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "linked_port": {
            "type": "string",
            "description": "Сетевое подключение другой услуги размещения оборудования клиента, связанное с текущим подключением"
          },
          "vlan": {
            "type": "string",
            "description": "Наименование виртуальной сети подключения"
          }
        }
      },
      "ColocationPortNew": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "description": "Тип добавляемого сетевого подключения; 0 - Подключение к оборудованию провайдера; 1 - Подключение к оборудованию клиента",
            "example": ""
          },
          "linked_port": {
            "type": "string",
            "description": "Подключение от другой услуги размещения оборудования клиента",
            "example": ""
          },
          "vlan": {
            "type": "string",
            "description": "Наименование виртуальной сети подключения",
            "example": ""
          }
        }
      },
      "ColocationPort": {
        "type": "object",
        "properties": {
          "linked_port": {
            "type": "string",
            "description": "Подключение от другой услуги размещения оборудования клиента",
            "example": ""
          },
          "vlan": {
            "type": "string",
            "description": "Наименование виртуальной сети подключения",
            "example": ""
          }
        }
      },
      "ColocationHardwareElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "hardware": {
            "type": "string",
            "description": "Описание оборудования"
          },
          "receivingdate": {
            "type": "string",
            "description": "Дата приемки оборудования на площадку провайдера"
          },
          "returndate": {
            "type": "string",
            "description": "Дата возврата оборудования клиенту"
          },
          "status": {
            "type": "string",
            "description": "Статус оборудования клиента"
          }
        }
      },
      "ColocationHardwareNew": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Размещение оборудования (номер стойки и номер юнита размещения оборудования)",
            "example": "text"
          },
          "receiveemployee": {
            "type": "string",
            "description": "ФИО сотрудника принявшего оборудование",
            "example": "text"
          },
          "receiveuser": {
            "type": "string",
            "description": "ФИО представителя клиента передавшего оборудование",
            "example": "text"
          },
          "receivingdate": {
            "type": "string",
            "description": "Дата приемки оборудования на площадку провайдера",
            "example": "text"
          },
          "returnemployee": {
            "type": "string",
            "description": "ФИО сотрудника, передавшего оборудование клиенту",
            "example": "text"
          },
          "returnuser": {
            "type": "string",
            "description": "ФИО представителя клиента принявшего оборудование",
            "example": "text"
          },
          "returndate": {
            "type": "string",
            "description": "Дата возврата оборудования клиенту",
            "example": "text"
          }
        }
      },
      "ColocationHardware": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Размещение оборудования (номер стойки и номер юнита размещения оборудования)",
            "example": "text"
          },
          "receiveemployee": {
            "type": "string",
            "description": "ФИО сотрудника принявшего оборудование",
            "example": "text"
          },
          "receiveuser": {
            "type": "string",
            "description": "ФИО представителя клиента передавшего оборудование",
            "example": "text"
          },
          "receivingdate": {
            "type": "string",
            "description": "Дата приемки оборудования на площадку провайдера",
            "example": "text"
          },
          "returnemployee": {
            "type": "string",
            "description": "ФИО сотрудника, передавшего оборудование клиенту",
            "example": "text"
          },
          "returnuser": {
            "type": "string",
            "description": "ФИО представителя клиента принявшего оборудование",
            "example": "text"
          },
          "returndate": {
            "type": "string",
            "description": "Дата возврата оборудования клиенту",
            "example": "text"
          }
        }
      },
      "ColocationHardwareReturn": {
        "type": "object",
        "properties": {
          "returnemployee": {
            "type": "string",
            "description": "ФИО сотрудника, передающего оборудование клиенту",
            "example": "text"
          },
          "returnuser": {
            "type": "string",
            "description": "ФИО представителя клиента принимающего оборудование",
            "example": "text"
          },
          "returndate": {
            "type": "string",
            "description": "Дата возврата оборудования клиенту",
            "example": "text"
          }
        }
      },
      "DedicElem": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Доменное имя услуги"
          },
          "ip": {
            "type": "string",
            "description": "IP-aдреса"
          },
          "ostempl": {
            "type": "string",
            "description": "Наименование шаблона установленной операционной системы"
          },
          "panelid": {
            "type": "string",
            "description": "Идентификатор в панели управления"
          },
          "racknumber": {
            "type": "string",
            "description": "Номер стойки, в которую установлен сервер"
          },
          "label": {
            "type": "string",
            "description": "Наклейка на сервер"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Dedic": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "DnshostElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Dnshost": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "DomainElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "domain": {
            "type": "string",
            "description": "Имя домена вместе с зоной верхнего уровня"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "project": {
            "type": "string"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "DomainWhois": {
        "type": "object",
        "properties": {}
      },
      "DomainNs": {
        "type": "object",
        "properties": {
          "ns0": {
            "type": "string",
            "description": "Формат записи \"ns.example.com\" или \"ns.example.com/1.1.1.1\" или \"ns.example.com/1.1.1.1,2.2.2.2\"",
            "example": ""
          },
          "ns1": {
            "type": "string",
            "description": "Формат записи \"ns.example.com\" или \"ns.example.com/1.1.1.1\" или \"ns.example.com/1.1.1.1,2.2.2.2\"",
            "example": ""
          },
          "ns2": {
            "type": "string",
            "description": "Формат записи \"ns.example.com\" или \"ns.example.com/1.1.1.1\" или \"ns.example.com/1.1.1.1,2.2.2.2\"",
            "example": ""
          },
          "ns3": {
            "type": "string",
            "description": "Формат записи \"ns.example.com\" или \"ns.example.com/1.1.1.1\" или \"ns.example.com/1.1.1.1,2.2.2.2\"",
            "example": ""
          },
          "ns_additional": {
            "type": "string",
            "description": "Формат записи \"ns.example.com\" или \"ns.example.com/1.1.1.1\" или \"ns.example.com/1.1.1.1,2.2.2.2\". Каждый дополнительный сервер имен указывается с новой строки",
            "example": ""
          },
          "provider": {
            "type": "string",
            "example": ""
          }
        }
      },
      "DomainDocElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "profile": {
            "type": "string",
            "description": "Контакт, для которого загружен документ"
          },
          "doctype": {
            "type": "string",
            "description": "Тип загружаемого документа"
          },
          "name": {
            "type": "string",
            "description": "Имя файла"
          },
          "size": {
            "type": "string",
            "description": "Размер файла"
          },
          "props": {
            "type": "string",
            "description": "Состояние документа"
          }
        }
      },
      "DomainDocUpload": {
        "type": "object",
        "properties": {
          "doctype": {
            "type": "string",
            "description": "Тип загружаемого документа",
            "example": ""
          },
          "file": {
            "type": "string",
            "description": "Укажите файл, который вы хотите загрузить на сервер. Максимальный размер файла __size__ Мб. Доступные типы файлов: pdf, png, jpg, gif.",
            "example": ""
          }
        }
      },
      "DomainDoc": {
        "type": "object",
        "properties": {
          "doctype": {
            "type": "string",
            "description": "Тип загружаемого документа",
            "example": ""
          }
        }
      },
      "PaidsupportElem": {
        "type": "object",
        "properties": {
          "ticket_usage": {
            "type": "string",
            "description": "Использование обращений в поддержку в текущем месяце"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Paidsupport": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "PaidsupportProlong": {
        "type": "object",
        "properties": {}
      },
      "SoftElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Номер"
          },
          "licname": {
            "type": "string",
            "description": "Название лицензии"
          },
          "ip": {
            "type": "string",
            "description": "IP-aдреса"
          },
          "period": {
            "type": "string",
            "description": "Период"
          },
          "update_expiredate": {
            "type": "string",
            "description": "Срок получения обновлений"
          },
          "real_ipchange": {
            "type": "string",
            "description": "Дата последней смены или указания IP-адреса"
          },
          "real_keychange": {
            "type": "string",
            "description": "Дата генерации ключа лицензии"
          },
          "integrator": {
            "type": "string",
            "description": "Интегратор"
          },
          "customer": {
            "type": "string",
            "description": "Заказчик лицензии"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к лицензии"
          },
          "used_stat": {
            "type": "string",
            "description": "Статистика используемых ресурсов по лицензии в виде: <br><i>используется/доступно (доступно после продления)</i><br><br> Поле <i>доступно после продления</i> используется с политикой <i>Изменение при продлении</i> и будет отсутствовать, если клиент не изменял значения ресурсов"
          },
          "closed_loop": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Лицензия для закрытого контура\""
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Soft": {
        "type": "object",
        "properties": {
          "is_platform": {
            "type": "string",
            "example": ""
          },
          "is_closed_loop": {
            "type": "string",
            "example": ""
          },
          "remoteip": {
            "type": "string",
            "description": "В поле указывается IP-адрес, с которого будут приходить запросы на получение лицензии. В случае, если это значение совпадает с IP адресом, на который будет выдана лицензия, данное поле можно оставить пустым",
            "example": ""
          },
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "SoftProlongUpdate": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "description": "Период продления срока получения обновлений",
            "example": ""
          }
        }
      },
      "SoftexternalElem": {
        "type": "object",
        "properties": {
          "licname": {
            "type": "string",
            "description": "Предназначено для упрощения идентификации лицензии"
          },
          "ip": {
            "type": "string",
            "description": "IP-aдреса"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Softexternal": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "StorageElem": {
        "type": "object",
        "properties": {
          "addr": {
            "type": "string",
            "description": "IP-адрес FTP сервера"
          },
          "processingnode": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "quota": {
            "type": "string",
            "description": "Размер дискового пространства в мебибайтах, которое занимают файлы пользователя (занято/всего)"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Storage": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "VdcElem": {
        "type": "object",
        "properties": {
          "vdcname": {
            "type": "string",
            "description": "Наименование виртуального дата-центра"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость услуги в месяц с учетом всех доп. ресурсов и скидок"
          }
        }
      },
      "Vdc": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "VdcVmElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "is_backup": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Настроено резервное копирование виртуального сервера\""
          },
          "vm_group": {
            "type": "string",
            "description": "Группа виртуальных серверов"
          },
          "vmtempl": {
            "type": "string",
            "description": "Шаблон параметров виртуального сервера"
          },
          "ostempl_name": {
            "type": "string",
            "description": "Шаблон операционной системы установленный на виртуальном сервере"
          },
          "external_ip": {
            "type": "string",
            "description": "Выделенные IP-адреса подключенные к виртуальному серверу"
          },
          "internal_ip": {
            "type": "string",
            "description": "IP-адреса подключений виртуального сервера к сетям виртуального дата-центра"
          },
          "ncpu_m": {
            "type": "string",
            "description": "Количество процессоров виртуального сервера"
          },
          "availability_zone": {
            "type": "string",
            "description": "Группа гипервизоров"
          },
          "mem_m": {
            "type": "string",
            "description": "Объем оперативной памяти выделенный виртуальному серверу"
          },
          "disc_total_m": {
            "type": "string",
            "description": "Суммарный объем жестких дисков виртуального сервера"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcVmNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование виртуального сервера",
            "example": "text"
          },
          "vmtempl": {
            "type": "string",
            "description": "Набор параметров виртуального сервера",
            "example": ""
          },
          "source": {
            "type": "string",
            "enum": [
              "vdc_volume",
              "vdc_volume_snapshot",
              "ostempl",
              "vdc_vm_snapshote"
            ],
            "description": "Выберите базовый объект, на основе которого будет создан виртуальный сервер; vdc_volume - Свободный диск; vdc_volume_snapshot - Снимок диска; ostempl - Шаблон операционной системы; vdc_vm_snapshote - Снимок виртуального сервера",
            "example": ""
          },
          "ostempl": {
            "type": "string",
            "description": "Шаблон операционной системы, из которого будет создан виртуальный сервер",
            "example": ""
          },
          "vdc_volume": {
            "type": "string",
            "enum": [
              "snapshot"
            ],
            "description": "Можно выбрать только загрузочный диск не используемый ни одним из виртуальных серверов; snapshot - Снимок диска",
            "example": ""
          },
          "vdc_volume_snapshot": {
            "type": "string",
            "description": "На основе снимка будет создан новый диск, который будет подключен к виртуальному серверу",
            "example": ""
          },
          "vdc_vm_snapshot": {
            "type": "string",
            "description": "На основе снимка будет создан новый виртуальный сервер",
            "example": ""
          },
          "vdc_vm_group": {
            "type": "string",
            "description": "Группа для размещения виртуального сервера",
            "example": ""
          },
          "vm_group_name": {
            "type": "string",
            "description": "Имя группы виртуальных серверов",
            "example": "text"
          },
          "vdc_network": {
            "type": "string",
            "description": "Сеть виртуального дата-центра, к которой будет подключен создаваемый виртуальный сервер",
            "example": ""
          },
          "create_volume": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Для виртуального сервера будет создан диск указанного размера",
            "example": "off"
          },
          "disc": {
            "type": "string",
            "description": "Объем жесткого диска виртуального сервера",
            "example": "1"
          },
          "enable_cpuoverselling": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать оверселенные ядра вместо обычных",
            "example": "off"
          },
          "ncpu": {
            "type": "string",
            "description": "Количество процессоров виртуального сервера",
            "example": "1"
          },
          "ncpuoverselling": {
            "type": "string",
            "description": "Количество процессоров (оверселенных ядер) виртуального сервера",
            "example": "1"
          },
          "mem": {
            "type": "string",
            "description": "Объем оперативной памяти выделяемой виртуальному серверу",
            "example": "1"
          },
          "password": {
            "type": "string",
            "description": "Пароль доступа к виртуальному серверу",
            "example": ""
          },
          "confirm": {
            "type": "string",
            "example": ""
          }
        }
      },
      "VdcVm": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование виртуального сервера",
            "example": "text"
          },
          "vmtempl": {
            "type": "string",
            "description": "Набор параметров виртуального сервера",
            "example": ""
          },
          "enable_cpuoverselling": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать оверселенные ядра вместо обычных",
            "example": "off"
          },
          "ncpu": {
            "type": "string",
            "description": "Количество процессоров виртуального сервера",
            "example": "1"
          },
          "ncpuoverselling": {
            "type": "string",
            "description": "Количество процессоров (оверселенных ядер) виртуального сервера",
            "example": "1"
          },
          "mem": {
            "type": "string",
            "description": "Объем оперативной памяти выделяемой виртуальному серверу",
            "example": "1"
          },
          "password": {
            "type": "string",
            "description": "Пароль доступа к виртуальному серверу",
            "example": ""
          }
        }
      },
      "VdcVmNetworkElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "network_name": {
            "type": "string",
            "description": "Имя сети виртуального дата-центра, к которой подключен виртуальный сервер"
          },
          "primary_connection": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Основное подключение к сети\""
          },
          "ip_address": {
            "type": "string",
            "description": "IP-адрес подключения"
          },
          "network_subnet": {
            "type": "string",
            "description": "Подсеть, к которой подключен виртуальный сервер"
          },
          "mac": {
            "type": "string",
            "description": "MAC-адрес порта подключения"
          }
        }
      },
      "VdcVmNetworkNew": {
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "description": "Сеть виртуального дата-центра, к которой необходимо подключить виртуальный сервер",
            "example": ""
          }
        }
      },
      "VdcVmVolumeElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Имя диска"
          },
          "size": {
            "type": "string",
            "description": "Размер диска в гигабайтах"
          }
        }
      },
      "VdcVmVolumeNew": {
        "type": "object",
        "properties": {
          "volumelist": {
            "type": "string",
            "description": "Имя диска, присоединяемого к виртуальномуу серверу",
            "example": ""
          }
        }
      },
      "VdcVmIpElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "ip": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcVmIpNew": {
        "type": "object",
        "properties": {
          "iplist": {
            "type": "string",
            "description": "IP-адрес, присоединяемый к виртуальному серверу",
            "example": ""
          },
          "port": {
            "type": "string",
            "description": "Порт виртуального сервера, к которому будет подключен внешний IP-адрес",
            "example": ""
          }
        }
      },
      "VdcNetworkElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "vm_group": {
            "type": "string"
          },
          "router": {
            "type": "string",
            "description": "Маршрутизатор, к которому подключена сеть"
          },
          "gateway": {
            "type": "string",
            "description": "Шлюз, используемый в сети"
          },
          "mask": {
            "type": "string",
            "description": "Маска сети"
          },
          "network_subnets": {
            "type": "string",
            "description": "Адреса подсетей в составе сети"
          },
          "network_pools": {
            "type": "string",
            "description": "Пулы сетевых адресов, настроенные для сети"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcNetworkNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "vdc_vm_group": {
            "type": "string",
            "description": "Позволяет создать сеть доступную только внутри группы виртуальных серверов",
            "example": ""
          },
          "create_subnet": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает возможность создать подсеть вместе одновременно с сетью",
            "example": "off"
          },
          "subnet_name": {
            "type": "string",
            "description": "Наименование подсети",
            "example": "text"
          },
          "subnet_type": {
            "type": "string",
            "description": "Тип выбора сетевого адреса",
            "example": ""
          },
          "subnet_pool": {
            "type": "string",
            "description": "Выберите сетевой адрес из пула",
            "example": ""
          },
          "subnet_mask": {
            "type": "string",
            "description": "Маска подсети",
            "example": ""
          },
          "subnet_cidr": {
            "type": "string",
            "description": "Адрес подсети в виде 'адрес_сети/маска_сети'. Например 192.168.0.0/24",
            "example": "text"
          },
          "subnet_use_gateway": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать шлюз для данной подсети. Под шлюз будет занят один из адресов подсети",
            "example": "off"
          },
          "subnet_gateway": {
            "type": "string",
            "description": "Адрес шлюза используемый в подсети. Для назначения адреса автоматически, необходимо оставить пустым",
            "example": ""
          },
          "subnet_use_dhcp": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать DHCP для данной подсети. Под DHCP будет занят один из адресов подсети",
            "example": "off"
          },
          "gateway": {
            "type": "string",
            "description": "Шлюз",
            "example": "text"
          },
          "mask": {
            "type": "string",
            "description": "Маска сети",
            "example": "text"
          },
          "dns1": {
            "type": "string",
            "description": "Первичный DNS сервер, используемый в сети",
            "example": ""
          },
          "dns2": {
            "type": "string",
            "description": "Вторичный DNS сервер, используемый в сети",
            "example": ""
          },
          "dns_suffix": {
            "type": "string",
            "description": "DNS суффикс, используемый в сети",
            "example": ""
          },
          "subnet_vdc_router": {
            "type": "string",
            "example": ""
          },
          "vdc_router": {
            "type": "string",
            "description": "При создании сеть будет подключена к выбранному маршрутизатору виртуального дата-центра",
            "example": ""
          },
          "vdc_network": {
            "type": "string",
            "description": "Сеть будет подключена к выбранной сети виртуального дата-центра",
            "example": ""
          },
          "network_pools": {
            "type": "string",
            "example": ""
          },
          "network_dhcp": {
            "type": "string",
            "example": ""
          }
        }
      },
      "VdcNetwork": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "gateway": {
            "type": "string",
            "description": "Шлюз",
            "example": "text"
          },
          "mask": {
            "type": "string",
            "description": "Маска сети",
            "example": "text"
          },
          "dns1": {
            "type": "string",
            "description": "Первичный DNS сервер, используемый в сети",
            "example": ""
          },
          "dns2": {
            "type": "string",
            "description": "Вторичный DNS сервер, используемый в сети",
            "example": ""
          },
          "dns_suffix": {
            "type": "string",
            "description": "DNS суффикс, используемый в сети",
            "example": ""
          },
          "vdc_network": {
            "type": "string",
            "description": "Сеть будет подключена к выбранной сети виртуального дата-центра",
            "example": ""
          },
          "network_pools": {
            "type": "string",
            "example": ""
          },
          "network_dhcp": {
            "type": "string",
            "example": ""
          }
        }
      },
      "VdcNetworkSubnetElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "cidr": {
            "type": "string",
            "description": "Адрес подсети"
          },
          "gateway": {
            "type": "string",
            "description": "Адрес шлюза используемый в подсети"
          },
          "status": {
            "type": "string"
          },
          "use_gateway": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Используется шлюз\""
          },
          "use_dhcp": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"off\": \"DHCP выключен\""
          }
        }
      },
      "VdcNetworkSubnetNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "subnet_type": {
            "type": "string",
            "description": "Тип выбора сетевого адреса",
            "example": ""
          },
          "pool": {
            "type": "string",
            "description": "Выберите сетевой адрес из пула",
            "example": ""
          },
          "mask": {
            "type": "string",
            "description": "Маска подсети",
            "example": ""
          },
          "cidr": {
            "type": "string",
            "description": "Адрес подсети",
            "example": "text"
          },
          "use_gateway": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать шлюз для данной подсети. Под шлюз будет занят один из адресов подсети",
            "example": "off"
          },
          "gateway": {
            "type": "string",
            "description": "Адрес шлюза используемый в подсети. Для назначения адреса автоматически, необходимо оставить пустым",
            "example": "text"
          },
          "use_dhcp": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать DHCP для данной подсети. Под DHCP будет занят один из адресов подсети",
            "example": "off"
          }
        }
      },
      "VdcNetworkSubnet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "cidr": {
            "type": "string",
            "description": "Адрес подсети",
            "example": "text"
          },
          "use_gateway": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать шлюз для данной подсети. Под шлюз будет занят один из адресов подсети",
            "example": "off"
          },
          "gateway": {
            "type": "string",
            "description": "Адрес шлюза используемый в подсети. Для назначения адреса автоматически, необходимо оставить пустым",
            "example": "text"
          },
          "use_dhcp": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Использовать DHCP для данной подсети. Под DHCP будет занят один из адресов подсети",
            "example": "off"
          }
        }
      },
      "VdcVolumeElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Имя диска"
          },
          "size": {
            "type": "string",
            "description": "Размер диска в гигабайтах"
          },
          "externalid": {
            "type": "string",
            "description": "ID диска"
          },
          "vdc_vm_name": {
            "type": "string",
            "description": "Виртуальный сервер, к которому прикреплен диск"
          },
          "type": {
            "type": "string",
            "description": "Тип диска"
          },
          "bootable": {
            "type": "string",
            "description": "Является ли диск загрузочным"
          },
          "ss": {
            "type": "string",
            "description": "Наличие снимков у диска"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcVolumeNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя диска",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "Тип диска",
            "example": ""
          },
          "source_type": {
            "type": "string",
            "description": "Источник создания диска",
            "example": ""
          },
          "ostempl": {
            "type": "string",
            "description": "Образ, из которого будет создан диск",
            "example": ""
          },
          "snapshot": {
            "type": "string",
            "description": "Снимок из которого будет создан диск",
            "example": ""
          },
          "size": {
            "type": "string",
            "description": "Размер диска в гигабайтах",
            "example": "1"
          }
        }
      },
      "VdcVolume": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя диска",
            "example": ""
          },
          "bootable": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Загрузочный диск",
            "example": "off"
          }
        }
      },
      "VdcVolumeSnapshotElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Имя"
          },
          "externalid": {
            "type": "string",
            "description": "ID снимка"
          },
          "vdc_volume": {
            "type": "string",
            "description": "Диск, к которому прикреплен снэпшот"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcVolumeSnapshotNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя",
            "example": "text"
          }
        }
      },
      "VdcVolumeSnapshot": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя",
            "example": "text"
          }
        }
      },
      "VdcRouterElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "externalid": {
            "type": "string",
            "description": "Идентификатор маршрутизатора в панели управления"
          },
          "name": {
            "type": "string",
            "description": "Наименование маршрутизатора"
          },
          "routertempl_name": {
            "type": "string",
            "description": "Конфигурация маршрутизатора"
          },
          "network": {
            "type": "string",
            "description": "Внешняя сеть"
          },
          "external_ip": {
            "type": "string",
            "description": "Внешние IP-адреса маршрутизатора"
          },
          "status": {
            "type": "string"
          },
          "use_dhcp": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"off\": \"DHCP выключен\""
          },
          "use_firewall": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"off\": \"Firewall выключен\""
          },
          "use_vpn": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"VPN включен\""
          }
        }
      },
      "VdcRouterNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование маршрутизатора",
            "example": "text"
          },
          "routertempl": {
            "type": "string",
            "description": "Конфигурация маршрутизатора",
            "example": ""
          },
          "external_network": {
            "type": "string",
            "description": "Внешняя сеть, к которой будет подключен создаваемый маршрутизатор",
            "example": ""
          },
          "use_dhcp": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить DHCP для маршрутизатора",
            "example": "off"
          },
          "use_firewall": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить Firewall для маршрутизатора",
            "example": "off"
          },
          "firewall_policy": {
            "type": "string",
            "description": "Политика обработки пакетов по умолчанию",
            "example": ""
          },
          "use_vpn": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить использование VPN для маршрутизатора",
            "example": "off"
          }
        }
      },
      "VdcRouter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование маршрутизатора",
            "example": "text"
          },
          "routertempl": {
            "type": "string",
            "description": "Конфигурация маршрутизатора",
            "example": ""
          },
          "external_network": {
            "type": "string",
            "description": "Внешняя сеть, к которой будет подключен создаваемый маршрутизатор",
            "example": ""
          },
          "use_dhcp": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить DHCP для маршрутизатора",
            "example": "off"
          },
          "use_firewall": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить Firewall для маршрутизатора",
            "example": "off"
          },
          "firewall_policy": {
            "type": "string",
            "description": "Политика обработки пакетов по умолчанию",
            "example": ""
          },
          "use_vpn": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить использование VPN для маршрутизатора",
            "example": "off"
          }
        }
      },
      "VdcRouterInterfaceElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "externalid": {
            "type": "string",
            "description": "Идентификатор интерфейса маршрутизатора на стороне OpenStack"
          },
          "network": {
            "type": "string",
            "description": "Сеть"
          },
          "subnet": {
            "type": "string",
            "description": "Подсеть"
          },
          "fixedips": {
            "type": "string",
            "description": "IP-адрес"
          },
          "type": {
            "type": "string",
            "description": "Тип интерфейса"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcRouterInterfaceNew": {
        "type": "object",
        "properties": {
          "subnet": {
            "type": "string",
            "description": "Подсеть, к которой будет привязан маршрутизатор",
            "example": ""
          }
        }
      },
      "VdcRouterInterfaceParam": {
        "type": "object",
        "properties": {}
      },
      "VdcRouterDhcpElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "network": {
            "type": "string",
            "description": "Сеть дата-центра"
          },
          "ip_range": {
            "type": "string",
            "description": "Диапазон адресов, из которого будут выдаваться IP адреса"
          },
          "default_lease_time": {
            "type": "string",
            "description": "Время аренды IP-адреса по умолчанию"
          },
          "max_lease_time": {
            "type": "string",
            "description": "Максимальное время аренды IP-адреса"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcRouterDhcpNew": {
        "type": "object",
        "properties": {
          "vdc_network": {
            "type": "string",
            "description": "Сеть дата-центра, для которой активируется DHCP диапазон",
            "example": ""
          },
          "ip_range": {
            "type": "string",
            "description": "Диапазон адресов, из которого будут выдаваться IP адреса",
            "example": "text"
          },
          "default_lease_time": {
            "type": "string",
            "description": "Время аренды IP-адреса по умолчанию",
            "example": "1"
          },
          "max_lease_time": {
            "type": "string",
            "description": "Максимальное время аренды IP-адреса",
            "example": "60"
          }
        }
      },
      "VdcRouterDhcp": {
        "type": "object",
        "properties": {
          "ip_range": {
            "type": "string",
            "description": "Диапазон адресов, из которого будут выдаваться IP адреса",
            "example": "text"
          },
          "default_lease_time": {
            "type": "string",
            "description": "Время аренды IP-адреса по умолчанию",
            "example": "1"
          },
          "max_lease_time": {
            "type": "string",
            "description": "Максимальное время аренды IP-адреса",
            "example": "60"
          }
        }
      },
      "VdcRouterNatElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "network": {
            "type": "string",
            "description": "Сеть дата-центра"
          },
          "rule_type": {
            "type": "string",
            "description": "Тип правила трансляции адресов. SNAT - трансляция исходящих из внутренней сети запросов, DNAT - трансляция входящих во внутреннюю сеть запросов"
          },
          "original_ip_range": {
            "type": "string",
            "description": "Для SNAT правила это внутренний IP-адрес или диапазон IP-адресов, для правила DNAT - внешний IP-адрес или диапазон IP-адресов. Значение можно выбрать из списка или указать самостоятельно"
          },
          "original_port_desc": {
            "type": "string",
            "description": "Исходный порт, для которого выполняется трансляция"
          },
          "translated_ip_range": {
            "type": "string",
            "description": "Для SNAT правила это внешний IP-адрес или диапазон IP-адресов, для правила DNAT - внутренний IP-адрес или диапазон IP-адресов. Значение можно выбрать из списка или указать самостоятельно"
          },
          "translated_port_desc": {
            "type": "string",
            "description": "Транслируемый порт, по которому идет обращение"
          },
          "protocol": {
            "type": "string",
            "description": "Протокол, для которого будет применяться правило NAT"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcRouterNatNew": {
        "type": "object",
        "properties": {
          "vdc_network": {
            "type": "string",
            "description": "Сеть дата-центра, для которой применяется правило NAT",
            "example": ""
          },
          "rule_type": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "1",
              "2"
            ],
            "description": "Тип правила трансляции адресов. SNAT - трансляция исходящих из внутренней сети запросов, DNAT - трансляция входящих во внутреннюю сеть запросов; 1 - SNAT; 2 - DNAT; 1 - SNAT; 2 - DNAT",
            "example": ""
          },
          "protocol": {
            "type": "string",
            "enum": [
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp",
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp"
            ],
            "description": "Протокол, для которого будет применяться правило NAT; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP",
            "example": ""
          },
          "original_ip_range": {
            "type": "string",
            "description": "Для SNAT правила это внутренний IP-адрес или диапазон IP-адресов, для правила DNAT - внешний IP-адрес или диапазон IP-адресов. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "original_port": {
            "type": "string",
            "description": "Исходный порт, для которого выполняется трансляция. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "translated_ip_range": {
            "type": "string",
            "description": "Для SNAT правила это внешний IP-адрес или диапазон IP-адресов, для правила DNAT - внутренний IP-адрес или диапазон IP-адресов. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "translated_port": {
            "type": "string",
            "description": "Транслируемый порт, по которому идет обращение. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          }
        }
      },
      "VdcRouterNat": {
        "type": "object",
        "properties": {
          "vdc_network": {
            "type": "string",
            "description": "Сеть дата-центра, для которой применяется правило NAT",
            "example": ""
          },
          "rule_type": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "1",
              "2"
            ],
            "description": "Тип правила трансляции адресов. SNAT - трансляция исходящих из внутренней сети запросов, DNAT - трансляция входящих во внутреннюю сеть запросов; 1 - SNAT; 2 - DNAT; 1 - SNAT; 2 - DNAT",
            "example": ""
          },
          "protocol": {
            "type": "string",
            "enum": [
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp",
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp"
            ],
            "description": "Протокол, для которого будет применяться правило NAT; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP",
            "example": ""
          },
          "original_ip_range": {
            "type": "string",
            "description": "Для SNAT правила это внутренний IP-адрес или диапазон IP-адресов, для правила DNAT - внешний IP-адрес или диапазон IP-адресов. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "original_port": {
            "type": "string",
            "description": "Исходный порт, для которого выполняется трансляция. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "translated_ip_range": {
            "type": "string",
            "description": "Для SNAT правила это внешний IP-адрес или диапазон IP-адресов, для правила DNAT - внутренний IP-адрес или диапазон IP-адресов. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "translated_port": {
            "type": "string",
            "description": "Транслируемый порт, по которому идет обращение. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          }
        }
      },
      "VdcRouterFirewallElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование правила"
          },
          "source_desc": {
            "type": "string",
            "description": "Источник трафика"
          },
          "destination_desc": {
            "type": "string",
            "description": "Адрес назначения трафика"
          },
          "protocol": {
            "type": "string",
            "description": "Протокол, к которому применяется правило"
          },
          "policy": {
            "type": "string",
            "description": "Политика, применяемая к трафику"
          },
          "status": {
            "type": "string"
          },
          "use_log": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Включено журналирование трафика\""
          }
        }
      },
      "VdcRouterFirewallNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование правила",
            "example": "text"
          },
          "protocol": {
            "type": "string",
            "enum": [
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp",
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp",
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp",
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp"
            ],
            "description": "Протокол, к которому применяется правило; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP",
            "example": ""
          },
          "source": {
            "type": "string",
            "enum": [
              "port"
            ],
            "description": "Источник трафика. Допустимым значением может быть IP-адрес, CIDR, диапазон IP-адресов, \"any\",\"internal\" и \"external\". Значение можно выбрать из списка или указать самостоятельно; port - Порт источника",
            "example": ""
          },
          "source_port": {
            "type": "string",
            "description": "Порт источника. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "destination": {
            "type": "string",
            "enum": [
              "port"
            ],
            "description": "Адрес назначения трафика. Допустимым значением может быть IP-адрес, CIDR, диапазон IP-адресов, \"any\",\"internal\" и \"external\". Значение можно выбрать из списка или указать самостоятельно; port - Порт адреса назначения",
            "example": ""
          },
          "destination_port": {
            "type": "string",
            "description": "Порт адреса назначения. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "policy": {
            "type": "string",
            "enum": [
              "allow",
              "deny",
              "allow",
              "deny",
              "allow",
              "deny",
              "allow",
              "deny"
            ],
            "description": "Политика, применяемая к трафику; allow - Разрешено; deny - Запрещено; allow - Разрешено; deny - Запрещено; allow - Разрешено; deny - Запрещено; allow - Разрешено; deny - Запрещено",
            "example": ""
          },
          "use_log": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает ведение журнала трафика, попадаемого под правило",
            "example": "off"
          }
        }
      },
      "VdcRouterFirewall": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование правила",
            "example": "text"
          },
          "protocol": {
            "type": "string",
            "enum": [
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp",
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp",
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp",
              "any",
              "tcp",
              "udp",
              "tcp_udp",
              "icmp"
            ],
            "description": "Протокол, к которому применяется правило; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP; any - любой; tcp - TCP; udp - UDP; tcp_udp - TCP и UDP; icmp - ICMP",
            "example": ""
          },
          "source": {
            "type": "string",
            "enum": [
              "port"
            ],
            "description": "Источник трафика. Допустимым значением может быть IP-адрес, CIDR, диапазон IP-адресов, \"any\",\"internal\" и \"external\". Значение можно выбрать из списка или указать самостоятельно; port - Порт источника",
            "example": ""
          },
          "source_port": {
            "type": "string",
            "description": "Порт источника. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "destination": {
            "type": "string",
            "enum": [
              "port"
            ],
            "description": "Адрес назначения трафика. Допустимым значением может быть IP-адрес, CIDR, диапазон IP-адресов, \"any\",\"internal\" и \"external\". Значение можно выбрать из списка или указать самостоятельно; port - Порт адреса назначения",
            "example": ""
          },
          "destination_port": {
            "type": "string",
            "description": "Порт адреса назначения. Значение можно выбрать из списка или указать самостоятельно",
            "example": ""
          },
          "policy": {
            "type": "string",
            "enum": [
              "allow",
              "deny",
              "allow",
              "deny",
              "allow",
              "deny",
              "allow",
              "deny"
            ],
            "description": "Политика, применяемая к трафику; allow - Разрешено; deny - Запрещено; allow - Разрешено; deny - Запрещено; allow - Разрешено; deny - Запрещено; allow - Разрешено; deny - Запрещено",
            "example": ""
          },
          "use_log": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Опция включает ведение журнала трафика, попадаемого под правило",
            "example": "off"
          }
        }
      },
      "VdcRouterVpnElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование тоннеля"
          },
          "connection_type": {
            "type": "string",
            "description": "Тип подключения IPSec VPN туннеля"
          },
          "local_ip_address": {
            "type": "string",
            "description": "IP-адрес локальной точки подключения"
          },
          "peer_ip_address": {
            "type": "string",
            "description": "Адрес внешней точки подключения"
          },
          "network_local": {
            "type": "string",
            "description": "Адреса локальных сетей"
          },
          "network_peer": {
            "type": "string",
            "description": "Адреса внешних сетей"
          },
          "encryption_protocol": {
            "type": "string",
            "description": "Протокол шифрования соединения"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcRouterVpnNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "connection_type": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "description": "Тип подключения IPSec VPN туннеля; 1 - К сети организации; 2 - К сети сторонней организации; 3 - К внешней сети",
            "example": ""
          },
          "vdc_router_peer": {
            "type": "string",
            "description": "Маршрутизатор виртуального дата-центра, для которого настраивается IPSec VPN туннель",
            "example": ""
          },
          "vdc_network_local": {
            "type": "string",
            "description": "Локальные сети, подключенные к маршрутизатору",
            "example": ""
          },
          "vdc_network_peer": {
            "type": "string",
            "description": "Внешние сети, подключенные к маршрутизатору виртуального дата-центра",
            "example": ""
          },
          "peer_cidr": {
            "type": "string",
            "description": "Внешние сети, для которой настраивается IPSec VPN туннель в формате адрес_сети/маска, через пробел. Например 192.168.0.0/24 192.168.1.0/24",
            "example": "text"
          },
          "local_endpoint": {
            "type": "string",
            "enum": [
              "use_public_ip_msg"
            ],
            "description": "Интерфейс маршрутизатора, который будет использован для создания VPN соединения. Если необходимо использовать публичный IP адрес соединения, необходимо отметить опцию \"Публичный IP-адрес\"; use_public_ip_msg - Публичный IP-адрес",
            "example": ""
          },
          "local_endpoint_use_public_ip": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "off"
          },
          "peer_endpoint": {
            "type": "string",
            "enum": [
              "use_public_ip_msg"
            ],
            "description": "Интерфейс маршрутизатора, который будет использован для создания VPN соединения. Если необходимо использовать публичный IP адрес соединения, необходимо отметить опцию \"Публичный IP-адрес\"; use_public_ip_msg - Публичный IP-адрес",
            "example": ""
          },
          "peer_endpoint_use_public_ip": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "off"
          },
          "local_id": {
            "type": "string",
            "description": "Локальный ID IPSec VPN туннеля",
            "example": "text"
          },
          "peer_id": {
            "type": "string",
            "description": "Внешний ID IPSec VPN туннеля",
            "example": "text"
          },
          "peer_ip_address": {
            "type": "string",
            "description": "Адрес внешней точки подключения",
            "example": "text"
          },
          "encryption_protocol": {
            "type": "string",
            "description": "Протокол шифрования соединения",
            "example": ""
          },
          "mtu": {
            "type": "string",
            "description": "Максимальный размер пакета для передачи по IPSec VPN туннелю",
            "example": "60"
          }
        }
      },
      "VdcRouterVpn": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "connection_type": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "description": "Тип подключения IPSec VPN туннеля; 1 - К сети организации; 2 - К сети сторонней организации; 3 - К внешней сети",
            "example": ""
          },
          "vdc_router_peer": {
            "type": "string",
            "description": "Маршрутизатор виртуального дата-центра, для которого настраивается IPSec VPN туннель",
            "example": ""
          },
          "vdc_network_local": {
            "type": "string",
            "description": "Локальные сети, подключенные к маршрутизатору",
            "example": ""
          },
          "vdc_network_peer": {
            "type": "string",
            "description": "Внешние сети, подключенные к маршрутизатору виртуального дата-центра",
            "example": ""
          },
          "peer_cidr": {
            "type": "string",
            "description": "Внешние сети, для которой настраивается IPSec VPN туннель в формате адрес_сети/маска, через пробел. Например 192.168.0.0/24 192.168.1.0/24",
            "example": "text"
          },
          "encryption_protocol": {
            "type": "string",
            "description": "Протокол шифрования соединения",
            "example": ""
          },
          "mtu": {
            "type": "string",
            "description": "Максимальный размер пакета для передачи по IPSec VPN туннелю",
            "example": "60"
          }
        }
      },
      "VdcRouterLbpElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование пула балансировщика нагрузки. Может содержать только быквы латинского алфавита, цифры, тире, нижнее подчеркивание и должно начинаться с буквы"
          },
          "description": {
            "type": "string",
            "description": "Произвольное описание пула"
          },
          "members": {
            "type": "string",
            "description": "Количество участников пула"
          },
          "service": {
            "type": "string",
            "description": "Службы, задействованные в пуле"
          },
          "port": {
            "type": "string",
            "description": "Порты служб"
          },
          "monitor_port": {
            "type": "string",
            "description": "Порт, используемый для мониторинга"
          },
          "method": {
            "type": "string",
            "description": "Метод балансирования нагрузки"
          },
          "interval": {
            "type": "string",
            "description": "Интервал мониторинга"
          },
          "timeout": {
            "type": "string",
            "description": "Таймаут мониторинга"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcRouterLbpNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование пула балансировщика нагрузки. Может содержать только быквы латинского алфавита, цифры, тире, нижнее подчеркивание и должно начинаться с буквы",
            "example": "text"
          },
          "uri": {
            "type": "string",
            "description": "URI для проверки доступности службы HTTP",
            "example": ""
          }
        }
      },
      "VdcRouterLbp": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование пула балансировщика нагрузки. Может содержать только быквы латинского алфавита, цифры, тире, нижнее подчеркивание и должно начинаться с буквы",
            "example": "text"
          },
          "uri": {
            "type": "string",
            "description": "URI для проверки доступности службы HTTP",
            "example": ""
          }
        }
      },
      "VdcRouterLbsElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сервера балансировщика нагрузки. Может содержать только быквы латинского алфавита, цифры, тире, нижнее подчеркивание и должно начинаться с буквы"
          },
          "description": {
            "type": "string",
            "description": "Произвольное описание сервера"
          },
          "ip": {
            "type": "string",
            "description": "IP-адрес сервера балансировщика нагрузки"
          },
          "vdc_loadbalancer_pool_name": {
            "type": "string",
            "description": "Пул настроек балансировщика нагрузки"
          },
          "service_name": {
            "type": "string",
            "description": "Имя службы используемой балансировщиком нагрузки"
          },
          "service_port": {
            "type": "string",
            "description": "Порт службы, используемой балансировщиком нагрузки"
          },
          "service_persistence": {
            "type": "string",
            "description": "Метод поддержания соединения службы, используемой балансировщиком нагрузки"
          },
          "status": {
            "type": "string"
          },
          "use_log": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          }
        }
      },
      "VdcRouterLbsNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование сервера балансировщика нагрузки. Может содержать только быквы латинского алфавита, цифры, тире, нижнее подчеркивание и должно начинаться с буквы",
            "example": "text"
          },
          "vdc_network": {
            "type": "string",
            "description": "Сеть маршрутизатора, для которой будет активен балансировщик нагрузки",
            "example": ""
          },
          "ip": {
            "type": "string",
            "description": "IP-адрес сервера балансировщика нагрузки",
            "example": "text"
          },
          "pool": {
            "type": "string",
            "description": "Пул настроек балансировщика нагрузки",
            "example": ""
          },
          "use_log": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает журналирование трафика, проходящего через сервер балансировщика нагрузки",
            "example": "off"
          }
        }
      },
      "VdcRouterLbs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование сервера балансировщика нагрузки. Может содержать только быквы латинского алфавита, цифры, тире, нижнее подчеркивание и должно начинаться с буквы",
            "example": "text"
          },
          "vdc_network": {
            "type": "string",
            "description": "Сеть маршрутизатора, для которой будет активен балансировщик нагрузки",
            "example": ""
          },
          "ip": {
            "type": "string",
            "description": "IP-адрес сервера балансировщика нагрузки",
            "example": "text"
          },
          "pool": {
            "type": "string",
            "description": "Пул настроек балансировщика нагрузки",
            "example": ""
          },
          "use_log": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включает журналирование трафика, проходящего через сервер балансировщика нагрузки",
            "example": "off"
          }
        }
      },
      "VdcLoadbalancerElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "externalid": {
            "type": "string",
            "description": "ID балансировщика"
          },
          "vm": {
            "type": "string",
            "description": "Виртуальный сервер, прикрепленный к балансировщику"
          },
          "protocol": {
            "type": "string",
            "description": "Протокол входящего подключения"
          },
          "port": {
            "type": "string",
            "description": "Порт"
          },
          "method": {
            "type": "string",
            "description": "Метод распределения трафика между участника пула"
          },
          "monitortype": {
            "type": "string",
            "description": "Тип протокола мониторинга"
          },
          "delay": {
            "type": "string",
            "description": "Интервал опроса, в секундах"
          },
          "retries": {
            "type": "string",
            "description": "Количество успешных проверок перед изменением состояния участника пула. Значение от 1 до 10"
          },
          "timeout": {
            "type": "string",
            "description": "Максимальное время ожидания подключения, в секундах"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcLoadbalancerNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "subnet": {
            "type": "string",
            "description": "Выберите подсеть",
            "example": ""
          },
          "protocol": {
            "type": "string",
            "description": "Выберите протокол",
            "example": ""
          },
          "port": {
            "type": "string",
            "description": "Выберите порт. Значение должно быть от 1 до 65535",
            "example": "1"
          },
          "method": {
            "type": "string",
            "description": "Метод распределения трафика между участника пула",
            "example": ""
          },
          "vm": {
            "type": "string",
            "description": "Виртуальные серверы, входящие в пул",
            "example": ""
          },
          "monitortype": {
            "type": "string",
            "description": "Тип протокола мониторинга",
            "example": ""
          },
          "delay": {
            "type": "string",
            "description": "Интервал опроса, в секундах",
            "example": "1"
          },
          "timeout": {
            "type": "string",
            "description": "Максимальное время ожидания подключения, в секундах",
            "example": "1"
          }
        }
      },
      "VdcLoadbalancer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "subnet": {
            "type": "string",
            "description": "Выберите подсеть",
            "example": ""
          },
          "protocol": {
            "type": "string",
            "description": "Выберите протокол",
            "example": ""
          },
          "port": {
            "type": "string",
            "description": "Выберите порт. Значение должно быть от 1 до 65535",
            "example": "1"
          },
          "method": {
            "type": "string",
            "description": "Метод распределения трафика между участника пула",
            "example": ""
          },
          "monitortype": {
            "type": "string",
            "description": "Тип протокола мониторинга",
            "example": ""
          },
          "delay": {
            "type": "string",
            "description": "Интервал опроса, в секундах",
            "example": "1"
          },
          "timeout": {
            "type": "string",
            "description": "Максимальное время ожидания подключения, в секундах",
            "example": "1"
          }
        }
      },
      "VdcLoadbalancerVmElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "vm": {
            "type": "string"
          },
          "subnet": {
            "type": "string",
            "description": "Подсеть, к которой прикреплен виртуальный сервер"
          }
        }
      },
      "VdcLoadbalancerVmNew": {
        "type": "object",
        "properties": {
          "vm": {
            "type": "string",
            "description": "Виртуальный сервер, присоединяемый к балансировщику",
            "example": ""
          }
        }
      },
      "VdcLoadbalancerIpElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "ip": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VdcLoadbalancerIpNew": {
        "type": "object",
        "properties": {
          "iplist": {
            "type": "string",
            "description": "IP-адрес, присоединяемый к балансировщику",
            "example": ""
          }
        }
      },
      "VdsElem": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Наименование"
          },
          "ip": {
            "type": "string",
            "description": "IP-aдреса"
          },
          "ostempl": {
            "type": "string",
            "description": "Название шаблона из которого установлена операционная система на сервер"
          },
          "processingnode": {
            "type": "string",
            "description": "Узел кластера"
          },
          "serverid": {
            "type": "string",
            "description": "Наименование сервера в панели управления"
          },
          "rack": {
            "type": "string",
            "description": "Номер стойки, в которой расположен узел кластера"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги; ordered - В корзине; in_pay - Оплачивается; active - Активен; suspended - Остановлен; closed - Удален; in_processing - В обработке; in_suspend - Отключение; in_resume - Включение; in_reboot - Перезагружается; in_hardreboot - Перезагружается; in_prolong - Продлевается; in_transfer - Трансфер; in_close - Удаляется; in_register - Регистрируется; need_configure - Завершите настройку; service_nosuitable - Нет в наличии; KVM_access - Доступ по KVM; issue - Выпуск; certificate_error - Ошибка при оформлении; ordered - В корзине; in_pay - Оплачивается; active - Активен; suspended - Остановлен; closed - Удален; in_processing - В обработке; in_suspend - Отключение; in_resume - Включение; in_reboot - Перезагружается; in_hardreboot - Перезагружается; in_prolong - Продлевается; in_transfer - Трансфер; in_close - Удаляется; in_register - Регистрируется; need_configure - Завершите настройку; service_nosuitable - Нет в наличии; KVM_access - Доступ по KVM; issue - Выпуск; certificate_error - Ошибка при оформлении",
            "enum": [
              "ordered",
              "in_pay",
              "active",
              "suspended",
              "closed",
              "in_processing",
              "in_suspend",
              "in_resume",
              "in_reboot",
              "in_hardreboot",
              "in_prolong",
              "in_transfer",
              "in_close",
              "in_register",
              "need_configure",
              "service_nosuitable",
              "KVM_access",
              "issue",
              "certificate_error",
              "ordered",
              "in_pay",
              "active",
              "suspended",
              "closed",
              "in_processing",
              "in_suspend",
              "in_resume",
              "in_reboot",
              "in_hardreboot",
              "in_prolong",
              "in_transfer",
              "in_close",
              "in_register",
              "need_configure",
              "service_nosuitable",
              "KVM_access",
              "issue",
              "certificate_error"
            ]
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги; 0 - Неизвестен; 1 - Заказан; 2 - Активен; 2_2_29 - Активен (остановлен клиентом); 2_2_16 - Временно остановлен; 2_stop - Активен (останавливается); 2_start - Активен (запускается); 2_genkey - Активен (генерация ключа); 2_reboot - Активен (перезагрузка); 2_hardreboot - Активен (перезагрузка); 3 - Остановлен; 3_employeesuspend - Остановлен администратором; 3_autosuspend - Остановлен; 3_abusesuspend - Остановлен за нарушение; 4 - Удален; 5 - Обрабатывается; 5_need_configure - Требуется настройка; 5_open - Обрабатывается (открытие); 5_reopen - Обрабатывается (перевыпуск); 5_suspend - Обрабатывается (выключение); 5_resume - Обрабатывается (включение); 5_reboot - Обрабатывается (перезагрузка); 5_hardreboot - Обрабатывается (перезагрузка); 5_prolong - Обрабатывается (продление); 5_transfer - Обрабатывается (трансфер); 5_close - Обрабатывается (удаление); service_nosuitable - Нет в наличии; reboot - Активен (перезагрузка); hardreboot - Активен (перезагрузка); 0 - Неизвестен; 1 - Заказан; 2 - Активен; 2_2_29 - Активен (остановлен клиентом); 2_2_16 - Временно остановлен; 2_stop - Активен (останавливается); 2_start - Активен (запускается); 2_genkey - Активен (генерация ключа); 2_reboot - Активен (перезагрузка); 2_hardreboot - Активен (перезагрузка); 3 - Остановлен; 3_employeesuspend - Остановлен администратором; 3_autosuspend - Остановлен; 3_abusesuspend - Остановлен за нарушение; 4 - Удален; 5 - Обрабатывается; 5_need_configure - Требуется настройка; 5_open - Обрабатывается (открытие); 5_reopen - Обрабатывается (перевыпуск); 5_suspend - Обрабатывается (выключение); 5_resume - Обрабатывается (включение); 5_reboot - Обрабатывается (перезагрузка); 5_hardreboot - Обрабатывается (перезагрузка); 5_prolong - Обрабатывается (продление); 5_transfer - Обрабатывается (трансфер); 5_close - Обрабатывается (удаление); service_nosuitable - Нет в наличии; reboot - Активен (перезагрузка); hardreboot - Активен (перезагрузка)",
            "enum": [
              "0",
              "1",
              "2",
              "2_2_29",
              "2_2_16",
              "2_stop",
              "2_start",
              "2_genkey",
              "2_reboot",
              "2_hardreboot",
              "3",
              "3_employeesuspend",
              "3_autosuspend",
              "3_abusesuspend",
              "4",
              "5",
              "5_need_configure",
              "5_open",
              "5_reopen",
              "5_suspend",
              "5_resume",
              "5_reboot",
              "5_hardreboot",
              "5_prolong",
              "5_transfer",
              "5_close",
              "service_nosuitable",
              "reboot",
              "hardreboot",
              "0",
              "1",
              "2",
              "2_2_29",
              "2_2_16",
              "2_stop",
              "2_start",
              "2_genkey",
              "2_reboot",
              "2_hardreboot",
              "3",
              "3_employeesuspend",
              "3_autosuspend",
              "3_abusesuspend",
              "4",
              "5",
              "5_need_configure",
              "5_open",
              "5_reopen",
              "5_suspend",
              "5_resume",
              "5_reboot",
              "5_hardreboot",
              "5_prolong",
              "5_transfer",
              "5_close",
              "service_nosuitable",
              "reboot",
              "hardreboot"
            ]
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Vds": {
        "type": "object",
        "properties": {
          "change_disk_size_warn": {
            "type": "string",
            "description": "Данная операция выставит ограничения согласно выбранным значениям. Однако размер дискового устройства не будет изменен, необходимо произвести данную операцию на сервере в ручном режиме.",
            "example": ""
          },
          "change_disc_size": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Выставляя опцию Вы подтверждаете, что все необходимые операции (выключение виртуального сервера, изменение размера диска, включение виртуального сервера) были произведены",
            "example": "off"
          },
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "VhostElem": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Наименование"
          },
          "ip": {
            "type": "string",
            "description": "IP-aдреса"
          },
          "processingnode": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "Vhost": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "VirtualNetworkElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "pricelist": {
            "type": "string",
            "description": "Тариф, к которому относится услуга"
          },
          "account": {
            "type": "string",
            "description": "Клиент, которому принадлежит услуга"
          },
          "project": {
            "type": "string"
          },
          "datacentername": {
            "type": "string",
            "description": "Дата-центр размещения услуги"
          },
          "processingmodule": {
            "type": "string",
            "description": "Обработчик, которым обслуживается услуга"
          },
          "createdate": {
            "type": "string",
            "description": "Дата создания услуги"
          },
          "expiredate": {
            "type": "string",
            "description": "Дата, до которой оплачена услуга"
          },
          "autoprolong": {
            "type": "string",
            "description": "Период автоматического продления услуги. Автоматическое продление срабатывает в последний день действия услуги"
          },
          "status_msg": {
            "type": "string",
            "description": "Текущий статус услуги"
          },
          "item_status": {
            "type": "string",
            "description": "Состояние услуги"
          },
          "need_configure": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "processingmodule_failed": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "archived": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг"
          },
          "cost": {
            "type": "string",
            "description": "Полная стоимость продления услуги с учетом всех дополнений за минимальный период заказа"
          }
        }
      },
      "VirtualNetwork": {
        "type": "object",
        "properties": {
          "autoprolong": {
            "type": "string",
            "enum": [
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "disabled",
              "warning_tmpl",
              "warning_penalty_tmpl",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0",
              "-50",
              "1",
              "12",
              "3",
              "6",
              "24",
              "36",
              "48",
              "60",
              "120",
              "0"
            ],
            "description": "Выберите период, на который услуга будет продлеваться автоматически при окончании срока действия; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; disabled - Отключено; warning_tmpl - В данный момент услуга остановлена и не будет продлена автоматически.<br/>Стоимость продления до __expiredate__ составит __cost__ __iso____penalty_msg__. Вы можете продлить услугу самостоятельно, воспользовавшись кнопкой \"В корзину\"; warning_penalty_tmpl - , включая штраф за время простоя в размере __penalty__ __iso__; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа; -50 - день; 1 - месяц; 12 - год; 3 - три месяца; 6 - полгода; 24 - два года; 36 - три года; 48 - четыре года; 60 - пять лет; 120 - десять лет; 0 - вечный период заказа",
            "example": ""
          },
          "stored_method": {
            "type": "string",
            "enum": [
              "warning",
              "warning"
            ],
            "description": "Способ оплаты, при помощи которого будет происходить автопродление услуги; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"; warning - Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "stored_method_warning": {
            "type": "string",
            "description": "Отсутствуют настроенные способы оплаты, необходимо создать способ оплаты в разделе \"Способы оплаты\"",
            "example": ""
          },
          "processingmodule": {
            "type": "string",
            "description": "Модуль обработки",
            "example": ""
          },
          "createdate": {
            "type": "string",
            "description": "Дата заказа услуги",
            "example": ""
          },
          "opendate": {
            "type": "string",
            "description": "Дата фактического начала действия услуги",
            "example": ""
          },
          "expiredate": {
            "type": "string",
            "description": "Срок действия услуги",
            "example": ""
          },
          "scheduledclose": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Запланировано удаление по окончанию оплаченного периода",
            "example": "off"
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "show_rebootwarn": {
            "type": "string",
            "example": ""
          },
          "reboot": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Перезагрузка сервера в панели управления",
            "example": "off"
          },
          "noexpense": {
            "type": "string",
            "description": "Поставьте флаг, если не нужно списывать/возвращать деньги за текущую операцию изменения ресурсов",
            "example": ""
          }
        }
      },
      "PaymethodElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование метода оплаты, отображаемое клиентам"
          },
          "module": {
            "type": "string",
            "description": "Наименование платежной системы"
          },
          "currency_name": {
            "type": "string",
            "description": "Валюты, в которой будут осуществлятся платежи. В случае, если валюта отличается от валюты счета клиента, сумма платежа будет пересчитана по курсу"
          },
          "projects": {
            "type": "string",
            "description": "Провайдеры, у которых доступен метод оплаты"
          },
          "companies": {
            "type": "string",
            "description": "Компании, бухгалтерия которых обслуживает данный метод оплаты."
          },
          "note": {
            "type": "string",
            "description": "Комментарий к методу оплаты"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет метода оплаты при сортировке (в прямом порядке). Методы оплаты будут показаны клиенту в соответствии с заданным приоритетом"
          },
          "status": {
            "type": "string",
            "description": "Текущее состояние метода оплаты"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Метод оплаты включен\"; значение \"off\": \"Метод оплаты выключен\""
          },
          "verified": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Метод оплаты верифицирован\""
          },
          "wrnport": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг. Значение \"on\": \"Данный метод оплаты может корректно работать только на портах: 443, 80\""
          }
        }
      },
      "PaymethodNew": {
        "type": "object",
        "properties": {
          "name_ru": {
            "type": "string",
            "example": "text"
          },
          "currency": {
            "type": "string",
            "description": "Укажите валюту, в которой будут осуществляться платежи",
            "example": "126"
          },
          "minamount": {
            "type": "string",
            "description": "Минимальная сумма, на которую можно выписать платеж с помощью данного метода оплаты",
            "example": "1.00"
          },
          "maxamount": {
            "type": "string",
            "description": "Максимальная сумма, на которую можно выписать платеж с помощью данного метода оплаты",
            "example": "1.00"
          },
          "commissionamount": {
            "type": "string",
            "description": "Фиксированная часть комиссии, снимаемой с клиента при зачислении платежа",
            "example": "1.00"
          },
          "commissionpercent": {
            "type": "string",
            "description": "Процентная часть комисcии, снимаемой с клиента при зачислении платежа",
            "example": "0.0"
          },
          "autoclearperiod": {
            "type": "string",
            "description": "Период в днях, по истечении которого со дня создания платежа он будет удален в случае неоплаты",
            "example": "1"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Метод оплаты будет включен после создания",
            "example": "off"
          },
          "orderpriority": {
            "type": "string",
            "description": "Приоритет метода оплаты при сортировке (в прямом порядке). Методы оплаты будут показаны клиенту в соответствии с заданным приоритетом",
            "example": "1"
          },
          "successpage": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при успешном платеже",
            "example": "http://example.com"
          },
          "failpage": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при неудачном платеже",
            "example": "http://example.com"
          },
          "pendingpage": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при платеже в статусе \"обрабатывается\", некоторые платежи после совершения оплаты имеют статус \"обрабатывается\" и в дальнейшем могут быть подтверждены или отменены, вы можете указать страницу возврата для таких платежей",
            "example": "http://example.com"
          },
          "project": {
            "type": "string",
            "description": "Укажите провайдеров, к которым будет подключен метод оплаты после создания. Метод оплаты станет доступным для использования клиентами только у указанных провайдеров. Если не указать ни одного провайдера, метод оплаты не будет доступен никому.",
            "example": ""
          },
          "profiletype": {
            "type": "string",
            "example": "1,2,3"
          },
          "hide_profiletype": {
            "type": "string",
            "example": ""
          },
          "company": {
            "type": "string",
            "description": "Укажите компанию, к которой будет подключен метод оплаты после создания. Подключение к компании позволяет использовать информацию о этих платежах в документообороте. Подключение усложнит оплату для клиента, т.к. потребует от клиента указывать данные плательщика. Рекомендуется подключать к компаниям только методы оплаты доступные для юридических лиц. К примеру, для банковских платежей.",
            "example": ""
          },
          "assign_company": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Метод оплаты будет включен в бухгалтерию компании",
            "example": "off"
          },
          "doctmpl": {
            "type": "string",
            "description": "Шаблон печати счета. Если не указан используется настройка компании, на которую выставлен счет",
            "example": ""
          },
          "numtmpl_payment": {
            "type": "string",
            "description": "Шаблон формирования номера счета, можно использовать макросы {id} - код платежа и {num} - порядковый номер платежа, созданного с использованием метода оплаты. При отсутствии обоих макросов в шаблоне номера счета к шаблону будет добавлен макрос {num}",
            "example": ""
          },
          "nextnum_payment": {
            "type": "string",
            "description": "Следующий порядковый номер счета, созданного с использованием метода оплаты. Учитывается только при условии заполнения шаблона номера счета",
            "example": "1"
          }
        }
      },
      "PaymethodNew_wire": {
        "type": "object",
        "properties": {
          "recipient_name": {
            "type": "string",
            "description": "Компания получатель платежа",
            "example": "text"
          },
          "bankname": {
            "type": "string",
            "description": "Название банка, в котором размещен счет",
            "example": "text"
          },
          "swift": {
            "type": "string",
            "description": "SWIFT код банка",
            "example": "text"
          },
          "account": {
            "type": "string",
            "description": "Номер банковского счёта",
            "example": "text"
          },
          "iban": {
            "type": "string",
            "description": "IBAN код",
            "example": "text"
          }
        }
      },
      "PaymethodNew_ruwire": {
        "type": "object",
        "properties": {
          "recipient_name": {
            "type": "string",
            "description": "Компания получатель платежа",
            "example": "text"
          },
          "bankname": {
            "type": "string",
            "description": "Название банка, в котором размещен счет",
            "example": "text"
          },
          "bik": {
            "type": "string",
            "description": "БИК код",
            "example": "000000000"
          },
          "rs": {
            "type": "string",
            "description": "Р/С",
            "example": "text"
          },
          "ks": {
            "type": "string",
            "description": "К/С",
            "example": "text"
          }
        }
      },
      "Paymethod": {
        "type": "object",
        "properties": {
          "name_ru": {
            "type": "string",
            "example": "text"
          },
          "minamount": {
            "type": "string",
            "description": "Минимальная сумма, на которую можно выписать платеж с помощью данного метода оплаты",
            "example": "1.00"
          },
          "maxamount": {
            "type": "string",
            "description": "Максимальная сумма, на которую можно выписать платеж с помощью данного метода оплаты",
            "example": "1.00"
          },
          "commissionamount": {
            "type": "string",
            "description": "Фиксированная часть комиссии, снимаемой с клиента при зачислении платежа",
            "example": "1.00"
          },
          "commissionpercent": {
            "type": "string",
            "description": "Процентная часть комисcии, снимаемой с клиента при зачислении платежа",
            "example": "0.0"
          },
          "doctmpl": {
            "type": "string",
            "description": "Шаблон печати счета. Если не указан используется настройка компании, на которую выставлен счет",
            "example": ""
          },
          "numtmpl_payment": {
            "type": "string",
            "description": "Шаблон формирования номера счета, можно использовать макросы {id} - код платежа и {num} - порядковый номер платежа, созданного с использованием метода оплаты. При отсутствии обоих макросов в шаблоне номера счета к шаблону будет добавлен макрос {num}",
            "example": ""
          },
          "nextnum_payment": {
            "type": "string",
            "description": "Следующий порядковый номер счета, созданного с использованием метода оплаты. Учитывается только при условии заполнения шаблона номера счета",
            "example": "1"
          },
          "payment_description": {
            "type": "string",
            "description": "Будет отображаться в качестве наименования авансового платежа в списке платежей",
            "example": ""
          },
          "autoclearperiod": {
            "type": "string",
            "description": "Период в днях, по истечении которого со дня создания платежа он будет удален в случае неоплаты",
            "example": "1"
          },
          "pay_img_upload": {
            "type": "string",
            "description": "Загрузить иконку, которая будет отображаться клиентам при оплате услуг и выборе способа оплаты. Рекомендуемый размер изображения 32 на 32 пикселя",
            "example": ""
          },
          "orderpriority": {
            "type": "string",
            "description": "Позволяет задать приоритет метода оплаты при сортировке",
            "example": "1"
          },
          "successpage": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при успешном платеже",
            "example": "http://example.com"
          },
          "failpage": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при неудачном платеже",
            "example": "http://example.com"
          },
          "pendingpage": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при платеже в статусе \"обрабатывается\", некоторые платежи после совершения оплаты имеют статус \"обрабатывается\" и в дальнейшем могут быть подтверждены или отменены, вы можете указать страницу возврата для таких платежей",
            "example": "http://example.com"
          },
          "assign_company": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Метод оплаты будет включен в бухгалтерию компании",
            "example": "off"
          },
          "profiletype": {
            "type": "string",
            "description": "Метод оплаты будет доступен для плательщиков с указанным статусом",
            "example": ""
          },
          "accountgroup": {
            "type": "string",
            "description": "Позволяет ограничить использование метода оплаты только клиентами из выбранных групп",
            "example": ""
          },
          "deny_accountgroup": {
            "type": "string",
            "description": "Позволяет запретить использование метода оплаты клиентам из выбранных групп",
            "example": ""
          },
          "language": {
            "type": "string",
            "description": "Если язык интерфейса у клиента соответствует одному из указанных, то метод оплаты будет доступен. Если не выбрать ни одного языка, то метод оплаты будет доступен на всех языках.",
            "example": ""
          },
          "verified": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Метод оплаты может быть использоватн как метод идентификации клиента",
            "example": "off"
          },
          "recurring": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить использование рекуррентных платежей. Также используется для активации сохраненных способов оплаты при наличии возможности у платежной системы",
            "example": "off"
          },
          "successpage_recurring": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при успешном автоплатеже",
            "example": "http://example.com"
          },
          "failpage_recurring": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при неудачном автоплатеже",
            "example": "http://example.com"
          },
          "pendingpage_recurring": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при автоплатеже в статусе \"обрабатывается\", некоторые платежи после совершения оплаты имеют статус \"обрабатывается\" и в дальнейшем могут быть подтверждены или отменены, вы можете указать страницу возврата для таких платежей",
            "example": "http://example.com"
          },
          "successpage_subscription": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при успешной настройке подписки",
            "example": "http://example.com"
          },
          "failpage_subscription": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при неудачной настройке подписки",
            "example": "http://example.com"
          },
          "pendingpage_subscription": {
            "type": "string",
            "description": "Страница, на которую будет перенаправлен плательщик при подписке в статусе \"обрабатывается\"",
            "example": "http://example.com"
          },
          "allowrefund": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Разрешить полный или частичный возврат платежей совершенных методом оплаты",
            "example": "off"
          }
        }
      },
      "Paymethod_wire": {
        "type": "object",
        "properties": {
          "recipient_name": {
            "type": "string",
            "description": "Компания получатель платежа",
            "example": "text"
          },
          "bankname": {
            "type": "string",
            "description": "Название банка, в котором размещен счет",
            "example": "text"
          },
          "swift": {
            "type": "string",
            "description": "SWIFT код банка",
            "example": "text"
          },
          "account": {
            "type": "string",
            "description": "Номер банковского счёта",
            "example": "text"
          },
          "iban": {
            "type": "string",
            "description": "IBAN код",
            "example": "text"
          }
        }
      },
      "Paymethod_ruwire": {
        "type": "object",
        "properties": {
          "recipient_name": {
            "type": "string",
            "description": "Компания получатель платежа",
            "example": "text"
          },
          "bankname": {
            "type": "string",
            "description": "Название банка, в котором размещен счет",
            "example": "text"
          },
          "bik": {
            "type": "string",
            "description": "БИК код",
            "example": "000000000"
          },
          "rs": {
            "type": "string",
            "description": "Р/С",
            "example": "text"
          },
          "ks": {
            "type": "string",
            "description": "К/С",
            "example": "text"
          }
        }
      },
      "PaymethodProjectElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "PaymethodCompanyElem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Наименование сущности"
          },
          "status": {
            "type": "string",
            "description": "Текущее состояние метода оплаты по отношению к компании"
          },
          "active": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "example": "on",
            "description": "Флаг активности"
          }
        }
      },
      "OrderParamV2": {
        "type": "object",
        "properties": {
          "order_period": {
            "type": "int",
            "enum": [
              1,
              3,
              6,
              12,
              24,
              36
            ],
            "description": "Период заказа",
            "example": 1
          },
          "pricelist": {
            "type": "int",
            "description": "Идентификатор тарифного плана",
            "example": 1
          },
          "autoprolong": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить автопродление",
            "example": "on"
          },
          "datacenter": {
            "type": "int",
            "description": "Идентификатор дата-центра, в котором будет открываться услуга",
            "example": 1
          },
          "force_use_new_cart": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить использование новой корзины",
            "example": "on"
          },
          "addon_{ADDON_PRICELIST_ID}": {
            "type": "string",
            "description": "\nЗначение дополнения.\nЗначение зависит от настройки дополнения в тарифном плане.\nДополнения тарифного плана по API передаются через параметр addon_. Например, addon_5=10, где\n* 5 — код дополнения\n* 10 — значение\n\nЧтобы найти код дополнения, перейдите в Продукты → Тарифные планы → кнопка Конфиг. → поле Id\n"
          },
          "skipbasket": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "Включить оплату услуги с лицевого счёта без помещения в корзину",
            "example": "on"
          }
        }
      },
      "CartOrderPaymethod": {
        "type": "object",
        "properties": {
          "paymethod_id": {
            "type": "int",
            "description": "ID метода оплаты",
            "example": 1
          },
          "store_paymethod": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "description": "\nЕсли параметр принимает значение \"on\" и метод оплаты поддерживает возможность сохранить выбранный метод оплаты, то для клиента метод этой оплаты будет сохранён\n",
            "example": "on"
          }
        }
      },
      "CartOrderStoredmethod": {
        "type": "object",
        "properties": {
          "storedmethod_id": {
            "type": "int",
            "description": "ID сохраненного способа оплаты",
            "example": 1
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "Авторизация"
    },
    {
      "name": "project",
      "description": "Провайдеры"
    },
    {
      "name": "company",
      "description": null
    },
    {
      "name": "paymethod",
      "description": "Методы оплаты"
    },
    {
      "name": "account",
      "description": "Клиенты"
    },
    {
      "name": "subaccount",
      "description": "Лицевые счета"
    },
    {
      "name": "profile",
      "description": "Плательщики"
    },
    {
      "name": "contract",
      "description": "Договоры"
    },
    {
      "name": "accountgroup",
      "description": "Группы клиентов"
    },
    {
      "name": "payment",
      "description": "Платежи"
    },
    {
      "name": "expense",
      "description": "Расходы"
    },
    {
      "name": "pricelist",
      "description": "Тарифные планы"
    },
    {
      "name": "pricelistgroup",
      "description": "Группы тарифов"
    },
    {
      "name": "itemtype",
      "description": null
    },
    {
      "name": "order"
    },
    {
      "name": "soft",
      "description": "Лицензии"
    },
    {
      "name": "addition",
      "description": "Модули"
    },
    {
      "name": "softexternal",
      "description": "Сторонние лицензии"
    },
    {
      "name": "vhost",
      "description": "Виртуальный хостинг"
    },
    {
      "name": "dnshost",
      "description": "DNS-хостинг"
    },
    {
      "name": "colocation",
      "description": "Размещение серверов"
    },
    {
      "name": "vds",
      "description": "Виртуальные выделенные серверы"
    },
    {
      "name": "virtual_network",
      "description": "Виртуальные частные сети"
    },
    {
      "name": "certificate",
      "description": "SSL cертификаты"
    },
    {
      "name": "dedic",
      "description": "Выделенные серверы"
    },
    {
      "name": "vdc",
      "description": "Виртуальный дата-центр"
    },
    {
      "name": "domain",
      "description": "Домены"
    },
    {
      "name": "paidsupport",
      "description": "Поддержка по обращениям"
    },
    {
      "name": "storage",
      "description": "Внешнее FTP хранилище"
    },
    {
      "name": "backupservice",
      "description": "Резервное копирование"
    },
    {
      "name": "locale",
      "description": "Локализации"
    },
    {
      "name": "currency",
      "description": "Валюты"
    },
    {
      "name": "currencyrate",
      "description": "Динамика курса"
    },
    {
      "name": "promotion",
      "description": "Промо-акции"
    }
  ],
  "paths": {
    "?func=auth": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация по логину и паролю",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "description": "Имя пользователя"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "description": "Пароль"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auth": {
                      "model": {
                        "type": "object",
                        "properties": {
                          "auth": {
                            "type": "string",
                            "example": "9698eff6c576ed85f5b57875",
                            "description": "ID сессии"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=locale": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список локализаций",
        "tags": [
          "locale"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LocaleElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=locale.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание локализации",
        "tags": [
          "locale"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "locale.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/LocaleNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "locale.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=locale.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование локализации",
        "tags": [
          "locale"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "locale.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Locale"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "locale.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=locale.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление локализации",
        "tags": [
          "locale"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "locale.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "locale.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=locale.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение локализации",
        "tags": [
          "locale"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "locale.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "locale.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=locale.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение локализации",
        "tags": [
          "locale"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "locale.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "locale.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=locale.setdefault&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Выставить локаль по умолчанию",
        "tags": [
          "locale"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "locale.setdefault"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/LocaleSetdefault"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "locale.setdefault"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currency": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список валют",
        "tags": [
          "currency"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CurrencyElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currency.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание валюты",
        "tags": [
          "currency"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currency.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CurrencyNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currency.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currency.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование валюты",
        "tags": [
          "currency"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currency.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Currency"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currency.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currency.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление валюты",
        "tags": [
          "currency"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currency.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currency.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currency.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение валюты",
        "tags": [
          "currency"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currency.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currency.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currency.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение валюты",
        "tags": [
          "currency"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currency.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currency.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currency.relate&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отношения валют",
        "tags": [
          "currency"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CurrencyRelateElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currencyrate&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список курсов валюты по датам",
        "tags": [
          "currencyrate"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CurrencyrateElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currencyrate.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание курса валюты",
        "tags": [
          "currencyrate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currencyrate.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CurrencyrateNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currencyrate.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currencyrate.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование курса валюты",
        "tags": [
          "currencyrate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currencyrate.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Currencyrate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currencyrate.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currencyrate.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление курса валюты",
        "tags": [
          "currencyrate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currencyrate.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currencyrate.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currencyrate.upload&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Загрузка курса валют",
        "tags": [
          "currencyrate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currencyrate.upload"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CurrencyrateUpload"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currencyrate.upload"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=currency.upload": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Обновление курсов валют",
        "tags": [
          "currency"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "currency.upload"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CurrencyUpload"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "currency.upload"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список провайдеров",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProjectNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Project"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.locale&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список локализаций",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectLocaleElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.locale.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение локализации для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.locale.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.locale.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.locale.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение локализации для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.locale.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.locale.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.company&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список обслуживающих компаний",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectCompanyElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.company.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование взаимодействия провайдера и компании",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.company.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProjectCompany"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.company.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.company.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение компании для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.company.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.company.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.company.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение компании для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.company.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.company.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.support&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Настройка поддержки",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.support"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProjectSupport"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.support"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.taxrule&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список правил налогообложения для провайдера",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectTaxruleElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.taxrule.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание правила налогообложения для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.taxrule.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProjectTaxruleNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.taxrule.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.taxrule.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование правила налогообложения для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.taxrule.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProjectTaxrule"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.taxrule.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.taxrule.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление правила налогообложения для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.taxrule.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.taxrule.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.taxrule.settings&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Настройки налогообложения",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.taxrule.settings"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProjectTaxruleSettings"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.taxrule.settings"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.group&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список групп провайдеров",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectGroupElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.group.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание группы провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.group.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProjectGroupNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.group.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.group.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование группы провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.group.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProjectGroup"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.group.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.group.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление группы провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.group.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.group.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.group.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение группы провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.group.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.group.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.itemtype&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список типов продуктов",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectItemtypeElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.itemtype.up&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить тип продукта на одну позицию вверх",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.itemtype.up"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.itemtype.up"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.itemtype.down&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить тип продукта на одну позицию вниз",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.itemtype.down"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.itemtype.down"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.currency&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список валют доступных для провайдера",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectCurrencyElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.currency.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение валюты доступной для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.currency.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.currency.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=project.currency.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение валюты доступной для провайдера",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "project.currency.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "project.currency.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список компаний",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.add": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание компании",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.add"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CompanyAddNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.add"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование компании",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Company"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление компании",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.contract&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список образцов договоров для компании",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyContractElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.contract.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание образца договора для компании",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.contract.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CompanyContractNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.contract.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.contract.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование образца договора для компании",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.contract.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CompanyContract"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.contract.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.contract.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление образца договора для компании",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.contract.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.contract.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.contract.appendix&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список образцов приложения для договора",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyContractAppendixElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.contract.appendix.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание образца приложения для договора",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.contract.appendix.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CompanyContractAppendixNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.contract.appendix.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.contract.appendix.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование образца приложения для договора",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.contract.appendix.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CompanyContractAppendix"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.contract.appendix.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.contract.appendix.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление образца приложения для договора",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.contract.appendix.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.contract.appendix.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.project&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список обслуживаемых провайдеров",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyProjectElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.project.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение провайдера для компании",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.project.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.project.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=company.project.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение провайдера для компании",
        "tags": [
          "company"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "company.project.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "company.project.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список клиентов",
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Account"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.group&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список групп клиента",
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountGroupElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.group.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение группы клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.group.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.group.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.group.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение группы клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.group.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.group.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.orders&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказы",
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountOrdersElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.orders.project.order&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Выбор провайдера",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.orders.project.order"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountOrdersProjectOrder"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.orders.project.order"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.orders.project.cart&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Выбор провайдера",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.orders.project.cart"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountOrdersProjectCart"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.orders.project.cart"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.orders.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": null,
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.orders.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountOrders"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.orders.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.project&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список провайдеров, доступных клиенту",
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountProjectElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.project.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение провайдера для клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.project.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.project.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.project.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение провайдера для клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.project.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.project.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список лицевых счетов клиента",
        "tags": [
          "subaccount"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubaccountElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание лицевого счета клиента",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "subaccount.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/SubaccountNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "subaccount.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование лицевого счета клиента",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "subaccount.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Subaccount"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "subaccount.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение лицевого счета клиента",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "subaccount.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "subaccount.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение лицевого счета клиента",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "subaccount.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "subaccount.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.refund&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Вывод средств со счета клиента",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "subaccount.refund"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/SubaccountRefund"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "subaccount.refund"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.discount&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список персональных скидок клиента",
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountDiscountElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.discount.add&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание персональной скидки для клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.discount.add"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountDiscountAddNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.discount.add"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.discount.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование персональной скидки для клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.discount.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountDiscount"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.discount.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.discount.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление персональной скидки для клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.discount.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.discount.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.currencyrate&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список персональных курсов валют клиента",
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountCurrencyrateElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.currencyrate.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание персонального курса валюты для клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.currencyrate.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountCurrencyrateNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.currencyrate.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.currencyrate.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование персонального курса валюты для клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.currencyrate.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountCurrencyrate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.currencyrate.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.currencyrate.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление персонального курса валюты для клиента",
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.currencyrate.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.currencyrate.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.expense&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список расходов по лицевому счету",
        "tags": [
          "subaccount"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubaccountExpenseElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.expense.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание расхода для лицевого счета",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "subaccount.expense.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/SubaccountExpenseNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "subaccount.expense.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.expense.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование расхода для лицевого счета",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "subaccount.expense.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/SubaccountExpense"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "subaccount.expense.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=subaccount.expense.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление расхода для лицевого счета",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "subaccount.expense.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "subaccount.expense.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=expense.payment&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список платежей по расходу",
        "tags": [
          "expense"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExpensePaymentElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=expense.payment.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание платеж по расходу",
        "tags": [
          "expense"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "expense.payment.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ExpensePaymentNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "expense.payment.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=expense.payment.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование платеж по расходу",
        "tags": [
          "expense"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "expense.payment.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ExpensePayment"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "expense.payment.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=expense.payment.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление платеж по расходу",
        "tags": [
          "expense"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "expense.payment.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "expense.payment.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.expense": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список расходов по платежу",
        "tags": [
          "payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentExpenseElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.expense.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание расхода по платежу",
        "tags": [
          "payment"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "payment.expense.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PaymentExpenseNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "payment.expense.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.expense.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование расхода по платежу",
        "tags": [
          "payment"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "payment.expense.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PaymentExpense"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "payment.expense.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.expense.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление расхода по платежу",
        "tags": [
          "payment"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "payment.expense.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "payment.expense.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=expense": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список расходов",
        "tags": [
          "expense"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExpenseElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=expense.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование расхода",
        "tags": [
          "expense"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "expense.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Expense"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "expense.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=expense.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление расхода",
        "tags": [
          "expense"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "expense.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "expense.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список плательщиков",
        "tags": [
          "profile"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProfileElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.add": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание плательщика",
        "tags": [
          "profile"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "profile.add"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProfileAddNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "profile.add"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование плательщика",
        "tags": [
          "profile"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "profile.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Profile"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "profile.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление плательщика",
        "tags": [
          "profile"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "profile.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "profile.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.company&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список компаний плательщика",
        "tags": [
          "profile"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProfileCompanyElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.company.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение компании для плательщика",
        "tags": [
          "profile"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "profile.company.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "profile.company.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.company.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение компании для плательщика",
        "tags": [
          "profile"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "profile.company.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "profile.company.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение плательщика",
        "tags": [
          "profile"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "profile.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "profile.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение плательщика",
        "tags": [
          "profile"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "profile.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "profile.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.reconciliation&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Печать акта сверки",
        "tags": [
          "profile"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "profile.reconciliation"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ProfileReconciliation"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "profile.reconciliation"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=profile.history&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "История изменения параметров плательщика",
        "tags": [
          "profile"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProfileHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=account.orders.itemtype": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": null,
        "tags": [
          "account"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "account.orders.itemtype"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountOrdersItemtype"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "account.orders.itemtype"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=contract": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список договоров",
        "tags": [
          "contract"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContractElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=contract.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание договора",
        "tags": [
          "contract"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "contract.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ContractNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "contract.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=contract.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование договора",
        "tags": [
          "contract"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "contract.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Contract"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "contract.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=contract.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление договора",
        "tags": [
          "contract"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "contract.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "contract.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=contract.item&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Услуги по договору",
        "tags": [
          "contract"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContractItemElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=contract.item.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": null,
        "tags": [
          "contract"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "contract.item.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "contract.item.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=contract.item.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": null,
        "tags": [
          "contract"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "contract.item.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "contract.item.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список групп клиентов",
        "tags": [
          "accountgroup"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountgroupElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание группы клиентов",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountgroupNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование группы клиентов",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Accountgroup"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление группы клиентов",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.account&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список клиентов - членов группы",
        "tags": [
          "accountgroup"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountgroupAccountElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.account.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение клиента как члена группы",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.account.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.account.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.account.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение клиента как члена группы",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.account.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.account.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.taxrule&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список правил налогообложения для группы клиентов",
        "tags": [
          "accountgroup"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountgroupTaxruleElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.taxrule.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание правила налогообложения для группы клиентов",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.taxrule.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountgroupTaxruleNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.taxrule.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.taxrule.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование правила налогообложения для группы клиентов",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.taxrule.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountgroupTaxrule"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.taxrule.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.taxrule.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление правила налогообложения для группы клиентов",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.taxrule.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.taxrule.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.taxrule.settings&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Настройки налогообложения",
        "tags": [
          "accountgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "accountgroup.taxrule.settings"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/AccountgroupTaxruleSettings"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "accountgroup.taxrule.settings"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.history&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "История изменения параметров группы",
        "tags": [
          "accountgroup"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountgroupHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=accountgroup.condition&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список условий автовключения в группу",
        "tags": [
          "accountgroup"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountgroupConditionElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список платежей",
        "tags": [
          "payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование платежа",
        "tags": [
          "payment"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "payment.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Payment"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "payment.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление платежа",
        "tags": [
          "payment"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "payment.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "payment.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.refund&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отмена платежа",
        "tags": [
          "payment"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "payment.refund"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PaymentRefund"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "payment.refund"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.orderinfo&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список позиций в счете",
        "tags": [
          "payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentOrderinfoElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.orderinfo.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование позиции в счете",
        "tags": [
          "payment"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "payment.orderinfo.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PaymentOrderinfo"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "payment.orderinfo.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=payment.history&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "История изменения платежа с номером",
        "tags": [
          "payment"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список тарифов",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.archived&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Архив тарифов",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistArchivedElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.extract_archive&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Извлечение из архива",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.extract_archive"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistExtractArchive"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.extract_archive"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.up&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить тариф на одну позицию вверх",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.up"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.up"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.down&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить тариф на одну позицию вниз",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.down"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.down"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.add": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.add"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistAddNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.add"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.clone&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Выбор провайдера",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.clone"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistClone"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.clone"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.import": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Импорт тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.import"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistImport"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.import"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование тарифного плана",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.edit"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Pricelist"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.processing": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список подключений тарифа к обработчикам",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistProcessingElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.processing.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение обработчика для тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.processing.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.processing.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.processing.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение обработчика для тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.processing.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.processing.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.processing.up&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить обработчик на одну позицию вверх",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.processing.up"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.processing.up"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.processing.down&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить обработчик на одну позицию вниз",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.processing.down"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.processing.down"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список дополнений тарифа",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistDetailElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание дополнения тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistDetailNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование дополнения тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistDetail"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление дополнения тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение дополнения тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение дополнения тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.enum&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список цен дополнения с типом значения \"перечисление\"",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistDetailEnumElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.enum.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование цены дополнения с типом значения \"перечисление\"",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.enum.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistDetailEnum"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.enum.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.enum.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение цены дополнения с типом значения \"перечисление\"",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.enum.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.enum.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.enum.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение цены дополнения с типом значения \"перечисление\"",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.enum.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.enum.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.enum.up&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить цену на одну позицию вверх",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.enum.up"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.enum.up"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.enum.down&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить цену на одну позицию вниз",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.enum.down"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.enum.down"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.integer&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список цен дополнения с типом значения \"целое число\"",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistDetailIntegerElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.integer.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание цены дополнения с типом значения \"целое число\"",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.integer.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistDetailIntegerNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.integer.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.integer.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование цены дополнения с типом значения \"целое число\"",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.integer.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistDetailInteger"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.integer.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.integer.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление цены дополнения с типом значения \"целое число\"",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.integer.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.integer.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.compound&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список вариантов дополнения",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistDetailCompoundElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.compound.up&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить дополнение к тарифу на одну позицию вверх",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.compound.up"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.compound.up"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.compound.down&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить дополнение тарифу на одну позицию вниз",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.compound.down"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.compound.down"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.history&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "История изменения тарифного плана",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.up&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить дополнение к тарифу на одну позицию вверх",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.up"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.up"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.detail.down&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить дополнение тарифу на одну позицию вниз",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.detail.down"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.detail.down"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.change": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список правил смены тарифа",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistChangeElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.change.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение правила смены тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.change.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.change.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.change.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение правила смены тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.change.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.change.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.change.rule&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список особых правил смены тарифа",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistChangeRuleElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.change.rule.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание особого правила смены тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.change.rule.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistChangeRuleNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.change.rule.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.change.rule.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование особого правила смены тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.change.rule.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistChangeRule"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.change.rule.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.change.rule.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление особого правила смены тарифа",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.change.rule.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.change.rule.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.reference": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список зависимостей дополнений",
        "tags": [
          "pricelist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistReferenceElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.reference.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание зависимости",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.reference.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistReferenceNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.reference.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.reference.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование зависимости",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.reference.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistReference"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.reference.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.reference.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление зависимости",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.reference.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.reference.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelist.reference.clone&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Копировать выбранную зависимость",
        "tags": [
          "pricelist"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelist.reference.clone"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistReferenceClone"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelist.reference.clone"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=itemtype": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список типов продуктов",
        "tags": [
          "itemtype"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ItemtypeElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=itemtype.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание типа продукта",
        "tags": [
          "itemtype"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "itemtype.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ItemtypeNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "itemtype.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=itemtype.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование типа продукта",
        "tags": [
          "itemtype"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "itemtype.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Itemtype"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "itemtype.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=itemtype.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление типа продукта",
        "tags": [
          "itemtype"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "itemtype.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "itemtype.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=itemtype.up&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить тип продукта на одну позицию вверх",
        "tags": [
          "itemtype"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "itemtype.up"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "itemtype.up"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=itemtype.down&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить тип продукта на одну позицию вниз",
        "tags": [
          "itemtype"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "itemtype.down"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "itemtype.down"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelistgroup": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список групп тарифов",
        "tags": [
          "pricelistgroup"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PricelistgroupElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelistgroup.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание группы тарифов",
        "tags": [
          "pricelistgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelistgroup.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PricelistgroupNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelistgroup.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelistgroup.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование группы тарифов",
        "tags": [
          "pricelistgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelistgroup.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Pricelistgroup"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelistgroup.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=pricelistgroup.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление группы тарифов",
        "tags": [
          "pricelistgroup"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "pricelistgroup.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "pricelistgroup.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список промо-акций",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Promotion"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.discount&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список скидок для промо-акции",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionDiscountElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.discount.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание скидки для промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.discount.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionDiscountNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.discount.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.discount.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование скидки для промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.discount.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionDiscount"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.discount.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.discount.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление скидки для промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.discount.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.discount.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.condition&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список условий промо-акции",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionConditionElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.condition.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание условия промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.condition.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionConditionNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.condition.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.condition.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование условия промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.condition.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionCondition"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.condition.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.condition.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление условия промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.condition.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.condition.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.clone&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Копирование промо-акции",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.clone"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionClone"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.clone"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.history&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "История изменений промо-акции",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.archived&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Архив промо-акций",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionArchivedElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.promocode&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список промокодов",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionPromocodeElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.promocode.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание промокода",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.promocode.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionPromocodeNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.promocode.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.promocode.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование промокода",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.promocode.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionPromocode"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.promocode.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.promocode.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление промокода",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.promocode.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.promocode.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promocode.usage&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список активаций промокодов",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromocodeUsageElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.coupon&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список сертификатов",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionCouponElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.coupon.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание сертификата",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.coupon.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionCouponNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.coupon.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.coupon.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование сертификата",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.coupon.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PromotionCoupon"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.coupon.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.coupon.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление сертификата",
        "tags": [
          "promotion"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "promotion.coupon.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "promotion.coupon.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.coupon.usage&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Использование сертификата",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionCouponUsageElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.discount.history": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование скидки",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionDiscountHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.condition.history": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Условие участия в промо-акции",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionConditionHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.promocode.history": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование промокода",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionPromocodeHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.coupon.history": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Параметры сертификата",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionCouponHistoryElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=promotion.promocode.usage": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список активаций промокодов",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PromotionPromocodeUsageElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=coupon.usage": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Использование сертификатов",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CouponUsageElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=cashback.usage": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Использование кешбэка",
        "tags": [
          "promotion"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CashbackUsageElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.addition.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "addition"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.addition.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.addition.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=addition": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список модули",
        "tags": [
          "addition"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AdditionElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=addition.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование модулей",
        "tags": [
          "addition"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "addition.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Addition"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "addition.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=addition.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление модулей",
        "tags": [
          "addition"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "addition.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "addition.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=addition.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение модулей",
        "tags": [
          "addition"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "addition.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "addition.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=addition.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение модулей",
        "tags": [
          "addition"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "addition.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "addition.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.backupservice.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "backupservice"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.backupservice.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.backupservice.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=backupservice": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список услуг (резервное копирование)",
        "tags": [
          "backupservice"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupserviceElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=backupservice.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование услуги (резервное копирование)",
        "tags": [
          "backupservice"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "backupservice.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Backupservice"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "backupservice.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=backupservice.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление услуги (резервное копирование)",
        "tags": [
          "backupservice"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "backupservice.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "backupservice.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=backupservice.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение услуги (резервное копирование)",
        "tags": [
          "backupservice"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "backupservice.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "backupservice.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=backupservice.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение услуги (резервное копирование)",
        "tags": [
          "backupservice"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "backupservice.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "backupservice.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.certificate.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.certificate.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.certificate.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список SSL сертификатов",
        "tags": [
          "certificate"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CertificateElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование SSL сертификата",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Certificate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление SSL сертификата",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение SSL сертификата",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.reissue&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Перевыпуск сертификата",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.reissue"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CertificateReissue"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.reissue"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.domain_validation.redirect&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": null,
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.domain_validation.redirect"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CertificateDomainValidationRedirect"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.domain_validation.redirect"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.prolong": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ SSL сертификата",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.prolong"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CertificateProlong"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.prolong"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.dns_verify": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Подтверждение по DNS",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.dns_verify"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CertificateDnsVerify"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.dns_verify"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.domain_validation_email": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Подтверждение по Email",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.domain_validation_email"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CertificateDomainValidationEmail"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.domain_validation_email"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=certificate.file.edit": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Изменение данных сертификата",
        "tags": [
          "certificate"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "certificate.file.edit"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CertificateFile"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "certificate.file.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.colocation.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.colocation.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.colocation.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список услуг (размещение серверов)",
        "tags": [
          "colocation"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ColocationElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование услуги (размещение серверов)",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Colocation"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление услуги (размещение серверов)",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение услуги (размещение серверов)",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение услуги (размещение серверов)",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.port&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Сетевые подключения",
        "tags": [
          "colocation"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ColocationPortElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.port.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Добавление сетевого подключения",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.port.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ColocationPortNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.port.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.port.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Сетевое подключение",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.port.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ColocationPort"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.port.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.port.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": null,
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.port.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.port.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.hardware&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список оборудования",
        "tags": [
          "colocation"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ColocationHardwareElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.hardware.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Приемка оборудования",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.hardware.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ColocationHardwareNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.hardware.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.hardware.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Параметры оборудования",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.hardware.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ColocationHardware"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.hardware.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.hardware.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": null,
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.hardware.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.hardware.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=colocation.hardware.return": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Возврат оборудования",
        "tags": [
          "colocation"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "colocation.hardware.return"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/ColocationHardwareReturn"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "colocation.hardware.return"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.dedic.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "dedic"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.dedic.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.dedic.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dedic": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список выделенных серверов",
        "tags": [
          "dedic"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DedicElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dedic.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование выделенного сервера",
        "tags": [
          "dedic"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "dedic.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Dedic"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "dedic.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dedic.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление выделенного сервера",
        "tags": [
          "dedic"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "dedic.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "dedic.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dedic.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение выделенного сервера",
        "tags": [
          "dedic"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "dedic.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "dedic.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dedic.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение выделенного сервера",
        "tags": [
          "dedic"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "dedic.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "dedic.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.dnshost.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "dnshost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.dnshost.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.dnshost.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dnshost": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список DNS хостингов",
        "tags": [
          "dnshost"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DnshostElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dnshost.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование DNS хостинга",
        "tags": [
          "dnshost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "dnshost.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Dnshost"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "dnshost.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dnshost.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление DNS хостинга",
        "tags": [
          "dnshost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "dnshost.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "dnshost.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dnshost.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение DNS хостинга",
        "tags": [
          "dnshost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "dnshost.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "dnshost.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=dnshost.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение DNS хостинга",
        "tags": [
          "dnshost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "dnshost.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "dnshost.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.domain.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.domain.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.domain.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список доменов",
        "tags": [
          "domain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DomainElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование домена",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "domain.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Domain"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "domain.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление домена",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "domain.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "domain.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение домена",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "domain.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "domain.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.whois&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Информация о домене",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "domain.whois"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/DomainWhois"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "domain.whois"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.ns&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Серверы имен",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "domain.ns"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/DomainNs"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "domain.ns"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.doc&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Документы",
        "tags": [
          "domain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DomainDocElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.doc.upload&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Добавить документ",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "domain.doc.upload"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/DomainDocUpload"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "domain.doc.upload"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.doc.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Тип документа",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "domain.doc.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/DomainDoc"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "domain.doc.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=domain.doc.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удалить документ",
        "tags": [
          "domain"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "domain.doc.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "domain.doc.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.paidsupport.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "paidsupport"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.paidsupport.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.paidsupport.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paidsupport": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список услуг (платная поддержка)",
        "tags": [
          "paidsupport"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaidsupportElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paidsupport.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование услуги (платная поддержка)",
        "tags": [
          "paidsupport"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paidsupport.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Paidsupport"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paidsupport.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paidsupport.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление услуги (платная поддержка)",
        "tags": [
          "paidsupport"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paidsupport.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paidsupport.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paidsupport.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение услуги (платная поддержка)",
        "tags": [
          "paidsupport"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paidsupport.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paidsupport.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paidsupport.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение услуги (платная поддержка)",
        "tags": [
          "paidsupport"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paidsupport.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paidsupport.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paidsupport.prolong": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Поддержка по обращениям",
        "tags": [
          "paidsupport"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paidsupport.prolong"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PaidsupportProlong"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paidsupport.prolong"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.soft.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "soft"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.soft.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.soft.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=soft": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список лицензий",
        "tags": [
          "soft"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SoftElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=soft.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование лицензии",
        "tags": [
          "soft"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "soft.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Soft"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "soft.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=soft.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление лицензии",
        "tags": [
          "soft"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "soft.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "soft.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=soft.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение лицензии",
        "tags": [
          "soft"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "soft.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "soft.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=soft.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение лицензии",
        "tags": [
          "soft"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "soft.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "soft.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=soft.prolong.update": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Продление периода получения обновлений",
        "tags": [
          "soft"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "soft.prolong.update"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/SoftProlongUpdate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "soft.prolong.update"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.softexternal.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "softexternal"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.softexternal.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.softexternal.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=softexternal": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список сторонних лицензий",
        "tags": [
          "softexternal"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SoftexternalElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=softexternal.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование сторонней лицензии",
        "tags": [
          "softexternal"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "softexternal.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Softexternal"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "softexternal.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=softexternal.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление сторонней лицензии",
        "tags": [
          "softexternal"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "softexternal.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "softexternal.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=softexternal.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение сторонней лицензии",
        "tags": [
          "softexternal"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "softexternal.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "softexternal.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=softexternal.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение сторонней лицензии",
        "tags": [
          "softexternal"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "softexternal.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "softexternal.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.storage.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "storage"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.storage.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.storage.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=storage": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список внешних FTP-хранилищ",
        "tags": [
          "storage"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StorageElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=storage.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование внешнего FTP-хранилища",
        "tags": [
          "storage"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "storage.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Storage"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "storage.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=storage.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление внешнего FTP-хранилища",
        "tags": [
          "storage"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "storage.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "storage.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=storage.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение внешнего FTP-хранилища",
        "tags": [
          "storage"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "storage.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "storage.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=storage.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение внешнего FTP-хранилища",
        "tags": [
          "storage"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "storage.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "storage.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.vdc.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.vdc.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.vdc.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список виртуальных дата-центров",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Vdc"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список виртуальных серверов",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcVmElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание виртуального сервера",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVmNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование виртуального сервера",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVm"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление виртуального сервера",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение виртуального сервера",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение виртуального сервера",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.network&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Подключения к сетям виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcVmNetworkElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.network.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Добавить подключение к сети",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.network.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVmNetworkNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.network.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.network.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключить виртуальный сервер от сети",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.network.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.network.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.volume&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список дисков, подключенных к виртуальному серверу",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcVmVolumeElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.volume.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Добавить диск",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.volume.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVmVolumeNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.volume.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.volume.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключить диск от виртуального сервера",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.volume.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.volume.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.ip&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Внешние IP-адреса, подключенные к виртуальному серверу",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcVmIpElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.ip.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Добавить IP адрес",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.ip.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVmIpNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.ip.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.vm.ip.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Открепить IP от виртуального сервера",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.vm.ip.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.vm.ip.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список сетей виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcNetworkElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание сети виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.network.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcNetworkNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.network.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование сети виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.network.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcNetwork"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.network.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление сети виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.network.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.network.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение сети виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.network.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.network.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение сети виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.network.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.network.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.subnet&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список подсетей",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcNetworkSubnetElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.subnet.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание подсети",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.network.subnet.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcNetworkSubnetNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.network.subnet.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.subnet.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование подсети",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.network.subnet.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcNetworkSubnet"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.network.subnet.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.network.subnet.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление подсети",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.network.subnet.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.network.subnet.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.volume&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список дисковых хранилищ",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcVolumeElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.volume.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание дискового хранилища",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.volume.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVolumeNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.volume.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.volume.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование дискового хранилища",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.volume.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVolume"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.volume.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.volume.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление дискового хранилища",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.volume.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.volume.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.volume.snapshot&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список снимок диска",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcVolumeSnapshotElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.volume.snapshot.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание снимка диска",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.volume.snapshot.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVolumeSnapshotNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.volume.snapshot.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.volume.snapshot.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование снимка диска",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.volume.snapshot.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcVolumeSnapshot"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.volume.snapshot.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.volume.snapshot.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление снимка диска",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.volume.snapshot.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.volume.snapshot.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список маршрутизаторов виртуального дата-центра",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcRouterElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouter"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.interface&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список интерфейсы маршрутизатора",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcRouterInterfaceElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.interface.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание интерфейса маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.interface.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterInterfaceNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.interface.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.interface.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление интерфейса маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.interface.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.interface.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.interface.param&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": null,
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.interface.param"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterInterfaceParam"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.interface.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.dhcp&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список диапазонов адресов для DHCP",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcRouterDhcpElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.dhcp.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание диапазона адресов для DHCP",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.dhcp.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterDhcpNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.dhcp.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.dhcp.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование диапазона адресов для DHCP",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.dhcp.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterDhcp"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.dhcp.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.dhcp.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление диапазона адресов для DHCP",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.dhcp.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.dhcp.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.dhcp.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение диапазона адресов для DHCP",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.dhcp.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.dhcp.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.dhcp.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение диапазона адресов для DHCP",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.dhcp.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.dhcp.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.nat&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список правил NAT маршрутизатора",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcRouterNatElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.nat.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание правила NAT",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.nat.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterNatNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.nat.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.nat.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование правила NAT",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.nat.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterNat"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.nat.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.nat.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление правила NAT",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.nat.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.nat.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.nat.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение правила NAT",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.nat.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.nat.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.nat.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение правила NAT",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.nat.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.nat.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.firewall&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список правил Firewall",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcRouterFirewallElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.firewall.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание правила Firewall",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.firewall.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterFirewallNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.firewall.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.firewall.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование правила Firewall",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.firewall.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterFirewall"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.firewall.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.firewall.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление правила Firewall",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.firewall.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.firewall.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.firewall.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение правила Firewall",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.firewall.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.firewall.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.firewall.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение правила Firewall",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.firewall.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.firewall.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.vpn&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список IPSec VPN тоннелей маршрутизатора",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcRouterVpnElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.vpn.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание IPSec VPN тоннеля маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.vpn.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterVpnNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.vpn.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.vpn.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование IPSec VPN тоннеля маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.vpn.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterVpn"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.vpn.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.vpn.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление IPSec VPN тоннеля маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.vpn.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.vpn.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.vpn.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение IPSec VPN тоннеля маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.vpn.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.vpn.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.vpn.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение IPSec VPN тоннеля маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.vpn.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.vpn.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbp&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список пулов для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcRouterLbpElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbp.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание пула для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.lbp.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterLbpNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.lbp.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbp.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование пула для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.lbp.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterLbp"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.lbp.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbp.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление пула для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.lbp.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.lbp.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbs&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список серверов для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcRouterLbsElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbs.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание сервера для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.lbs.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterLbsNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.lbs.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbs.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование сервера для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.lbs.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcRouterLbs"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.lbs.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbs.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление сервера для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.lbs.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.lbs.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbs.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение сервера для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.lbs.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.lbs.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.router.lbs.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение сервера для маршрутизатора",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.router.lbs.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.router.lbs.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список балансировщиков",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcLoadbalancerElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание балансировщика",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.loadbalancer.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcLoadbalancerNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.loadbalancer.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.edit&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование балансировщика",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.loadbalancer.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcLoadbalancer"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.loadbalancer.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление балансировщика",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.loadbalancer.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.loadbalancer.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.vm&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список виртуальных серверов, подключенных к балансировщику",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcLoadbalancerVmElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.vm.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Подключить виртуальный сервер к балансировщику",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.loadbalancer.vm.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcLoadbalancerVmNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.loadbalancer.vm.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.vm.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Открепить виртуальный сервер от балансировщика",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.loadbalancer.vm.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.loadbalancer.vm.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.ip&plid={plid}&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "IP-адреса, подключенные к балансировщику",
        "tags": [
          "vdc"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "plid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор родительского элемента"
          },
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdcLoadbalancerIpElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.ip.edit&plid={plid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Подключить IP к балансировщику",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.loadbalancer.ip.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VdcLoadbalancerIpNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.loadbalancer.ip.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vdc.loadbalancer.ip.delete&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Открепить IP от балансировщика",
        "tags": [
          "vdc"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vdc.loadbalancer.ip.delete"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vdc.loadbalancer.ip.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.vds.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "vds"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.vds.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.vds.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vds": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список виртуальных выделенных серверов",
        "tags": [
          "vds"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VdsElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vds.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование виртуального выделенного сервера",
        "tags": [
          "vds"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vds.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Vds"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vds.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vds.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление виртуального выделенного сервера",
        "tags": [
          "vds"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vds.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vds.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vds.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение виртуального выделенного сервера",
        "tags": [
          "vds"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vds.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vds.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vds.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение виртуального выделенного сервера",
        "tags": [
          "vds"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vds.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vds.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.vhost.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "vhost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.vhost.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.vhost.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vhost": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список виртуальных хостингов",
        "tags": [
          "vhost"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VhostElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vhost.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование виртуального хостинга",
        "tags": [
          "vhost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vhost.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Vhost"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vhost.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vhost.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление виртуального хостинга",
        "tags": [
          "vhost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vhost.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vhost.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vhost.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение виртуального хостинга",
        "tags": [
          "vhost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vhost.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vhost.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=vhost.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение виртуального хостинга",
        "tags": [
          "vhost"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "vhost.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "vhost.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=v2.virtual_network.order.param&clicked_button=order": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Заказ услуги",
        "tags": [
          "virtual_network"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "v2.virtual_network.order.param"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/OrderParamV2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "v2.virtual_network.order.param"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=virtual_network": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список виртуальных частных сетей",
        "tags": [
          "virtual_network"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VirtualNetworkElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=virtual_network.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование виртуальной частоной сети",
        "tags": [
          "virtual_network"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "virtual_network.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/VirtualNetwork"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "virtual_network.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=virtual_network.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление виртуальной частоной сети",
        "tags": [
          "virtual_network"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "virtual_network.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "virtual_network.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=virtual_network.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение виртуальной частоной сети",
        "tags": [
          "virtual_network"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "virtual_network.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "virtual_network.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=virtual_network.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение виртуальной частоной сети",
        "tags": [
          "virtual_network"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "virtual_network.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "virtual_network.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список методов оплаты",
        "tags": [
          "paymethod"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymethodElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.add&module=pmwire": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание метода оплаты. Банковский перевод",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.add"
                        ]
                      },
                      "module": {
                        "type": "string",
                        "enum": [
                          "pmwire"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PaymethodNew"
                  },
                  {
                    "$ref": "#/components/schemas/PaymethodNew_wire"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.add"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.add&module=pmruwire": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Создание метода оплаты. Банковский перевод (Российский банк)",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.add"
                        ]
                      },
                      "module": {
                        "type": "string",
                        "enum": [
                          "pmruwire"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/PaymethodNew"
                  },
                  {
                    "$ref": "#/components/schemas/PaymethodNew_ruwire"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.add"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "id": {
                      "type": "string",
                      "description": "Уникальный идентификатор",
                      "example": "1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.edit&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Редактирование метода оплаты",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.edit"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/Paymethod"
                  },
                  {
                    "$ref": "#/components/schemas/Paymethod_wire"
                  },
                  {
                    "$ref": "#/components/schemas/Paymethod_ruwire"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.edit"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.delete&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Удаление метода оплаты",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.delete"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.delete"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.resume&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение метода оплаты",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.resume"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.suspend&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение метода оплаты",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.suspend"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.project&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список подключений метода оплаты к провайдерам",
        "tags": [
          "paymethod"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymethodProjectElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.project.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение метода оплаты для провайдера",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.project.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.project.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.project.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение метода оплаты для провайдера",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.project.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.project.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.company&elid={elid}": {
      "get": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Список подключений метода оплаты к компаниям",
        "tags": [
          "paymethod"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "elid",
            "schema": {
              "type": "int"
            },
            "description": "Уникальный идентификатор элемента"
          },
          {
            "in": "query",
            "name": "out",
            "schema": {
              "$ref": "#/components/schemas/OutFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "elem": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymethodCompanyElem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.company.resume&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Включение метода оплаты для компании",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.company.resume"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.company.resume"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.company.suspend&plid={plid}&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Отключение метода оплаты для компании",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.company.suspend"
                        ]
                      },
                      "plid": {
                        "type": "int",
                        "description": "Уникальный идентификатор родительского элемента"
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.company.suspend"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.up&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить метод оплаты на одну позицию вверх",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.up"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.up"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=paymethod.down&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Переместить метод оплаты на одну позицию вниз",
        "tags": [
          "paymethod"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "paymethod.down"
                        ]
                      },
                      "elid": {
                        "type": "int",
                        "description": "Уникальный идентификатор элемента"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string",
                      "enum": [
                        "paymethod.down"
                      ]
                    },
                    "ok": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "?func=cart&clicked_button=activate": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Корзина. Активиция бесплатных позиции в корзине",
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "cart"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "activate"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "selected": {
                        "type": "string",
                        "description": "Позиции (lineitem), выбранные для совершения операции"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "?func=cart&clicked_button=delete": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Корзина. Удаление позиций в корзине",
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "cart"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "delete"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "selected": {
                        "type": "string",
                        "description": "Позиции (lineitem), выбранные для совершения операции"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "?func=cart&clicked_button=apply_promo": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Корзина. Применения промокода к позициям в корзине",
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "cart"
                        ]
                      },
                      "clicked_button": {
                        "type": "string",
                        "enum": [
                          "apply_promo"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "selected": {
                        "type": "string",
                        "description": "Позиции (lineitem), выбранные для совершения операции"
                      },
                      "promocode": {
                        "type": "string",
                        "description": "Промокод"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "?func=cartorder.create.confirm&elid={elid}": {
      "post": {
        "security": [
          {
            "SessionAuth": []
          }
        ],
        "summary": "Оплата позиций в корзине",
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "cartorder.create.confirm"
                        ]
                      },
                      "sok": {
                        "type": "string",
                        "enum": [
                          "ok"
                        ]
                      },
                      "elid": {
                        "type": "string",
                        "description": "Позиции (lineitem), выбранные заказа"
                      },
                      "profile_id": {
                        "type": "string",
                        "description": "ID плательщика"
                      },
                      "out": {
                        "type": "string",
                        "enum": [
                          "bjson"
                        ],
                        "default": "bjson"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CartOrderPaymethod"
                  },
                  {
                    "$ref": "#/components/schemas/CartOrderStoredmethod"
                  }
                ]
              }
            }
          }
        }
      }
    }
  }
}